// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: protos/HardCordGirlDataClass.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace HardCordGirlData {

  /// <summary>Holder for reflection information generated from protos/HardCordGirlDataClass.proto</summary>
  public static partial class HardCordGirlDataClassReflection {

    #region Descriptor
    /// <summary>File descriptor for protos/HardCordGirlDataClass.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static HardCordGirlDataClassReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiJwcm90b3MvSGFyZENvcmRHaXJsRGF0YUNsYXNzLnByb3RvEhFIYXJkQ29y",
            "ZEdpcmxfRGF0YSIwChBQcm9wc1BpY2tVcF9JbmZvEgoKAklkGAEgAigFEhAK",
            "CHBsYXllcklkGAIgAigFIlwKDFByb3BVc2VfSW5mbxIKCgJJZBgBIAIoBRIQ",
            "CghwbGF5ZXJJZBgCIAIoBRIuCghiYWxsSW5mbxgDIAIoCzIcLkhhcmRDb3Jk",
            "R2lybF9EYXRhLkJBTExfSU5GTyIwChBQcm9wRGlzY2FyZF9JbmZvEgoKAklk",
            "GAEgAigFEhAKCHBsYXllcklkGAIgAigFIn8KFFByb3BTdGF0ZUNoYW5nZV9J",
            "bmZvEgoKAklkGAEgAigFEhAKCG9sZFN0YXRlGAIgAigFEhAKCG5ld1N0YXRl",
            "GAMgAigFEg4KBm93ZXJJZBgEIAIoBRInCgNwb3MYBSACKAsyGi5IYXJkQ29y",
            "ZEdpcmxfRGF0YS5WRUNUT1IzIioKB1ZFQ1RPUjMSCQoBWBgBIAIoAhIJCgFZ",
            "GAIgAigCEgkKAVoYAyACKAIiNQoHVkVDVE9SNBIJCgFYGAEgAigCEgkKAVkY",
            "AiACKAISCQoBWhgDIAIoAhIJCgFXGAQgAigCIrgBCglCQUxMX0lORk8SJwoD",
            "UE9TGAEgAigLMhouSGFyZENvcmRHaXJsX0RhdGEuVkVDVE9SMxItCglESVJF",
            "Q1RJT04YAiACKAsyGi5IYXJkQ29yZEdpcmxfRGF0YS5WRUNUT1IzEicKA1JP",
            "VBgDIAIoCzIaLkhhcmRDb3JkR2lybF9EYXRhLlZFQ1RPUjMSKgoGVG9ycXVl",
            "GAQgAigLMhouSGFyZENvcmRHaXJsX0RhdGEuVkVDVE9SMyJGChBQcm9wQ29u",
            "c29sZV9JbmZvEgwKBHR5cGUYASACKAUSEAoIZXZlbnROdW0YAiACKAUSEgoK",
            "ZXZlbnRTdGF0ZRgDIAIoBSJBCg5Qcm9wU291bmRfSW5mbxINCgVtZWRpYRgB",
            "IAIoAhISCgptaWNyb3Bob25lGAIgAigCEgwKBHByb3AYAyACKAIiLAoNUGxh",
            "eWVyS2V5V29yZBIKCgJJZBgBIAIoBRIPCgdrZXlXb3JkGAIgAigJIkQKD1Bs",
            "YXllcktleVdvcmRJZBIKCgJJZBgBIAIoBRISCgplcnJvclRpbWVzGAIgAigF",
            "EhEKCWtleVdvcmRJZBgDIAMoBSJdChFQbGF5ZXJLZXlXb3JkSW5mbxIQCghp",
            "c0luR2FtZRgBIAIoCBI2CgpwbGF5ZXJJbmZvGAIgASgLMiIuSGFyZENvcmRH",
            "aXJsX0RhdGEuUGxheWVyS2V5V29yZElkIloKFlBsYXllcktleVdvcmRJbmZv",
            "X0xpc3QSQAoScGxheWVyS2V5V29yZEluZm9zGAEgAygLMiQuSGFyZENvcmRH",
            "aXJsX0RhdGEuUGxheWVyS2V5V29yZEluZm8ibwoaSU5TSURFTUFOX0lERU5U",
            "SVRZX19OT1RJRlkSEQoJaXNFbmRHYW1lGAEgAigIEj4KFFBMQVlFUl9JREVO",
            "VElUWV9MSVNUGAIgAygLMiAuSGFyZENvcmRHaXJsX0RhdGEuUGxheWVyS2V5",
            "V29yZCIqChZJbnNpZGVNYW5fU2VsZWN0UGxheWVyEhAKCHBsYXllcklkGAEg",
            "AigFIjIKElBsYXllcklkZW50aXR5TGlzdBIKCgJpZBgBIAMoBRIQCghpZGVu",
            "dGl0eRgCIAMoBSIwCg9QbGF5ZXJMZXZlbEluZm8SDgoGdXNlcklkGAEgAigF",
            "Eg0KBWxldmVsGAIgAigFIkwKFVBsYXllck9yZ2FuaXplUG9zRGF0YRIKCgJp",
            "ZBgBIAIoBRInCgNwb3MYAiACKAsyGi5IYXJkQ29yZEdpcmxfRGF0YS5WRUNU",
            "T1IzIkMKCkFuc3dlckluZm8SEgoKYW5zd2VyVHlwZRgBIAIoBRIOCgZhbnN3",
            "ZXIYAiACKAkSEQoJaXNDb3JyZWN0GAMgAigIInEKDkd1THVfQW5zd2VyX1FB",
            "EhAKCHF1ZXN0aW9uGAEgAigJEgsKA3FJZBgCIAIoBRINCgVyb3VuZBgDIAIo",
            "BRIxCgphbnN3ZXJMaXN0GAQgAygLMh0uSGFyZENvcmRHaXJsX0RhdGEuQW5z",
            "d2VySW5mbyJQCg5HdUx1X01lbW9yeV9RQRINCgVyb3VuZBgBIAIoBRIPCgdw",
            "aWNUeXBlGAIgAigFEgwKBHBpY3MYAyADKAUSEAoIaGV4YWdvbnMYBCADKAUi",
            "SAoVR3VMdV9DaGFuZ2VTY2VuZV9JbmZvEg4KBmlzQmFjaxgBIAIoCBIPCgdz",
            "Y2VuZUlkGAIgAigFEg4KBnJvb21JZBgDIAIoBSI5ChNHdUx1X1BsYXllck91",
            "dF9JbmZvEhAKCHBsYXllcklkGAEgAigFEhAKCG91dFJvdW5kGAIgAigFIlkK",
            "G0d1THVfUGxheWVyQmxhY2tTY3JlZW5fSW5mbxIQCghwbGF5ZXJJZBgBIAIo",
            "BRIVCg1pc0JsYWNrU2NyZWVuGAIgAigIEhEKCXNhZmVQb3NJZBgDIAIoBSI/",
            "ChlHdUx1X1BsYXllcl9TcGF3blBvc0luZGV4EhAKCHBsYXllcklkGAEgAygN",
            "EhAKCHBvc0luZGV4GAIgAygFItEBChdHdUx1X01pbmlHYW1lU3RhcnRfSW5m",
            "bxIQCghwbGF5ZXJJZBgBIAIoBRIQCghnYW1lVHlwZRgCIAIoBRIRCglnYW1l",
            "VGhlbWUYAyACKAUSEQoJc2NlbmVMb2FkGAQgAigIEhEKCWdhbWVJbmRleBgF",
            "IAIoBRIUCgxjdXJHYW1lSW5kZXgYBiACKAUSQwoNcGxheWVyUG9zTGlzdBgH",
            "IAEoCzIsLkhhcmRDb3JkR2lybF9EYXRhLkd1THVfUGxheWVyX1NwYXduUG9z",
            "SW5kZXgiXgoVR3VMdV9NaW5pR2FtZUVuZF9JbmZvEhAKCHBsYXllcklkGAEg",
            "AigFEhAKCGVuZFJvdW5kGAIgAigFEhAKCG5lZWRCYWNrGAMgAigIEg8KB3dp",
            "blRlYW0YBCABKAUiTwoOR3VMdV9Cb21iX0luZm8SEAoIYm9tYlR5cGUYASAC",
            "KAUSFQoNYm9tYlNhcHduVGltZRgCIAIoAhIUCgxib21iU2Fwd25Qb3MYAyAC",
            "KAUiVgoTR3VMdV9Cb21iU3Bhd25fSW5mbxINCgVyb3VuZBgBIAIoBRIwCgVi",
            "b21icxgCIAMoCzIhLkhhcmRDb3JkR2lybF9EYXRhLkd1THVfQm9tYl9JbmZv",
            "IlQKHUd1THVfQnVtcGVyQ2FyX0hpdFBsYXllcl9JbmZvEgoKAmlkGAEgAigF",
            "EicKA3BvcxgCIAIoCzIaLkhhcmRDb3JkR2lybF9EYXRhLlZFQ1RPUjMiRQof",
            "R3VMdV9CdW1wZXJDYXJfU2hha2luZ0FyZWFfSW5mbxINCgVyb3VuZBgBIAIo",
            "BRITCgtzaGFraW5nVGltZRgCIAIoBSJFCiNHdUx1X0J1bXBlckNhcl9QbGF5",
            "RW5naW5lU291bmRfSW5mbxIKCgJpZBgBIAIoBRISCgpwaXRjaFZhbHVlGAIg",
            "AigCIlsKHUd1THVfQk5CX1BsYXllclNwYXduQm9tYl9JbmZvEgkKAXgYASAC",
            "KAUSCQoBehgCIAIoBRISCgpib21iTGVuZ3RoGAMgAigFEhAKCHBsYXllcklk",
            "GAQgAigNIl8KEUd1THVfU25vd0JhbGxfSGl0EhAKCHBsYXllcklkGAEgAigF",
            "EgwKBHR5cGUYAiACKAUSKgoGSGl0UG9zGAMgAigLMhouSGFyZENvcmRHaXJs",
            "X0RhdGEuVkVDVE9SMyIaCgxEYXRhX0lEX0RhdGESCgoCaWQYASACKA0iZgoQ",
            "UGxheWVyT25IaXRfSW5mbxIVCg1vbkhpdFBsYXllcklkGAEgAigNEg4KBmRh",
            "bWFnZRgCIAIoBRIWCg5hdHRhY2tQbGF5ZXJJZBgDIAIoDRITCgtidWxsZXRD",
            "b2xvchgEIAIoBSIuChFEYXRhX0lEX0Jvb2xfRGF0YRIKCgJpZBgBIAIoDRIN",
            "CgVzdGF0ZRgCIAIoCCJrChhHdUx1X0NoYW5nZVN1YlNjZW5lX0luZm8SDwoH",
            "c2NlbmVJZBgBIAIoBRIOCgZyb29tSWQYAiACKAUSDQoFbWFwSWQYAyACKAUS",
            "EAoIdGltZVRpY2sYBCACKAUSDQoFd2F2ZXMYBSACKAUiiwEKDlBvcENhcEJl",
            "YWREYXRhEgoKAmlkGAEgAigNEhAKCGJlYWRUeXBlGAIgAigFEisKB2JlYWRQ",
            "b3MYAyACKAsyGi5IYXJkQ29yZEdpcmxfRGF0YS5WRUNUT1IzEi4KB2JlYWRS",
            "b3QYBCACKAsyHS5IYXJkQ29yZEdpcmxfRGF0YS5RVUFURUVOSU9OIjgKClFV",
            "QVRFRU5JT04SCQoBWBgBIAIoAhIJCgFZGAIgAigCEgkKAVoYAyACKAISCQoB",
            "dxgEIAIoAiJhChVQb3BDYXBCZWFkVHJpZ2dlckRhdGESCgoCaWQYASACKA0S",
            "DgoGbGlzdElkGAIgAigFEhUKDXRyaWdnZXJMaW5rSUQYAyACKAUSFQoNdHJp",
            "Z2dlckJlYWRJRBgEIAIoBSJFChJQb3BDYXBCZWFkVW5pdERhdGESGQoRYXZh",
            "aWxhYmxlQmVhZFR5cGUYASACKAUSFAoMbGlzdFBsYXllcklEGAIgAygFIiYK",
            "ElBvcENhcEdhbWVPdmVyRGF0YRIQCghvdmVyVGVtcBgBIAIoBSJhChlQb3BD",
            "YXBCZWFkVHJpZ2dlckRhdGFfRmx5EgoKAmlkGAEgAigNEg4KBmxpc3RJZBgC",
            "IAIoBRIRCgl0cmlnZ2VySWQYAyACKA0SFQoNdHJpZ2dlckxpc3RJZBgEIAIo",
            "BSIxCg1HdUx1X0NTX0VOVEVSEhAKCHBsYXllcklkGAEgAigNEg4KBmlzT3Bl",
            "bhgCIAIoCCK4AQoJR3VMdV9EaWNlEicKA1BPUxgBIAIoCzIaLkhhcmRDb3Jk",
            "R2lybF9EYXRhLlZFQ1RPUjMSJwoDUk9UGAIgAigLMhouSGFyZENvcmRHaXJs",
            "X0RhdGEuVkVDVE9SMxItCglESVJFQ1RJT04YAyACKAsyGi5IYXJkQ29yZEdp",
            "cmxfRGF0YS5WRUNUT1IzEioKBlRvcnF1ZRgEIAIoCzIaLkhhcmRDb3JkR2ly",
            "bF9EYXRhLlZFQ1RPUjMiMwoPR3VMdV9EQU5DRV9JTkZPEg8KB2RhbmNlSWQY",
            "ASACKA0SDwoHaXNEYW5jZRgCIAIoCCK8BAoLVHJhY2tlckRhdGESEAoIcGxh",
            "eWVySWQYASACKAUSKwoHaGVhZFBvcxgCIAIoCzIaLkhhcmRDb3JkR2lybF9E",
            "YXRhLlZFQ1RPUjMSKgoGaGlwUG9zGAMgAigLMhouSGFyZENvcmRHaXJsX0Rh",
            "dGEuVkVDVE9SMxIpCgVsaFBvcxgEIAIoCzIaLkhhcmRDb3JkR2lybF9EYXRh",
            "LlZFQ1RPUjMSKQoFcmhQb3MYBSACKAsyGi5IYXJkQ29yZEdpcmxfRGF0YS5W",
            "RUNUT1IzEikKBWxsUG9zGAYgAigLMhouSGFyZENvcmRHaXJsX0RhdGEuVkVD",
            "VE9SMxIpCgVybFBvcxgHIAIoCzIaLkhhcmRDb3JkR2lybF9EYXRhLlZFQ1RP",
            "UjMSKwoHaGVhZFJvdBgIIAIoCzIaLkhhcmRDb3JkR2lybF9EYXRhLlZFQ1RP",
            "UjQSKgoGaGlwUm90GAkgAigLMhouSGFyZENvcmRHaXJsX0RhdGEuVkVDVE9S",
            "NBIpCgVsaFJvdBgKIAIoCzIaLkhhcmRDb3JkR2lybF9EYXRhLlZFQ1RPUjQS",
            "KQoFcmhSb3QYCyACKAsyGi5IYXJkQ29yZEdpcmxfRGF0YS5WRUNUT1I0EikK",
            "BWxsUm90GAwgAigLMhouSGFyZENvcmRHaXJsX0RhdGEuVkVDVE9SNBIpCgVy",
            "bFJvdBgNIAIoCzIaLkhhcmRDb3JkR2lybF9EYXRhLlZFQ1RPUjQSEQoJcHJv",
            "dG9UeXBlGA4gAigFIn8KDk1vZGVsU2NhbGVEYXRhEhAKCHBsYXllcklkGAEg",
            "AigFEi0KCWhpZ2hTY2FsZRgCIAIoCzIaLkhhcmRDb3JkR2lybF9EYXRhLlZF",
            "Q1RPUjMSLAoIYXJtU2NhbGUYAyACKAsyGi5IYXJkQ29yZEdpcmxfRGF0YS5W",
            "RUNUT1IzImMKD1NwYXduQnViYmxlRGF0YRIMCgR0eXBlGAEgAigFEhAKCHBs",
            "YXllcklkGAIgAigFEjAKCWJEYXRhTGlzdBgDIAMoCzIdLkhhcmRDb3JkR2ly",
            "bF9EYXRhLkJ1YmJsZURhdGEibgoKQnViYmxlRGF0YRIQCghwbGF5ZXJJZBgB",
            "IAIoBRIQCghidWJibGVJZBgCIAIoCRIMCgRyZG1YGAMgAigCEgwKBHJkbVkY",
            "BCACKAISDAoEcmRtWhgFIAIoAhISCgpjb2xvckluZGV4GAYgAigFIkIKD0Jy",
            "ZWFrQnViYmxlRGF0YRIQCghidWJibGVJZBgBIAIoCRIPCgdzb3VuZElkGAIg",
            "AigFEgwKBHR5cGUYAyACKAUiYwoPU3Bhd25SaWJib25EYXRhEgwKBHR5cGUY",
            "ASACKAUSEAoIcGxheWVySWQYAiACKAUSMAoJYkRhdGFMaXN0GAMgAygLMh0u",
            "SGFyZENvcmRHaXJsX0RhdGEuUmliYm9uRGF0YSJuCgpSaWJib25EYXRhEhAK",
            "CHBsYXllcklkGAEgAigFEhAKCHJpYmJvbklkGAIgAigJEgwKBHJkbVgYAyAC",
            "KAISDAoEcmRtWRgEIAIoAhIMCgRyZG1aGAUgAigCEhIKCmNvbG9ySW5kZXgY",
            "BiACKAUiSAoVRmluaW5zaFJpYmJvblBhdGhEYXRhEhAKCHJpYmJvbklkGAEg",
            "AigJEg8KB3NvdW5kSWQYAiACKAUSDAoEdHlwZRgDIAIoBSJTCgxEYW5jZUNt",
            "ZERhdGESDAoEbmFtZRgBIAIoCRILCgNjbWQYAiACKAUSFQoNYW5pbWF0aW9u",
            "TmFtZRgDIAIoCRIRCgl2aWRlb1BhdGgYBCACKAkiRwoPV2F2aW5nU3RpY2tE",
            "YXRhEhAKCHBsYXllcklkGAEgAigFEg4KBmhhbmRJZBgCIAIoBRISCgpjb2xv",
            "ckluZGV4GAMgAigFIl8KFkN0cmxGdWxsQm9keVBsYXllckRhdGESFAoMc2Vu",
            "ZFBsYXllcklkGAEgAigFEhgKEGZ1bGxCb2R5UGxheWVySWQYAiACKAUSFQoN",
            "YXBwZWFyZWRTdGF0ZRgDIAIoBSJeChhGdWxsQm9keVBsYXllckFjdGlvbkRh",
            "dGESFAoMc2VuZFBsYXllcklkGAEgAigFEhgKEGZ1bGxCb2R5UGxheWVySWQY",
            "AiACKAUSEgoKYWN0aW9uVHlwZRgDIAIoBSI8ChBQbGF5ZXJBY3Rpb25EYXRh",
            "EhQKDHNlbmRQbGF5ZXJJZBgBIAIoBRISCgphY3Rpb25UeXBlGAIgAigFIjIK",
            "DEd1bk93bmVyRGF0YRIQCghwbGF5ZXJJZBgBIAIoBRIQCghoYW5kVHlwZRgC",
            "IAIoBSKFAQoKR3VuUG9zRGF0YRIPCgdndW5UeXBlGAEgAigFEhIKCmN1ckJ1",
            "bGxldHMYAiACKAUSJwoDcG9zGAMgAigLMhouSGFyZENvcmRHaXJsX0RhdGEu",
            "VkVDVE9SMxIpCgVldWxlchgEIAIoCzIaLkhhcmRDb3JkR2lybF9EYXRhLlZF",
            "Q1RPUjMieQoMU3Bhd25HdW5EYXRhEhAKCHBsYXllcklkGAEgAigFEhAKCGhh",
            "bmRUeXBlGAIgAigFEg4KBm9iaklkcxgDIAMoBRIPCgdndW5UeXBlGAQgAigF",
            "Eg8KB2lzQm91bmQYBSACKAgSEwoLaXNVbmxpbWl0ZWQYBiACKAgiUwoLR3Jh",
            "Ykd1bkRhdGESEAoIcGxheWVySWQYASACKAUSEAoIaGFuZFR5cGUYAiACKAUS",
            "DQoFZ3VuSWQYAyACKAUSEQoJZ3VuTW9kdWxlGAQgAigFIrABCg1VbkdyYWJH",
            "dW5EYXRhEhAKCHBsYXllcklkGAEgAigFEhAKCGhhbmRUeXBlGAIgAigFEg0K",
            "BWd1bklkGAMgAigFEhEKCWd1bk1vZHVsZRgEIAIoBRIsCgh2ZWxvY2l0eRgF",
            "IAIoCzIaLkhhcmRDb3JkR2lybF9EYXRhLlZFQ1RPUjMSKwoHYW5ndWxhchgG",
            "IAIoCzIaLkhhcmRDb3JkR2lybF9EYXRhLlZFQ1RPUjMiLgoKVXNlR3VuRGF0",
            "YRINCgVndW5JZBgBIAIoBRIRCgljdXJCdWxsZXQYAiACKAUiSAoRU3Bhd25N",
            "YWdhemluZURhdGESEAoIcGxheWVySWQYASACKAUSEAoIaGFuZFR5cGUYAiAC",
            "KAUSDwoHZ3VuVHlwZRgDIAIoBSJFChBMb2FkTWFnYXppbmVEYXRhEhAKCHBs",
            "YXllcklkGAEgAigFEhAKCGhhbmRUeXBlGAIgAigFEg0KBWd1bklkGAMgAigF",
            "IsYBChNQbGF5ZXJHZXREYW1hZ2VEYXRhEhYKDmF0dGFja1BsYXllcklkGAEg",
            "AigFEhkKEWdldERhbWFnZVBsYXllcklkGAIgAigFEg4KBmRhbWFnZRgDIAIo",
            "BRIPCgdndW5UeXBlGAQgAigFEiwKCGxvY2FsUG9zGAUgAigLMhouSGFyZENv",
            "cmRHaXJsX0RhdGEuVkVDVE9SMxItCgloaXROb3JtYWwYBiACKAsyGi5IYXJk",
            "Q29yZEdpcmxfRGF0YS5WRUNUT1IzIj4KDlBsYXllckRlYWREYXRhEhYKDmF0",
            "dGFja1BsYXllcklkGAEgAigFEhQKDGRlYWRQbGF5ZXJJZBgCIAIoBSI8ChRD",
            "aGFuZ2VSb29tU3RhdHVzRGF0YRIQCghwbGF5ZXJJZBgBIAIoBRISCgpyb29t",
            "U3RhdXRzGAIgAigFIjgKE1RBRm9vdFN0ZXBTb3VuZERhdGESEAoIcGxheWVy",
            "SWQYASACKAUSDwoHc291bmRJZBgCIAIoBSJHChxDaGFuZ2VUaGVhdGVyTGln",
            "aHRFZmZlY3REYXRhEhcKD2xpZ2h0RWZmZWN0VHlwZRgBIAIoCRIOCgZpc09w",
            "ZW4YAiACKAgi6QEKEEt0dlNvbmdTdGFydERhdGESEAoIcGxheWVySWQYASAC",
            "KAUSDgoGc29uZ0lkGAIgAigJEhgKEGhhc0FjY29tcGFuaW1lbnQYAyACKAgS",
            "GQoRc29uZ1RvdGFsRHVyYXRpb24YBCACKAMSFAoMcHVsbFN0cmVhbUlkGAUg",
            "AigJEhAKCHNvbmdOYW1lGAYgAigJEhYKDm9yaWdpbmFsU2luZ2VyGAcgAigJ",
            "EhIKCnNoYXJlVG9rZW4YCCACKAkSEgoKcGxheWVyTmFtZRgJIAIoCRIWCg5j",
            "aGFyYWN0ZXJpc3RpYxgKIAIoBSJIChFLdHZTb25nQ2hvcnVzRGF0YRIQCghw",
            "bGF5ZXJJZBgBIAIoBRIOCgZzb25nSWQYAiACKAkSEQoJZGVsYXlUaW1lGAMg",
            "AigDIjkKDFR1dG9yaWFsSW5mbxISCgpzdGFnZUluZGV4GAEgAygFEhUKDXR1",
            "dG9yaWFsU3RhdGUYAiADKAU="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::HardCordGirlData.PropsPickUp_Info), global::HardCordGirlData.PropsPickUp_Info.Parser, new[]{ "Id", "PlayerId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HardCordGirlData.PropUse_Info), global::HardCordGirlData.PropUse_Info.Parser, new[]{ "Id", "PlayerId", "BallInfo" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HardCordGirlData.PropDiscard_Info), global::HardCordGirlData.PropDiscard_Info.Parser, new[]{ "Id", "PlayerId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HardCordGirlData.PropStateChange_Info), global::HardCordGirlData.PropStateChange_Info.Parser, new[]{ "Id", "OldState", "NewState", "OwerId", "Pos" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HardCordGirlData.VECTOR3), global::HardCordGirlData.VECTOR3.Parser, new[]{ "X", "Y", "Z" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HardCordGirlData.VECTOR4), global::HardCordGirlData.VECTOR4.Parser, new[]{ "X", "Y", "Z", "W" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HardCordGirlData.BALL_INFO), global::HardCordGirlData.BALL_INFO.Parser, new[]{ "POS", "DIRECTION", "ROT", "Torque" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HardCordGirlData.PropConsole_Info), global::HardCordGirlData.PropConsole_Info.Parser, new[]{ "Type", "EventNum", "EventState" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HardCordGirlData.PropSound_Info), global::HardCordGirlData.PropSound_Info.Parser, new[]{ "Media", "Microphone", "Prop" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HardCordGirlData.PlayerKeyWord), global::HardCordGirlData.PlayerKeyWord.Parser, new[]{ "Id", "KeyWord" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HardCordGirlData.PlayerKeyWordId), global::HardCordGirlData.PlayerKeyWordId.Parser, new[]{ "Id", "ErrorTimes", "KeyWordId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HardCordGirlData.PlayerKeyWordInfo), global::HardCordGirlData.PlayerKeyWordInfo.Parser, new[]{ "IsInGame", "PlayerInfo" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HardCordGirlData.PlayerKeyWordInfo_List), global::HardCordGirlData.PlayerKeyWordInfo_List.Parser, new[]{ "PlayerKeyWordInfos" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HardCordGirlData.INSIDEMAN_IDENTITY__NOTIFY), global::HardCordGirlData.INSIDEMAN_IDENTITY__NOTIFY.Parser, new[]{ "IsEndGame", "PLAYERIDENTITYLIST" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HardCordGirlData.InsideMan_SelectPlayer), global::HardCordGirlData.InsideMan_SelectPlayer.Parser, new[]{ "PlayerId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HardCordGirlData.PlayerIdentityList), global::HardCordGirlData.PlayerIdentityList.Parser, new[]{ "Id", "Identity" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HardCordGirlData.PlayerLevelInfo), global::HardCordGirlData.PlayerLevelInfo.Parser, new[]{ "UserId", "Level" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HardCordGirlData.PlayerOrganizePosData), global::HardCordGirlData.PlayerOrganizePosData.Parser, new[]{ "Id", "Pos" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HardCordGirlData.AnswerInfo), global::HardCordGirlData.AnswerInfo.Parser, new[]{ "AnswerType", "Answer", "IsCorrect" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HardCordGirlData.GuLu_Answer_QA), global::HardCordGirlData.GuLu_Answer_QA.Parser, new[]{ "Question", "QId", "Round", "AnswerList" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HardCordGirlData.GuLu_Memory_QA), global::HardCordGirlData.GuLu_Memory_QA.Parser, new[]{ "Round", "PicType", "Pics", "Hexagons" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HardCordGirlData.GuLu_ChangeScene_Info), global::HardCordGirlData.GuLu_ChangeScene_Info.Parser, new[]{ "IsBack", "SceneId", "RoomId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HardCordGirlData.GuLu_PlayerOut_Info), global::HardCordGirlData.GuLu_PlayerOut_Info.Parser, new[]{ "PlayerId", "OutRound" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HardCordGirlData.GuLu_PlayerBlackScreen_Info), global::HardCordGirlData.GuLu_PlayerBlackScreen_Info.Parser, new[]{ "PlayerId", "IsBlackScreen", "SafePosId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HardCordGirlData.GuLu_Player_SpawnPosIndex), global::HardCordGirlData.GuLu_Player_SpawnPosIndex.Parser, new[]{ "PlayerId", "PosIndex" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HardCordGirlData.GuLu_MiniGameStart_Info), global::HardCordGirlData.GuLu_MiniGameStart_Info.Parser, new[]{ "PlayerId", "GameType", "GameTheme", "SceneLoad", "GameIndex", "CurGameIndex", "PlayerPosList" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HardCordGirlData.GuLu_MiniGameEnd_Info), global::HardCordGirlData.GuLu_MiniGameEnd_Info.Parser, new[]{ "PlayerId", "EndRound", "NeedBack", "WinTeam" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HardCordGirlData.GuLu_Bomb_Info), global::HardCordGirlData.GuLu_Bomb_Info.Parser, new[]{ "BombType", "BombSapwnTime", "BombSapwnPos" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HardCordGirlData.GuLu_BombSpawn_Info), global::HardCordGirlData.GuLu_BombSpawn_Info.Parser, new[]{ "Round", "Bombs" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HardCordGirlData.GuLu_BumperCar_HitPlayer_Info), global::HardCordGirlData.GuLu_BumperCar_HitPlayer_Info.Parser, new[]{ "Id", "Pos" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HardCordGirlData.GuLu_BumperCar_ShakingArea_Info), global::HardCordGirlData.GuLu_BumperCar_ShakingArea_Info.Parser, new[]{ "Round", "ShakingTime" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HardCordGirlData.GuLu_BumperCar_PlayEngineSound_Info), global::HardCordGirlData.GuLu_BumperCar_PlayEngineSound_Info.Parser, new[]{ "Id", "PitchValue" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HardCordGirlData.GuLu_BNB_PlayerSpawnBomb_Info), global::HardCordGirlData.GuLu_BNB_PlayerSpawnBomb_Info.Parser, new[]{ "X", "Z", "BombLength", "PlayerId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HardCordGirlData.GuLu_SnowBall_Hit), global::HardCordGirlData.GuLu_SnowBall_Hit.Parser, new[]{ "PlayerId", "Type", "HitPos" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HardCordGirlData.Data_ID_Data), global::HardCordGirlData.Data_ID_Data.Parser, new[]{ "Id" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HardCordGirlData.PlayerOnHit_Info), global::HardCordGirlData.PlayerOnHit_Info.Parser, new[]{ "OnHitPlayerId", "Damage", "AttackPlayerId", "BulletColor" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HardCordGirlData.Data_ID_Bool_Data), global::HardCordGirlData.Data_ID_Bool_Data.Parser, new[]{ "Id", "State" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HardCordGirlData.GuLu_ChangeSubScene_Info), global::HardCordGirlData.GuLu_ChangeSubScene_Info.Parser, new[]{ "SceneId", "RoomId", "MapId", "TimeTick", "Waves" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HardCordGirlData.PopCapBeadData), global::HardCordGirlData.PopCapBeadData.Parser, new[]{ "Id", "BeadType", "BeadPos", "BeadRot" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HardCordGirlData.QUATEENION), global::HardCordGirlData.QUATEENION.Parser, new[]{ "X", "Y", "Z", "W" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HardCordGirlData.PopCapBeadTriggerData), global::HardCordGirlData.PopCapBeadTriggerData.Parser, new[]{ "Id", "ListId", "TriggerLinkID", "TriggerBeadID" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HardCordGirlData.PopCapBeadUnitData), global::HardCordGirlData.PopCapBeadUnitData.Parser, new[]{ "AvailableBeadType", "ListPlayerID" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HardCordGirlData.PopCapGameOverData), global::HardCordGirlData.PopCapGameOverData.Parser, new[]{ "OverTemp" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HardCordGirlData.PopCapBeadTriggerData_Fly), global::HardCordGirlData.PopCapBeadTriggerData_Fly.Parser, new[]{ "Id", "ListId", "TriggerId", "TriggerListId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HardCordGirlData.GuLu_CS_ENTER), global::HardCordGirlData.GuLu_CS_ENTER.Parser, new[]{ "PlayerId", "IsOpen" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HardCordGirlData.GuLu_Dice), global::HardCordGirlData.GuLu_Dice.Parser, new[]{ "POS", "ROT", "DIRECTION", "Torque" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HardCordGirlData.GuLu_DANCE_INFO), global::HardCordGirlData.GuLu_DANCE_INFO.Parser, new[]{ "DanceId", "IsDance" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HardCordGirlData.TrackerData), global::HardCordGirlData.TrackerData.Parser, new[]{ "PlayerId", "HeadPos", "HipPos", "LhPos", "RhPos", "LlPos", "RlPos", "HeadRot", "HipRot", "LhRot", "RhRot", "LlRot", "RlRot", "ProtoType" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HardCordGirlData.ModelScaleData), global::HardCordGirlData.ModelScaleData.Parser, new[]{ "PlayerId", "HighScale", "ArmScale" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HardCordGirlData.SpawnBubbleData), global::HardCordGirlData.SpawnBubbleData.Parser, new[]{ "Type", "PlayerId", "BDataList" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HardCordGirlData.BubbleData), global::HardCordGirlData.BubbleData.Parser, new[]{ "PlayerId", "BubbleId", "RdmX", "RdmY", "RdmZ", "ColorIndex" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HardCordGirlData.BreakBubbleData), global::HardCordGirlData.BreakBubbleData.Parser, new[]{ "BubbleId", "SoundId", "Type" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HardCordGirlData.SpawnRibbonData), global::HardCordGirlData.SpawnRibbonData.Parser, new[]{ "Type", "PlayerId", "BDataList" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HardCordGirlData.RibbonData), global::HardCordGirlData.RibbonData.Parser, new[]{ "PlayerId", "RibbonId", "RdmX", "RdmY", "RdmZ", "ColorIndex" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HardCordGirlData.FininshRibbonPathData), global::HardCordGirlData.FininshRibbonPathData.Parser, new[]{ "RibbonId", "SoundId", "Type" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HardCordGirlData.DanceCmdData), global::HardCordGirlData.DanceCmdData.Parser, new[]{ "Name", "Cmd", "AnimationName", "VideoPath" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HardCordGirlData.WavingStickData), global::HardCordGirlData.WavingStickData.Parser, new[]{ "PlayerId", "HandId", "ColorIndex" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HardCordGirlData.CtrlFullBodyPlayerData), global::HardCordGirlData.CtrlFullBodyPlayerData.Parser, new[]{ "SendPlayerId", "FullBodyPlayerId", "AppearedState" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HardCordGirlData.FullBodyPlayerActionData), global::HardCordGirlData.FullBodyPlayerActionData.Parser, new[]{ "SendPlayerId", "FullBodyPlayerId", "ActionType" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HardCordGirlData.PlayerActionData), global::HardCordGirlData.PlayerActionData.Parser, new[]{ "SendPlayerId", "ActionType" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HardCordGirlData.GunOwnerData), global::HardCordGirlData.GunOwnerData.Parser, new[]{ "PlayerId", "HandType" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HardCordGirlData.GunPosData), global::HardCordGirlData.GunPosData.Parser, new[]{ "GunType", "CurBullets", "Pos", "Euler" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HardCordGirlData.SpawnGunData), global::HardCordGirlData.SpawnGunData.Parser, new[]{ "PlayerId", "HandType", "ObjIds", "GunType", "IsBound", "IsUnlimited" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HardCordGirlData.GrabGunData), global::HardCordGirlData.GrabGunData.Parser, new[]{ "PlayerId", "HandType", "GunId", "GunModule" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HardCordGirlData.UnGrabGunData), global::HardCordGirlData.UnGrabGunData.Parser, new[]{ "PlayerId", "HandType", "GunId", "GunModule", "Velocity", "Angular" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HardCordGirlData.UseGunData), global::HardCordGirlData.UseGunData.Parser, new[]{ "GunId", "CurBullet" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HardCordGirlData.SpawnMagazineData), global::HardCordGirlData.SpawnMagazineData.Parser, new[]{ "PlayerId", "HandType", "GunType" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HardCordGirlData.LoadMagazineData), global::HardCordGirlData.LoadMagazineData.Parser, new[]{ "PlayerId", "HandType", "GunId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HardCordGirlData.PlayerGetDamageData), global::HardCordGirlData.PlayerGetDamageData.Parser, new[]{ "AttackPlayerId", "GetDamagePlayerId", "Damage", "GunType", "LocalPos", "HitNormal" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HardCordGirlData.PlayerDeadData), global::HardCordGirlData.PlayerDeadData.Parser, new[]{ "AttackPlayerId", "DeadPlayerId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HardCordGirlData.ChangeRoomStatusData), global::HardCordGirlData.ChangeRoomStatusData.Parser, new[]{ "PlayerId", "RoomStauts" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HardCordGirlData.TAFootStepSoundData), global::HardCordGirlData.TAFootStepSoundData.Parser, new[]{ "PlayerId", "SoundId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HardCordGirlData.ChangeTheaterLightEffectData), global::HardCordGirlData.ChangeTheaterLightEffectData.Parser, new[]{ "LightEffectType", "IsOpen" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HardCordGirlData.KtvSongStartData), global::HardCordGirlData.KtvSongStartData.Parser, new[]{ "PlayerId", "SongId", "HasAccompaniment", "SongTotalDuration", "PullStreamId", "SongName", "OriginalSinger", "ShareToken", "PlayerName", "Characteristic" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HardCordGirlData.KtvSongChorusData), global::HardCordGirlData.KtvSongChorusData.Parser, new[]{ "PlayerId", "SongId", "DelayTime" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HardCordGirlData.TutorialInfo), global::HardCordGirlData.TutorialInfo.Parser, new[]{ "StageIndex", "TutorialState" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class PropsPickUp_Info : pb::IMessage<PropsPickUp_Info>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PropsPickUp_Info> _parser = new pb::MessageParser<PropsPickUp_Info>(() => new PropsPickUp_Info());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PropsPickUp_Info> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HardCordGirlData.HardCordGirlDataClassReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PropsPickUp_Info() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PropsPickUp_Info(PropsPickUp_Info other) : this() {
      _hasBits0 = other._hasBits0;
      id_ = other.id_;
      playerId_ = other.playerId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PropsPickUp_Info Clone() {
      return new PropsPickUp_Info(this);
    }

    /// <summary>Field number for the "Id" field.</summary>
    public const int IdFieldNumber = 1;
    private readonly static int IdDefaultValue = 0;

    private int id_;
    /// <summary>
    ///道具唯一标识
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Id {
      get { if ((_hasBits0 & 1) != 0) { return id_; } else { return IdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        id_ = value;
      }
    }
    /// <summary>Gets whether the "Id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "Id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "playerId" field.</summary>
    public const int PlayerIdFieldNumber = 2;
    private readonly static int PlayerIdDefaultValue = 0;

    private int playerId_;
    /// <summary>
    ///道具拥有者
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int PlayerId {
      get { if ((_hasBits0 & 2) != 0) { return playerId_; } else { return PlayerIdDefaultValue; } }
      set {
        _hasBits0 |= 2;
        playerId_ = value;
      }
    }
    /// <summary>Gets whether the "playerId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPlayerId {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "playerId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPlayerId() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PropsPickUp_Info);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PropsPickUp_Info other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (PlayerId != other.PlayerId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasId) hash ^= Id.GetHashCode();
      if (HasPlayerId) hash ^= PlayerId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasId) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (HasPlayerId) {
        output.WriteRawTag(16);
        output.WriteInt32(PlayerId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasId) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (HasPlayerId) {
        output.WriteRawTag(16);
        output.WriteInt32(PlayerId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasId) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (HasPlayerId) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PlayerId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PropsPickUp_Info other) {
      if (other == null) {
        return;
      }
      if (other.HasId) {
        Id = other.Id;
      }
      if (other.HasPlayerId) {
        PlayerId = other.PlayerId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            PlayerId = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            PlayerId = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class PropUse_Info : pb::IMessage<PropUse_Info>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PropUse_Info> _parser = new pb::MessageParser<PropUse_Info>(() => new PropUse_Info());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PropUse_Info> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HardCordGirlData.HardCordGirlDataClassReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PropUse_Info() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PropUse_Info(PropUse_Info other) : this() {
      _hasBits0 = other._hasBits0;
      id_ = other.id_;
      playerId_ = other.playerId_;
      ballInfo_ = other.ballInfo_ != null ? other.ballInfo_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PropUse_Info Clone() {
      return new PropUse_Info(this);
    }

    /// <summary>Field number for the "Id" field.</summary>
    public const int IdFieldNumber = 1;
    private readonly static int IdDefaultValue = 0;

    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Id {
      get { if ((_hasBits0 & 1) != 0) { return id_; } else { return IdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        id_ = value;
      }
    }
    /// <summary>Gets whether the "Id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "Id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "playerId" field.</summary>
    public const int PlayerIdFieldNumber = 2;
    private readonly static int PlayerIdDefaultValue = 0;

    private int playerId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int PlayerId {
      get { if ((_hasBits0 & 2) != 0) { return playerId_; } else { return PlayerIdDefaultValue; } }
      set {
        _hasBits0 |= 2;
        playerId_ = value;
      }
    }
    /// <summary>Gets whether the "playerId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPlayerId {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "playerId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPlayerId() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "ballInfo" field.</summary>
    public const int BallInfoFieldNumber = 3;
    private global::HardCordGirlData.BALL_INFO ballInfo_;
    /// <summary>
    ///投篮信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::HardCordGirlData.BALL_INFO BallInfo {
      get { return ballInfo_; }
      set {
        ballInfo_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PropUse_Info);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PropUse_Info other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (PlayerId != other.PlayerId) return false;
      if (!object.Equals(BallInfo, other.BallInfo)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasId) hash ^= Id.GetHashCode();
      if (HasPlayerId) hash ^= PlayerId.GetHashCode();
      if (ballInfo_ != null) hash ^= BallInfo.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasId) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (HasPlayerId) {
        output.WriteRawTag(16);
        output.WriteInt32(PlayerId);
      }
      if (ballInfo_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(BallInfo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasId) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (HasPlayerId) {
        output.WriteRawTag(16);
        output.WriteInt32(PlayerId);
      }
      if (ballInfo_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(BallInfo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasId) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (HasPlayerId) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PlayerId);
      }
      if (ballInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(BallInfo);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PropUse_Info other) {
      if (other == null) {
        return;
      }
      if (other.HasId) {
        Id = other.Id;
      }
      if (other.HasPlayerId) {
        PlayerId = other.PlayerId;
      }
      if (other.ballInfo_ != null) {
        if (ballInfo_ == null) {
          BallInfo = new global::HardCordGirlData.BALL_INFO();
        }
        BallInfo.MergeFrom(other.BallInfo);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            PlayerId = input.ReadInt32();
            break;
          }
          case 26: {
            if (ballInfo_ == null) {
              BallInfo = new global::HardCordGirlData.BALL_INFO();
            }
            input.ReadMessage(BallInfo);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            PlayerId = input.ReadInt32();
            break;
          }
          case 26: {
            if (ballInfo_ == null) {
              BallInfo = new global::HardCordGirlData.BALL_INFO();
            }
            input.ReadMessage(BallInfo);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class PropDiscard_Info : pb::IMessage<PropDiscard_Info>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PropDiscard_Info> _parser = new pb::MessageParser<PropDiscard_Info>(() => new PropDiscard_Info());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PropDiscard_Info> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HardCordGirlData.HardCordGirlDataClassReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PropDiscard_Info() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PropDiscard_Info(PropDiscard_Info other) : this() {
      _hasBits0 = other._hasBits0;
      id_ = other.id_;
      playerId_ = other.playerId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PropDiscard_Info Clone() {
      return new PropDiscard_Info(this);
    }

    /// <summary>Field number for the "Id" field.</summary>
    public const int IdFieldNumber = 1;
    private readonly static int IdDefaultValue = 0;

    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Id {
      get { if ((_hasBits0 & 1) != 0) { return id_; } else { return IdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        id_ = value;
      }
    }
    /// <summary>Gets whether the "Id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "Id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "playerId" field.</summary>
    public const int PlayerIdFieldNumber = 2;
    private readonly static int PlayerIdDefaultValue = 0;

    private int playerId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int PlayerId {
      get { if ((_hasBits0 & 2) != 0) { return playerId_; } else { return PlayerIdDefaultValue; } }
      set {
        _hasBits0 |= 2;
        playerId_ = value;
      }
    }
    /// <summary>Gets whether the "playerId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPlayerId {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "playerId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPlayerId() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PropDiscard_Info);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PropDiscard_Info other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (PlayerId != other.PlayerId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasId) hash ^= Id.GetHashCode();
      if (HasPlayerId) hash ^= PlayerId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasId) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (HasPlayerId) {
        output.WriteRawTag(16);
        output.WriteInt32(PlayerId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasId) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (HasPlayerId) {
        output.WriteRawTag(16);
        output.WriteInt32(PlayerId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasId) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (HasPlayerId) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PlayerId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PropDiscard_Info other) {
      if (other == null) {
        return;
      }
      if (other.HasId) {
        Id = other.Id;
      }
      if (other.HasPlayerId) {
        PlayerId = other.PlayerId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            PlayerId = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            PlayerId = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class PropStateChange_Info : pb::IMessage<PropStateChange_Info>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PropStateChange_Info> _parser = new pb::MessageParser<PropStateChange_Info>(() => new PropStateChange_Info());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PropStateChange_Info> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HardCordGirlData.HardCordGirlDataClassReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PropStateChange_Info() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PropStateChange_Info(PropStateChange_Info other) : this() {
      _hasBits0 = other._hasBits0;
      id_ = other.id_;
      oldState_ = other.oldState_;
      newState_ = other.newState_;
      owerId_ = other.owerId_;
      pos_ = other.pos_ != null ? other.pos_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PropStateChange_Info Clone() {
      return new PropStateChange_Info(this);
    }

    /// <summary>Field number for the "Id" field.</summary>
    public const int IdFieldNumber = 1;
    private readonly static int IdDefaultValue = 0;

    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Id {
      get { if ((_hasBits0 & 1) != 0) { return id_; } else { return IdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        id_ = value;
      }
    }
    /// <summary>Gets whether the "Id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "Id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "oldState" field.</summary>
    public const int OldStateFieldNumber = 2;
    private readonly static int OldStateDefaultValue = 0;

    private int oldState_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int OldState {
      get { if ((_hasBits0 & 2) != 0) { return oldState_; } else { return OldStateDefaultValue; } }
      set {
        _hasBits0 |= 2;
        oldState_ = value;
      }
    }
    /// <summary>Gets whether the "oldState" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasOldState {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "oldState" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearOldState() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "newState" field.</summary>
    public const int NewStateFieldNumber = 3;
    private readonly static int NewStateDefaultValue = 0;

    private int newState_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int NewState {
      get { if ((_hasBits0 & 4) != 0) { return newState_; } else { return NewStateDefaultValue; } }
      set {
        _hasBits0 |= 4;
        newState_ = value;
      }
    }
    /// <summary>Gets whether the "newState" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasNewState {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "newState" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearNewState() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "owerId" field.</summary>
    public const int OwerIdFieldNumber = 4;
    private readonly static int OwerIdDefaultValue = 0;

    private int owerId_;
    /// <summary>
    ///拥有者
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int OwerId {
      get { if ((_hasBits0 & 8) != 0) { return owerId_; } else { return OwerIdDefaultValue; } }
      set {
        _hasBits0 |= 8;
        owerId_ = value;
      }
    }
    /// <summary>Gets whether the "owerId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasOwerId {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "owerId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearOwerId() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "pos" field.</summary>
    public const int PosFieldNumber = 5;
    private global::HardCordGirlData.VECTOR3 pos_;
    /// <summary>
    ///位置
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::HardCordGirlData.VECTOR3 Pos {
      get { return pos_; }
      set {
        pos_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PropStateChange_Info);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PropStateChange_Info other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (OldState != other.OldState) return false;
      if (NewState != other.NewState) return false;
      if (OwerId != other.OwerId) return false;
      if (!object.Equals(Pos, other.Pos)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasId) hash ^= Id.GetHashCode();
      if (HasOldState) hash ^= OldState.GetHashCode();
      if (HasNewState) hash ^= NewState.GetHashCode();
      if (HasOwerId) hash ^= OwerId.GetHashCode();
      if (pos_ != null) hash ^= Pos.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasId) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (HasOldState) {
        output.WriteRawTag(16);
        output.WriteInt32(OldState);
      }
      if (HasNewState) {
        output.WriteRawTag(24);
        output.WriteInt32(NewState);
      }
      if (HasOwerId) {
        output.WriteRawTag(32);
        output.WriteInt32(OwerId);
      }
      if (pos_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Pos);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasId) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (HasOldState) {
        output.WriteRawTag(16);
        output.WriteInt32(OldState);
      }
      if (HasNewState) {
        output.WriteRawTag(24);
        output.WriteInt32(NewState);
      }
      if (HasOwerId) {
        output.WriteRawTag(32);
        output.WriteInt32(OwerId);
      }
      if (pos_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Pos);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasId) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (HasOldState) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(OldState);
      }
      if (HasNewState) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(NewState);
      }
      if (HasOwerId) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(OwerId);
      }
      if (pos_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Pos);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PropStateChange_Info other) {
      if (other == null) {
        return;
      }
      if (other.HasId) {
        Id = other.Id;
      }
      if (other.HasOldState) {
        OldState = other.OldState;
      }
      if (other.HasNewState) {
        NewState = other.NewState;
      }
      if (other.HasOwerId) {
        OwerId = other.OwerId;
      }
      if (other.pos_ != null) {
        if (pos_ == null) {
          Pos = new global::HardCordGirlData.VECTOR3();
        }
        Pos.MergeFrom(other.Pos);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            OldState = input.ReadInt32();
            break;
          }
          case 24: {
            NewState = input.ReadInt32();
            break;
          }
          case 32: {
            OwerId = input.ReadInt32();
            break;
          }
          case 42: {
            if (pos_ == null) {
              Pos = new global::HardCordGirlData.VECTOR3();
            }
            input.ReadMessage(Pos);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            OldState = input.ReadInt32();
            break;
          }
          case 24: {
            NewState = input.ReadInt32();
            break;
          }
          case 32: {
            OwerId = input.ReadInt32();
            break;
          }
          case 42: {
            if (pos_ == null) {
              Pos = new global::HardCordGirlData.VECTOR3();
            }
            input.ReadMessage(Pos);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class VECTOR3 : pb::IMessage<VECTOR3>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<VECTOR3> _parser = new pb::MessageParser<VECTOR3>(() => new VECTOR3());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<VECTOR3> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HardCordGirlData.HardCordGirlDataClassReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public VECTOR3() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public VECTOR3(VECTOR3 other) : this() {
      _hasBits0 = other._hasBits0;
      x_ = other.x_;
      y_ = other.y_;
      z_ = other.z_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public VECTOR3 Clone() {
      return new VECTOR3(this);
    }

    /// <summary>Field number for the "X" field.</summary>
    public const int XFieldNumber = 1;
    private readonly static float XDefaultValue = 0F;

    private float x_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float X {
      get { if ((_hasBits0 & 1) != 0) { return x_; } else { return XDefaultValue; } }
      set {
        _hasBits0 |= 1;
        x_ = value;
      }
    }
    /// <summary>Gets whether the "X" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasX {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "X" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearX() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "Y" field.</summary>
    public const int YFieldNumber = 2;
    private readonly static float YDefaultValue = 0F;

    private float y_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Y {
      get { if ((_hasBits0 & 2) != 0) { return y_; } else { return YDefaultValue; } }
      set {
        _hasBits0 |= 2;
        y_ = value;
      }
    }
    /// <summary>Gets whether the "Y" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasY {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "Y" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearY() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "Z" field.</summary>
    public const int ZFieldNumber = 3;
    private readonly static float ZDefaultValue = 0F;

    private float z_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Z {
      get { if ((_hasBits0 & 4) != 0) { return z_; } else { return ZDefaultValue; } }
      set {
        _hasBits0 |= 4;
        z_ = value;
      }
    }
    /// <summary>Gets whether the "Z" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasZ {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "Z" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearZ() {
      _hasBits0 &= ~4;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as VECTOR3);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(VECTOR3 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(X, other.X)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Y, other.Y)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Z, other.Z)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasX) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(X);
      if (HasY) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Y);
      if (HasZ) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Z);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasX) {
        output.WriteRawTag(13);
        output.WriteFloat(X);
      }
      if (HasY) {
        output.WriteRawTag(21);
        output.WriteFloat(Y);
      }
      if (HasZ) {
        output.WriteRawTag(29);
        output.WriteFloat(Z);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasX) {
        output.WriteRawTag(13);
        output.WriteFloat(X);
      }
      if (HasY) {
        output.WriteRawTag(21);
        output.WriteFloat(Y);
      }
      if (HasZ) {
        output.WriteRawTag(29);
        output.WriteFloat(Z);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasX) {
        size += 1 + 4;
      }
      if (HasY) {
        size += 1 + 4;
      }
      if (HasZ) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(VECTOR3 other) {
      if (other == null) {
        return;
      }
      if (other.HasX) {
        X = other.X;
      }
      if (other.HasY) {
        Y = other.Y;
      }
      if (other.HasZ) {
        Z = other.Z;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            X = input.ReadFloat();
            break;
          }
          case 21: {
            Y = input.ReadFloat();
            break;
          }
          case 29: {
            Z = input.ReadFloat();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 13: {
            X = input.ReadFloat();
            break;
          }
          case 21: {
            Y = input.ReadFloat();
            break;
          }
          case 29: {
            Z = input.ReadFloat();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class VECTOR4 : pb::IMessage<VECTOR4>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<VECTOR4> _parser = new pb::MessageParser<VECTOR4>(() => new VECTOR4());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<VECTOR4> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HardCordGirlData.HardCordGirlDataClassReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public VECTOR4() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public VECTOR4(VECTOR4 other) : this() {
      _hasBits0 = other._hasBits0;
      x_ = other.x_;
      y_ = other.y_;
      z_ = other.z_;
      w_ = other.w_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public VECTOR4 Clone() {
      return new VECTOR4(this);
    }

    /// <summary>Field number for the "X" field.</summary>
    public const int XFieldNumber = 1;
    private readonly static float XDefaultValue = 0F;

    private float x_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float X {
      get { if ((_hasBits0 & 1) != 0) { return x_; } else { return XDefaultValue; } }
      set {
        _hasBits0 |= 1;
        x_ = value;
      }
    }
    /// <summary>Gets whether the "X" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasX {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "X" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearX() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "Y" field.</summary>
    public const int YFieldNumber = 2;
    private readonly static float YDefaultValue = 0F;

    private float y_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Y {
      get { if ((_hasBits0 & 2) != 0) { return y_; } else { return YDefaultValue; } }
      set {
        _hasBits0 |= 2;
        y_ = value;
      }
    }
    /// <summary>Gets whether the "Y" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasY {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "Y" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearY() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "Z" field.</summary>
    public const int ZFieldNumber = 3;
    private readonly static float ZDefaultValue = 0F;

    private float z_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Z {
      get { if ((_hasBits0 & 4) != 0) { return z_; } else { return ZDefaultValue; } }
      set {
        _hasBits0 |= 4;
        z_ = value;
      }
    }
    /// <summary>Gets whether the "Z" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasZ {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "Z" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearZ() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "W" field.</summary>
    public const int WFieldNumber = 4;
    private readonly static float WDefaultValue = 0F;

    private float w_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float W {
      get { if ((_hasBits0 & 8) != 0) { return w_; } else { return WDefaultValue; } }
      set {
        _hasBits0 |= 8;
        w_ = value;
      }
    }
    /// <summary>Gets whether the "W" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasW {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "W" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearW() {
      _hasBits0 &= ~8;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as VECTOR4);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(VECTOR4 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(X, other.X)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Y, other.Y)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Z, other.Z)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(W, other.W)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasX) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(X);
      if (HasY) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Y);
      if (HasZ) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Z);
      if (HasW) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(W);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasX) {
        output.WriteRawTag(13);
        output.WriteFloat(X);
      }
      if (HasY) {
        output.WriteRawTag(21);
        output.WriteFloat(Y);
      }
      if (HasZ) {
        output.WriteRawTag(29);
        output.WriteFloat(Z);
      }
      if (HasW) {
        output.WriteRawTag(37);
        output.WriteFloat(W);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasX) {
        output.WriteRawTag(13);
        output.WriteFloat(X);
      }
      if (HasY) {
        output.WriteRawTag(21);
        output.WriteFloat(Y);
      }
      if (HasZ) {
        output.WriteRawTag(29);
        output.WriteFloat(Z);
      }
      if (HasW) {
        output.WriteRawTag(37);
        output.WriteFloat(W);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasX) {
        size += 1 + 4;
      }
      if (HasY) {
        size += 1 + 4;
      }
      if (HasZ) {
        size += 1 + 4;
      }
      if (HasW) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(VECTOR4 other) {
      if (other == null) {
        return;
      }
      if (other.HasX) {
        X = other.X;
      }
      if (other.HasY) {
        Y = other.Y;
      }
      if (other.HasZ) {
        Z = other.Z;
      }
      if (other.HasW) {
        W = other.W;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            X = input.ReadFloat();
            break;
          }
          case 21: {
            Y = input.ReadFloat();
            break;
          }
          case 29: {
            Z = input.ReadFloat();
            break;
          }
          case 37: {
            W = input.ReadFloat();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 13: {
            X = input.ReadFloat();
            break;
          }
          case 21: {
            Y = input.ReadFloat();
            break;
          }
          case 29: {
            Z = input.ReadFloat();
            break;
          }
          case 37: {
            W = input.ReadFloat();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class BALL_INFO : pb::IMessage<BALL_INFO>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<BALL_INFO> _parser = new pb::MessageParser<BALL_INFO>(() => new BALL_INFO());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<BALL_INFO> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HardCordGirlData.HardCordGirlDataClassReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BALL_INFO() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BALL_INFO(BALL_INFO other) : this() {
      pOS_ = other.pOS_ != null ? other.pOS_.Clone() : null;
      dIRECTION_ = other.dIRECTION_ != null ? other.dIRECTION_.Clone() : null;
      rOT_ = other.rOT_ != null ? other.rOT_.Clone() : null;
      torque_ = other.torque_ != null ? other.torque_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BALL_INFO Clone() {
      return new BALL_INFO(this);
    }

    /// <summary>Field number for the "POS" field.</summary>
    public const int POSFieldNumber = 1;
    private global::HardCordGirlData.VECTOR3 pOS_;
    /// <summary>
    ///位置
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::HardCordGirlData.VECTOR3 POS {
      get { return pOS_; }
      set {
        pOS_ = value;
      }
    }

    /// <summary>Field number for the "DIRECTION" field.</summary>
    public const int DIRECTIONFieldNumber = 2;
    private global::HardCordGirlData.VECTOR3 dIRECTION_;
    /// <summary>
    ///力的方向大小
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::HardCordGirlData.VECTOR3 DIRECTION {
      get { return dIRECTION_; }
      set {
        dIRECTION_ = value;
      }
    }

    /// <summary>Field number for the "ROT" field.</summary>
    public const int ROTFieldNumber = 3;
    private global::HardCordGirlData.VECTOR3 rOT_;
    /// <summary>
    ///旋转
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::HardCordGirlData.VECTOR3 ROT {
      get { return rOT_; }
      set {
        rOT_ = value;
      }
    }

    /// <summary>Field number for the "Torque" field.</summary>
    public const int TorqueFieldNumber = 4;
    private global::HardCordGirlData.VECTOR3 torque_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::HardCordGirlData.VECTOR3 Torque {
      get { return torque_; }
      set {
        torque_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as BALL_INFO);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(BALL_INFO other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(POS, other.POS)) return false;
      if (!object.Equals(DIRECTION, other.DIRECTION)) return false;
      if (!object.Equals(ROT, other.ROT)) return false;
      if (!object.Equals(Torque, other.Torque)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (pOS_ != null) hash ^= POS.GetHashCode();
      if (dIRECTION_ != null) hash ^= DIRECTION.GetHashCode();
      if (rOT_ != null) hash ^= ROT.GetHashCode();
      if (torque_ != null) hash ^= Torque.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (pOS_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(POS);
      }
      if (dIRECTION_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(DIRECTION);
      }
      if (rOT_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(ROT);
      }
      if (torque_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Torque);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (pOS_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(POS);
      }
      if (dIRECTION_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(DIRECTION);
      }
      if (rOT_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(ROT);
      }
      if (torque_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Torque);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (pOS_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(POS);
      }
      if (dIRECTION_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DIRECTION);
      }
      if (rOT_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ROT);
      }
      if (torque_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Torque);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(BALL_INFO other) {
      if (other == null) {
        return;
      }
      if (other.pOS_ != null) {
        if (pOS_ == null) {
          POS = new global::HardCordGirlData.VECTOR3();
        }
        POS.MergeFrom(other.POS);
      }
      if (other.dIRECTION_ != null) {
        if (dIRECTION_ == null) {
          DIRECTION = new global::HardCordGirlData.VECTOR3();
        }
        DIRECTION.MergeFrom(other.DIRECTION);
      }
      if (other.rOT_ != null) {
        if (rOT_ == null) {
          ROT = new global::HardCordGirlData.VECTOR3();
        }
        ROT.MergeFrom(other.ROT);
      }
      if (other.torque_ != null) {
        if (torque_ == null) {
          Torque = new global::HardCordGirlData.VECTOR3();
        }
        Torque.MergeFrom(other.Torque);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (pOS_ == null) {
              POS = new global::HardCordGirlData.VECTOR3();
            }
            input.ReadMessage(POS);
            break;
          }
          case 18: {
            if (dIRECTION_ == null) {
              DIRECTION = new global::HardCordGirlData.VECTOR3();
            }
            input.ReadMessage(DIRECTION);
            break;
          }
          case 26: {
            if (rOT_ == null) {
              ROT = new global::HardCordGirlData.VECTOR3();
            }
            input.ReadMessage(ROT);
            break;
          }
          case 34: {
            if (torque_ == null) {
              Torque = new global::HardCordGirlData.VECTOR3();
            }
            input.ReadMessage(Torque);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (pOS_ == null) {
              POS = new global::HardCordGirlData.VECTOR3();
            }
            input.ReadMessage(POS);
            break;
          }
          case 18: {
            if (dIRECTION_ == null) {
              DIRECTION = new global::HardCordGirlData.VECTOR3();
            }
            input.ReadMessage(DIRECTION);
            break;
          }
          case 26: {
            if (rOT_ == null) {
              ROT = new global::HardCordGirlData.VECTOR3();
            }
            input.ReadMessage(ROT);
            break;
          }
          case 34: {
            if (torque_ == null) {
              Torque = new global::HardCordGirlData.VECTOR3();
            }
            input.ReadMessage(Torque);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class PropConsole_Info : pb::IMessage<PropConsole_Info>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PropConsole_Info> _parser = new pb::MessageParser<PropConsole_Info>(() => new PropConsole_Info());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PropConsole_Info> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HardCordGirlData.HardCordGirlDataClassReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PropConsole_Info() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PropConsole_Info(PropConsole_Info other) : this() {
      _hasBits0 = other._hasBits0;
      type_ = other.type_;
      eventNum_ = other.eventNum_;
      eventState_ = other.eventState_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PropConsole_Info Clone() {
      return new PropConsole_Info(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private readonly static int TypeDefaultValue = 0;

    private int type_;
    /// <summary>
    ///类型（0：氛围，1：灯光，2：音效，3表示分组事件，4推直流）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Type {
      get { if ((_hasBits0 & 1) != 0) { return type_; } else { return TypeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        type_ = value;
      }
    }
    /// <summary>Gets whether the "type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasType {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearType() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "eventNum" field.</summary>
    public const int EventNumFieldNumber = 2;
    private readonly static int EventNumDefaultValue = 0;

    private int eventNum_;
    /// <summary>
    ///事件编号（-1：清空，0~n表示相关事件）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int EventNum {
      get { if ((_hasBits0 & 2) != 0) { return eventNum_; } else { return EventNumDefaultValue; } }
      set {
        _hasBits0 |= 2;
        eventNum_ = value;
      }
    }
    /// <summary>Gets whether the "eventNum" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasEventNum {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "eventNum" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearEventNum() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "eventState" field.</summary>
    public const int EventStateFieldNumber = 3;
    private readonly static int EventStateDefaultValue = 0;

    private int eventState_;
    /// <summary>
    ///事件状态，表示点击按钮后产生的状态信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int EventState {
      get { if ((_hasBits0 & 4) != 0) { return eventState_; } else { return EventStateDefaultValue; } }
      set {
        _hasBits0 |= 4;
        eventState_ = value;
      }
    }
    /// <summary>Gets whether the "eventState" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasEventState {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "eventState" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearEventState() {
      _hasBits0 &= ~4;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PropConsole_Info);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PropConsole_Info other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (EventNum != other.EventNum) return false;
      if (EventState != other.EventState) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasType) hash ^= Type.GetHashCode();
      if (HasEventNum) hash ^= EventNum.GetHashCode();
      if (HasEventState) hash ^= EventState.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasType) {
        output.WriteRawTag(8);
        output.WriteInt32(Type);
      }
      if (HasEventNum) {
        output.WriteRawTag(16);
        output.WriteInt32(EventNum);
      }
      if (HasEventState) {
        output.WriteRawTag(24);
        output.WriteInt32(EventState);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasType) {
        output.WriteRawTag(8);
        output.WriteInt32(Type);
      }
      if (HasEventNum) {
        output.WriteRawTag(16);
        output.WriteInt32(EventNum);
      }
      if (HasEventState) {
        output.WriteRawTag(24);
        output.WriteInt32(EventState);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasType) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
      }
      if (HasEventNum) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(EventNum);
      }
      if (HasEventState) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(EventState);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PropConsole_Info other) {
      if (other == null) {
        return;
      }
      if (other.HasType) {
        Type = other.Type;
      }
      if (other.HasEventNum) {
        EventNum = other.EventNum;
      }
      if (other.HasEventState) {
        EventState = other.EventState;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = input.ReadInt32();
            break;
          }
          case 16: {
            EventNum = input.ReadInt32();
            break;
          }
          case 24: {
            EventState = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Type = input.ReadInt32();
            break;
          }
          case 16: {
            EventNum = input.ReadInt32();
            break;
          }
          case 24: {
            EventState = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class PropSound_Info : pb::IMessage<PropSound_Info>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PropSound_Info> _parser = new pb::MessageParser<PropSound_Info>(() => new PropSound_Info());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PropSound_Info> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HardCordGirlData.HardCordGirlDataClassReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PropSound_Info() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PropSound_Info(PropSound_Info other) : this() {
      _hasBits0 = other._hasBits0;
      media_ = other.media_;
      microphone_ = other.microphone_;
      prop_ = other.prop_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PropSound_Info Clone() {
      return new PropSound_Info(this);
    }

    /// <summary>Field number for the "media" field.</summary>
    public const int MediaFieldNumber = 1;
    private readonly static float MediaDefaultValue = 0F;

    private float media_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Media {
      get { if ((_hasBits0 & 1) != 0) { return media_; } else { return MediaDefaultValue; } }
      set {
        _hasBits0 |= 1;
        media_ = value;
      }
    }
    /// <summary>Gets whether the "media" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMedia {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "media" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMedia() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "microphone" field.</summary>
    public const int MicrophoneFieldNumber = 2;
    private readonly static float MicrophoneDefaultValue = 0F;

    private float microphone_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Microphone {
      get { if ((_hasBits0 & 2) != 0) { return microphone_; } else { return MicrophoneDefaultValue; } }
      set {
        _hasBits0 |= 2;
        microphone_ = value;
      }
    }
    /// <summary>Gets whether the "microphone" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMicrophone {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "microphone" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMicrophone() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "prop" field.</summary>
    public const int PropFieldNumber = 3;
    private readonly static float PropDefaultValue = 0F;

    private float prop_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Prop {
      get { if ((_hasBits0 & 4) != 0) { return prop_; } else { return PropDefaultValue; } }
      set {
        _hasBits0 |= 4;
        prop_ = value;
      }
    }
    /// <summary>Gets whether the "prop" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasProp {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "prop" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearProp() {
      _hasBits0 &= ~4;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PropSound_Info);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PropSound_Info other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Media, other.Media)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Microphone, other.Microphone)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Prop, other.Prop)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasMedia) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Media);
      if (HasMicrophone) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Microphone);
      if (HasProp) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Prop);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasMedia) {
        output.WriteRawTag(13);
        output.WriteFloat(Media);
      }
      if (HasMicrophone) {
        output.WriteRawTag(21);
        output.WriteFloat(Microphone);
      }
      if (HasProp) {
        output.WriteRawTag(29);
        output.WriteFloat(Prop);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasMedia) {
        output.WriteRawTag(13);
        output.WriteFloat(Media);
      }
      if (HasMicrophone) {
        output.WriteRawTag(21);
        output.WriteFloat(Microphone);
      }
      if (HasProp) {
        output.WriteRawTag(29);
        output.WriteFloat(Prop);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasMedia) {
        size += 1 + 4;
      }
      if (HasMicrophone) {
        size += 1 + 4;
      }
      if (HasProp) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PropSound_Info other) {
      if (other == null) {
        return;
      }
      if (other.HasMedia) {
        Media = other.Media;
      }
      if (other.HasMicrophone) {
        Microphone = other.Microphone;
      }
      if (other.HasProp) {
        Prop = other.Prop;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            Media = input.ReadFloat();
            break;
          }
          case 21: {
            Microphone = input.ReadFloat();
            break;
          }
          case 29: {
            Prop = input.ReadFloat();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 13: {
            Media = input.ReadFloat();
            break;
          }
          case 21: {
            Microphone = input.ReadFloat();
            break;
          }
          case 29: {
            Prop = input.ReadFloat();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class PlayerKeyWord : pb::IMessage<PlayerKeyWord>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PlayerKeyWord> _parser = new pb::MessageParser<PlayerKeyWord>(() => new PlayerKeyWord());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PlayerKeyWord> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HardCordGirlData.HardCordGirlDataClassReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PlayerKeyWord() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PlayerKeyWord(PlayerKeyWord other) : this() {
      _hasBits0 = other._hasBits0;
      id_ = other.id_;
      keyWord_ = other.keyWord_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PlayerKeyWord Clone() {
      return new PlayerKeyWord(this);
    }

    /// <summary>Field number for the "Id" field.</summary>
    public const int IdFieldNumber = 1;
    private readonly static int IdDefaultValue = 0;

    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Id {
      get { if ((_hasBits0 & 1) != 0) { return id_; } else { return IdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        id_ = value;
      }
    }
    /// <summary>Gets whether the "Id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "Id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "keyWord" field.</summary>
    public const int KeyWordFieldNumber = 2;
    private readonly static string KeyWordDefaultValue = "";

    private string keyWord_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string KeyWord {
      get { return keyWord_ ?? KeyWordDefaultValue; }
      set {
        keyWord_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "keyWord" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasKeyWord {
      get { return keyWord_ != null; }
    }
    /// <summary>Clears the value of the "keyWord" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearKeyWord() {
      keyWord_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PlayerKeyWord);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PlayerKeyWord other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (KeyWord != other.KeyWord) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasId) hash ^= Id.GetHashCode();
      if (HasKeyWord) hash ^= KeyWord.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasId) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (HasKeyWord) {
        output.WriteRawTag(18);
        output.WriteString(KeyWord);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasId) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (HasKeyWord) {
        output.WriteRawTag(18);
        output.WriteString(KeyWord);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasId) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (HasKeyWord) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(KeyWord);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PlayerKeyWord other) {
      if (other == null) {
        return;
      }
      if (other.HasId) {
        Id = other.Id;
      }
      if (other.HasKeyWord) {
        KeyWord = other.KeyWord;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            KeyWord = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            KeyWord = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class PlayerKeyWordId : pb::IMessage<PlayerKeyWordId>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PlayerKeyWordId> _parser = new pb::MessageParser<PlayerKeyWordId>(() => new PlayerKeyWordId());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PlayerKeyWordId> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HardCordGirlData.HardCordGirlDataClassReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PlayerKeyWordId() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PlayerKeyWordId(PlayerKeyWordId other) : this() {
      _hasBits0 = other._hasBits0;
      id_ = other.id_;
      errorTimes_ = other.errorTimes_;
      keyWordId_ = other.keyWordId_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PlayerKeyWordId Clone() {
      return new PlayerKeyWordId(this);
    }

    /// <summary>Field number for the "Id" field.</summary>
    public const int IdFieldNumber = 1;
    private readonly static int IdDefaultValue = 0;

    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Id {
      get { if ((_hasBits0 & 1) != 0) { return id_; } else { return IdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        id_ = value;
      }
    }
    /// <summary>Gets whether the "Id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "Id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "errorTimes" field.</summary>
    public const int ErrorTimesFieldNumber = 2;
    private readonly static int ErrorTimesDefaultValue = 0;

    private int errorTimes_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ErrorTimes {
      get { if ((_hasBits0 & 2) != 0) { return errorTimes_; } else { return ErrorTimesDefaultValue; } }
      set {
        _hasBits0 |= 2;
        errorTimes_ = value;
      }
    }
    /// <summary>Gets whether the "errorTimes" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasErrorTimes {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "errorTimes" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearErrorTimes() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "keyWordId" field.</summary>
    public const int KeyWordIdFieldNumber = 3;
    private static readonly pb::FieldCodec<int> _repeated_keyWordId_codec
        = pb::FieldCodec.ForInt32(24);
    private readonly pbc::RepeatedField<int> keyWordId_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<int> KeyWordId {
      get { return keyWordId_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PlayerKeyWordId);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PlayerKeyWordId other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (ErrorTimes != other.ErrorTimes) return false;
      if(!keyWordId_.Equals(other.keyWordId_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasId) hash ^= Id.GetHashCode();
      if (HasErrorTimes) hash ^= ErrorTimes.GetHashCode();
      hash ^= keyWordId_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasId) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (HasErrorTimes) {
        output.WriteRawTag(16);
        output.WriteInt32(ErrorTimes);
      }
      keyWordId_.WriteTo(output, _repeated_keyWordId_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasId) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (HasErrorTimes) {
        output.WriteRawTag(16);
        output.WriteInt32(ErrorTimes);
      }
      keyWordId_.WriteTo(ref output, _repeated_keyWordId_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasId) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (HasErrorTimes) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ErrorTimes);
      }
      size += keyWordId_.CalculateSize(_repeated_keyWordId_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PlayerKeyWordId other) {
      if (other == null) {
        return;
      }
      if (other.HasId) {
        Id = other.Id;
      }
      if (other.HasErrorTimes) {
        ErrorTimes = other.ErrorTimes;
      }
      keyWordId_.Add(other.keyWordId_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            ErrorTimes = input.ReadInt32();
            break;
          }
          case 26:
          case 24: {
            keyWordId_.AddEntriesFrom(input, _repeated_keyWordId_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            ErrorTimes = input.ReadInt32();
            break;
          }
          case 26:
          case 24: {
            keyWordId_.AddEntriesFrom(ref input, _repeated_keyWordId_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class PlayerKeyWordInfo : pb::IMessage<PlayerKeyWordInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PlayerKeyWordInfo> _parser = new pb::MessageParser<PlayerKeyWordInfo>(() => new PlayerKeyWordInfo());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PlayerKeyWordInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HardCordGirlData.HardCordGirlDataClassReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PlayerKeyWordInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PlayerKeyWordInfo(PlayerKeyWordInfo other) : this() {
      _hasBits0 = other._hasBits0;
      isInGame_ = other.isInGame_;
      playerInfo_ = other.playerInfo_ != null ? other.playerInfo_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PlayerKeyWordInfo Clone() {
      return new PlayerKeyWordInfo(this);
    }

    /// <summary>Field number for the "isInGame" field.</summary>
    public const int IsInGameFieldNumber = 1;
    private readonly static bool IsInGameDefaultValue = false;

    private bool isInGame_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsInGame {
      get { if ((_hasBits0 & 1) != 0) { return isInGame_; } else { return IsInGameDefaultValue; } }
      set {
        _hasBits0 |= 1;
        isInGame_ = value;
      }
    }
    /// <summary>Gets whether the "isInGame" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIsInGame {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "isInGame" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIsInGame() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "playerInfo" field.</summary>
    public const int PlayerInfoFieldNumber = 2;
    private global::HardCordGirlData.PlayerKeyWordId playerInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::HardCordGirlData.PlayerKeyWordId PlayerInfo {
      get { return playerInfo_; }
      set {
        playerInfo_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PlayerKeyWordInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PlayerKeyWordInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (IsInGame != other.IsInGame) return false;
      if (!object.Equals(PlayerInfo, other.PlayerInfo)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasIsInGame) hash ^= IsInGame.GetHashCode();
      if (playerInfo_ != null) hash ^= PlayerInfo.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasIsInGame) {
        output.WriteRawTag(8);
        output.WriteBool(IsInGame);
      }
      if (playerInfo_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(PlayerInfo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasIsInGame) {
        output.WriteRawTag(8);
        output.WriteBool(IsInGame);
      }
      if (playerInfo_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(PlayerInfo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasIsInGame) {
        size += 1 + 1;
      }
      if (playerInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PlayerInfo);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PlayerKeyWordInfo other) {
      if (other == null) {
        return;
      }
      if (other.HasIsInGame) {
        IsInGame = other.IsInGame;
      }
      if (other.playerInfo_ != null) {
        if (playerInfo_ == null) {
          PlayerInfo = new global::HardCordGirlData.PlayerKeyWordId();
        }
        PlayerInfo.MergeFrom(other.PlayerInfo);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            IsInGame = input.ReadBool();
            break;
          }
          case 18: {
            if (playerInfo_ == null) {
              PlayerInfo = new global::HardCordGirlData.PlayerKeyWordId();
            }
            input.ReadMessage(PlayerInfo);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            IsInGame = input.ReadBool();
            break;
          }
          case 18: {
            if (playerInfo_ == null) {
              PlayerInfo = new global::HardCordGirlData.PlayerKeyWordId();
            }
            input.ReadMessage(PlayerInfo);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///害你在心口难开 每个玩家的关键字和Id对应
  /// </summary>
  public sealed partial class PlayerKeyWordInfo_List : pb::IMessage<PlayerKeyWordInfo_List>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PlayerKeyWordInfo_List> _parser = new pb::MessageParser<PlayerKeyWordInfo_List>(() => new PlayerKeyWordInfo_List());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PlayerKeyWordInfo_List> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HardCordGirlData.HardCordGirlDataClassReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PlayerKeyWordInfo_List() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PlayerKeyWordInfo_List(PlayerKeyWordInfo_List other) : this() {
      playerKeyWordInfos_ = other.playerKeyWordInfos_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PlayerKeyWordInfo_List Clone() {
      return new PlayerKeyWordInfo_List(this);
    }

    /// <summary>Field number for the "playerKeyWordInfos" field.</summary>
    public const int PlayerKeyWordInfosFieldNumber = 1;
    private static readonly pb::FieldCodec<global::HardCordGirlData.PlayerKeyWordInfo> _repeated_playerKeyWordInfos_codec
        = pb::FieldCodec.ForMessage(10, global::HardCordGirlData.PlayerKeyWordInfo.Parser);
    private readonly pbc::RepeatedField<global::HardCordGirlData.PlayerKeyWordInfo> playerKeyWordInfos_ = new pbc::RepeatedField<global::HardCordGirlData.PlayerKeyWordInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::HardCordGirlData.PlayerKeyWordInfo> PlayerKeyWordInfos {
      get { return playerKeyWordInfos_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PlayerKeyWordInfo_List);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PlayerKeyWordInfo_List other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!playerKeyWordInfos_.Equals(other.playerKeyWordInfos_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= playerKeyWordInfos_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      playerKeyWordInfos_.WriteTo(output, _repeated_playerKeyWordInfos_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      playerKeyWordInfos_.WriteTo(ref output, _repeated_playerKeyWordInfos_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += playerKeyWordInfos_.CalculateSize(_repeated_playerKeyWordInfos_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PlayerKeyWordInfo_List other) {
      if (other == null) {
        return;
      }
      playerKeyWordInfos_.Add(other.playerKeyWordInfos_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            playerKeyWordInfos_.AddEntriesFrom(input, _repeated_playerKeyWordInfos_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            playerKeyWordInfos_.AddEntriesFrom(ref input, _repeated_playerKeyWordInfos_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///谁是卧底身份
  /// </summary>
  public sealed partial class INSIDEMAN_IDENTITY__NOTIFY : pb::IMessage<INSIDEMAN_IDENTITY__NOTIFY>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<INSIDEMAN_IDENTITY__NOTIFY> _parser = new pb::MessageParser<INSIDEMAN_IDENTITY__NOTIFY>(() => new INSIDEMAN_IDENTITY__NOTIFY());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<INSIDEMAN_IDENTITY__NOTIFY> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HardCordGirlData.HardCordGirlDataClassReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public INSIDEMAN_IDENTITY__NOTIFY() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public INSIDEMAN_IDENTITY__NOTIFY(INSIDEMAN_IDENTITY__NOTIFY other) : this() {
      _hasBits0 = other._hasBits0;
      isEndGame_ = other.isEndGame_;
      pLAYERIDENTITYLIST_ = other.pLAYERIDENTITYLIST_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public INSIDEMAN_IDENTITY__NOTIFY Clone() {
      return new INSIDEMAN_IDENTITY__NOTIFY(this);
    }

    /// <summary>Field number for the "isEndGame" field.</summary>
    public const int IsEndGameFieldNumber = 1;
    private readonly static bool IsEndGameDefaultValue = false;

    private bool isEndGame_;
    /// <summary>
    ///是否结束游戏
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsEndGame {
      get { if ((_hasBits0 & 1) != 0) { return isEndGame_; } else { return IsEndGameDefaultValue; } }
      set {
        _hasBits0 |= 1;
        isEndGame_ = value;
      }
    }
    /// <summary>Gets whether the "isEndGame" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIsEndGame {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "isEndGame" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIsEndGame() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "PLAYER_IDENTITY_LIST" field.</summary>
    public const int PLAYERIDENTITYLISTFieldNumber = 2;
    private static readonly pb::FieldCodec<global::HardCordGirlData.PlayerKeyWord> _repeated_pLAYERIDENTITYLIST_codec
        = pb::FieldCodec.ForMessage(18, global::HardCordGirlData.PlayerKeyWord.Parser);
    private readonly pbc::RepeatedField<global::HardCordGirlData.PlayerKeyWord> pLAYERIDENTITYLIST_ = new pbc::RepeatedField<global::HardCordGirlData.PlayerKeyWord>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::HardCordGirlData.PlayerKeyWord> PLAYERIDENTITYLIST {
      get { return pLAYERIDENTITYLIST_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as INSIDEMAN_IDENTITY__NOTIFY);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(INSIDEMAN_IDENTITY__NOTIFY other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (IsEndGame != other.IsEndGame) return false;
      if(!pLAYERIDENTITYLIST_.Equals(other.pLAYERIDENTITYLIST_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasIsEndGame) hash ^= IsEndGame.GetHashCode();
      hash ^= pLAYERIDENTITYLIST_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasIsEndGame) {
        output.WriteRawTag(8);
        output.WriteBool(IsEndGame);
      }
      pLAYERIDENTITYLIST_.WriteTo(output, _repeated_pLAYERIDENTITYLIST_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasIsEndGame) {
        output.WriteRawTag(8);
        output.WriteBool(IsEndGame);
      }
      pLAYERIDENTITYLIST_.WriteTo(ref output, _repeated_pLAYERIDENTITYLIST_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasIsEndGame) {
        size += 1 + 1;
      }
      size += pLAYERIDENTITYLIST_.CalculateSize(_repeated_pLAYERIDENTITYLIST_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(INSIDEMAN_IDENTITY__NOTIFY other) {
      if (other == null) {
        return;
      }
      if (other.HasIsEndGame) {
        IsEndGame = other.IsEndGame;
      }
      pLAYERIDENTITYLIST_.Add(other.pLAYERIDENTITYLIST_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            IsEndGame = input.ReadBool();
            break;
          }
          case 18: {
            pLAYERIDENTITYLIST_.AddEntriesFrom(input, _repeated_pLAYERIDENTITYLIST_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            IsEndGame = input.ReadBool();
            break;
          }
          case 18: {
            pLAYERIDENTITYLIST_.AddEntriesFrom(ref input, _repeated_pLAYERIDENTITYLIST_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///主持人选中玩家参与谁是卧底游戏
  /// </summary>
  public sealed partial class InsideMan_SelectPlayer : pb::IMessage<InsideMan_SelectPlayer>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<InsideMan_SelectPlayer> _parser = new pb::MessageParser<InsideMan_SelectPlayer>(() => new InsideMan_SelectPlayer());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<InsideMan_SelectPlayer> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HardCordGirlData.HardCordGirlDataClassReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public InsideMan_SelectPlayer() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public InsideMan_SelectPlayer(InsideMan_SelectPlayer other) : this() {
      _hasBits0 = other._hasBits0;
      playerId_ = other.playerId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public InsideMan_SelectPlayer Clone() {
      return new InsideMan_SelectPlayer(this);
    }

    /// <summary>Field number for the "playerId" field.</summary>
    public const int PlayerIdFieldNumber = 1;
    private readonly static int PlayerIdDefaultValue = 0;

    private int playerId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int PlayerId {
      get { if ((_hasBits0 & 1) != 0) { return playerId_; } else { return PlayerIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        playerId_ = value;
      }
    }
    /// <summary>Gets whether the "playerId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPlayerId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "playerId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPlayerId() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as InsideMan_SelectPlayer);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(InsideMan_SelectPlayer other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlayerId != other.PlayerId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasPlayerId) hash ^= PlayerId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasPlayerId) {
        output.WriteRawTag(8);
        output.WriteInt32(PlayerId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasPlayerId) {
        output.WriteRawTag(8);
        output.WriteInt32(PlayerId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasPlayerId) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PlayerId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(InsideMan_SelectPlayer other) {
      if (other == null) {
        return;
      }
      if (other.HasPlayerId) {
        PlayerId = other.PlayerId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PlayerId = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            PlayerId = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///玩家身份列表（ID与身份一一对应）
  /// </summary>
  public sealed partial class PlayerIdentityList : pb::IMessage<PlayerIdentityList>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PlayerIdentityList> _parser = new pb::MessageParser<PlayerIdentityList>(() => new PlayerIdentityList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PlayerIdentityList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HardCordGirlData.HardCordGirlDataClassReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PlayerIdentityList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PlayerIdentityList(PlayerIdentityList other) : this() {
      id_ = other.id_.Clone();
      identity_ = other.identity_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PlayerIdentityList Clone() {
      return new PlayerIdentityList(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private static readonly pb::FieldCodec<int> _repeated_id_codec
        = pb::FieldCodec.ForInt32(8);
    private readonly pbc::RepeatedField<int> id_ = new pbc::RepeatedField<int>();
    /// <summary>
    ///ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<int> Id {
      get { return id_; }
    }

    /// <summary>Field number for the "identity" field.</summary>
    public const int IdentityFieldNumber = 2;
    private static readonly pb::FieldCodec<int> _repeated_identity_codec
        = pb::FieldCodec.ForInt32(16);
    private readonly pbc::RepeatedField<int> identity_ = new pbc::RepeatedField<int>();
    /// <summary>
    ///身份 0 表示无 1表示红队 2表示蓝队
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<int> Identity {
      get { return identity_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PlayerIdentityList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PlayerIdentityList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!id_.Equals(other.id_)) return false;
      if(!identity_.Equals(other.identity_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= id_.GetHashCode();
      hash ^= identity_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      id_.WriteTo(output, _repeated_id_codec);
      identity_.WriteTo(output, _repeated_identity_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      id_.WriteTo(ref output, _repeated_id_codec);
      identity_.WriteTo(ref output, _repeated_identity_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += id_.CalculateSize(_repeated_id_codec);
      size += identity_.CalculateSize(_repeated_identity_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PlayerIdentityList other) {
      if (other == null) {
        return;
      }
      id_.Add(other.id_);
      identity_.Add(other.identity_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10:
          case 8: {
            id_.AddEntriesFrom(input, _repeated_id_codec);
            break;
          }
          case 18:
          case 16: {
            identity_.AddEntriesFrom(input, _repeated_identity_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10:
          case 8: {
            id_.AddEntriesFrom(ref input, _repeated_id_codec);
            break;
          }
          case 18:
          case 16: {
            identity_.AddEntriesFrom(ref input, _repeated_identity_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///玩家等级更新
  /// </summary>
  public sealed partial class PlayerLevelInfo : pb::IMessage<PlayerLevelInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PlayerLevelInfo> _parser = new pb::MessageParser<PlayerLevelInfo>(() => new PlayerLevelInfo());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PlayerLevelInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HardCordGirlData.HardCordGirlDataClassReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PlayerLevelInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PlayerLevelInfo(PlayerLevelInfo other) : this() {
      _hasBits0 = other._hasBits0;
      userId_ = other.userId_;
      level_ = other.level_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PlayerLevelInfo Clone() {
      return new PlayerLevelInfo(this);
    }

    /// <summary>Field number for the "userId" field.</summary>
    public const int UserIdFieldNumber = 1;
    private readonly static int UserIdDefaultValue = 0;

    private int userId_;
    /// <summary>
    ///玩家ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int UserId {
      get { if ((_hasBits0 & 1) != 0) { return userId_; } else { return UserIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        userId_ = value;
      }
    }
    /// <summary>Gets whether the "userId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasUserId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "userId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearUserId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "level" field.</summary>
    public const int LevelFieldNumber = 2;
    private readonly static int LevelDefaultValue = 0;

    private int level_;
    /// <summary>
    ///玩家等级
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Level {
      get { if ((_hasBits0 & 2) != 0) { return level_; } else { return LevelDefaultValue; } }
      set {
        _hasBits0 |= 2;
        level_ = value;
      }
    }
    /// <summary>Gets whether the "level" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLevel {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "level" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLevel() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PlayerLevelInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PlayerLevelInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UserId != other.UserId) return false;
      if (Level != other.Level) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasUserId) hash ^= UserId.GetHashCode();
      if (HasLevel) hash ^= Level.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasUserId) {
        output.WriteRawTag(8);
        output.WriteInt32(UserId);
      }
      if (HasLevel) {
        output.WriteRawTag(16);
        output.WriteInt32(Level);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasUserId) {
        output.WriteRawTag(8);
        output.WriteInt32(UserId);
      }
      if (HasLevel) {
        output.WriteRawTag(16);
        output.WriteInt32(Level);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasUserId) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UserId);
      }
      if (HasLevel) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Level);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PlayerLevelInfo other) {
      if (other == null) {
        return;
      }
      if (other.HasUserId) {
        UserId = other.UserId;
      }
      if (other.HasLevel) {
        Level = other.Level;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            UserId = input.ReadInt32();
            break;
          }
          case 16: {
            Level = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            UserId = input.ReadInt32();
            break;
          }
          case 16: {
            Level = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///玩家组队位置同步
  /// </summary>
  public sealed partial class PlayerOrganizePosData : pb::IMessage<PlayerOrganizePosData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PlayerOrganizePosData> _parser = new pb::MessageParser<PlayerOrganizePosData>(() => new PlayerOrganizePosData());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PlayerOrganizePosData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HardCordGirlData.HardCordGirlDataClassReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PlayerOrganizePosData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PlayerOrganizePosData(PlayerOrganizePosData other) : this() {
      _hasBits0 = other._hasBits0;
      id_ = other.id_;
      pos_ = other.pos_ != null ? other.pos_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PlayerOrganizePosData Clone() {
      return new PlayerOrganizePosData(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private readonly static int IdDefaultValue = 0;

    private int id_;
    /// <summary>
    ///ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Id {
      get { if ((_hasBits0 & 1) != 0) { return id_; } else { return IdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        id_ = value;
      }
    }
    /// <summary>Gets whether the "id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "pos" field.</summary>
    public const int PosFieldNumber = 2;
    private global::HardCordGirlData.VECTOR3 pos_;
    /// <summary>
    ///玩家位置
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::HardCordGirlData.VECTOR3 Pos {
      get { return pos_; }
      set {
        pos_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PlayerOrganizePosData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PlayerOrganizePosData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (!object.Equals(Pos, other.Pos)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasId) hash ^= Id.GetHashCode();
      if (pos_ != null) hash ^= Pos.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasId) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (pos_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Pos);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasId) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (pos_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Pos);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasId) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (pos_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Pos);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PlayerOrganizePosData other) {
      if (other == null) {
        return;
      }
      if (other.HasId) {
        Id = other.Id;
      }
      if (other.pos_ != null) {
        if (pos_ == null) {
          Pos = new global::HardCordGirlData.VECTOR3();
        }
        Pos.MergeFrom(other.Pos);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            if (pos_ == null) {
              Pos = new global::HardCordGirlData.VECTOR3();
            }
            input.ReadMessage(Pos);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            if (pos_ == null) {
              Pos = new global::HardCordGirlData.VECTOR3();
            }
            input.ReadMessage(Pos);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class AnswerInfo : pb::IMessage<AnswerInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AnswerInfo> _parser = new pb::MessageParser<AnswerInfo>(() => new AnswerInfo());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<AnswerInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HardCordGirlData.HardCordGirlDataClassReflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AnswerInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AnswerInfo(AnswerInfo other) : this() {
      _hasBits0 = other._hasBits0;
      answerType_ = other.answerType_;
      answer_ = other.answer_;
      isCorrect_ = other.isCorrect_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AnswerInfo Clone() {
      return new AnswerInfo(this);
    }

    /// <summary>Field number for the "answerType" field.</summary>
    public const int AnswerTypeFieldNumber = 1;
    private readonly static int AnswerTypeDefaultValue = 0;

    private int answerType_;
    /// <summary>
    /// 0 ：直接显示 1：加载图片显示
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int AnswerType {
      get { if ((_hasBits0 & 1) != 0) { return answerType_; } else { return AnswerTypeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        answerType_ = value;
      }
    }
    /// <summary>Gets whether the "answerType" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAnswerType {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "answerType" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAnswerType() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "answer" field.</summary>
    public const int AnswerFieldNumber = 2;
    private readonly static string AnswerDefaultValue = "";

    private string answer_;
    /// <summary>
    ///答案
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Answer {
      get { return answer_ ?? AnswerDefaultValue; }
      set {
        answer_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "answer" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAnswer {
      get { return answer_ != null; }
    }
    /// <summary>Clears the value of the "answer" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAnswer() {
      answer_ = null;
    }

    /// <summary>Field number for the "isCorrect" field.</summary>
    public const int IsCorrectFieldNumber = 3;
    private readonly static bool IsCorrectDefaultValue = false;

    private bool isCorrect_;
    /// <summary>
    ///是否是正确答案
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsCorrect {
      get { if ((_hasBits0 & 2) != 0) { return isCorrect_; } else { return IsCorrectDefaultValue; } }
      set {
        _hasBits0 |= 2;
        isCorrect_ = value;
      }
    }
    /// <summary>Gets whether the "isCorrect" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIsCorrect {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "isCorrect" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIsCorrect() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as AnswerInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(AnswerInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AnswerType != other.AnswerType) return false;
      if (Answer != other.Answer) return false;
      if (IsCorrect != other.IsCorrect) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasAnswerType) hash ^= AnswerType.GetHashCode();
      if (HasAnswer) hash ^= Answer.GetHashCode();
      if (HasIsCorrect) hash ^= IsCorrect.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasAnswerType) {
        output.WriteRawTag(8);
        output.WriteInt32(AnswerType);
      }
      if (HasAnswer) {
        output.WriteRawTag(18);
        output.WriteString(Answer);
      }
      if (HasIsCorrect) {
        output.WriteRawTag(24);
        output.WriteBool(IsCorrect);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasAnswerType) {
        output.WriteRawTag(8);
        output.WriteInt32(AnswerType);
      }
      if (HasAnswer) {
        output.WriteRawTag(18);
        output.WriteString(Answer);
      }
      if (HasIsCorrect) {
        output.WriteRawTag(24);
        output.WriteBool(IsCorrect);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasAnswerType) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AnswerType);
      }
      if (HasAnswer) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Answer);
      }
      if (HasIsCorrect) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(AnswerInfo other) {
      if (other == null) {
        return;
      }
      if (other.HasAnswerType) {
        AnswerType = other.AnswerType;
      }
      if (other.HasAnswer) {
        Answer = other.Answer;
      }
      if (other.HasIsCorrect) {
        IsCorrect = other.IsCorrect;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            AnswerType = input.ReadInt32();
            break;
          }
          case 18: {
            Answer = input.ReadString();
            break;
          }
          case 24: {
            IsCorrect = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            AnswerType = input.ReadInt32();
            break;
          }
          case 18: {
            Answer = input.ReadString();
            break;
          }
          case 24: {
            IsCorrect = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class GuLu_Answer_QA : pb::IMessage<GuLu_Answer_QA>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GuLu_Answer_QA> _parser = new pb::MessageParser<GuLu_Answer_QA>(() => new GuLu_Answer_QA());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GuLu_Answer_QA> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HardCordGirlData.HardCordGirlDataClassReflection.Descriptor.MessageTypes[19]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GuLu_Answer_QA() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GuLu_Answer_QA(GuLu_Answer_QA other) : this() {
      _hasBits0 = other._hasBits0;
      question_ = other.question_;
      qId_ = other.qId_;
      round_ = other.round_;
      answerList_ = other.answerList_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GuLu_Answer_QA Clone() {
      return new GuLu_Answer_QA(this);
    }

    /// <summary>Field number for the "question" field.</summary>
    public const int QuestionFieldNumber = 1;
    private readonly static string QuestionDefaultValue = "";

    private string question_;
    /// <summary>
    /// 问题
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Question {
      get { return question_ ?? QuestionDefaultValue; }
      set {
        question_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "question" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasQuestion {
      get { return question_ != null; }
    }
    /// <summary>Clears the value of the "question" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearQuestion() {
      question_ = null;
    }

    /// <summary>Field number for the "qId" field.</summary>
    public const int QIdFieldNumber = 2;
    private readonly static int QIdDefaultValue = 0;

    private int qId_;
    /// <summary>
    ///问题id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int QId {
      get { if ((_hasBits0 & 1) != 0) { return qId_; } else { return QIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        qId_ = value;
      }
    }
    /// <summary>Gets whether the "qId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasQId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "qId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearQId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "round" field.</summary>
    public const int RoundFieldNumber = 3;
    private readonly static int RoundDefaultValue = 0;

    private int round_;
    /// <summary>
    ///轮次数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Round {
      get { if ((_hasBits0 & 2) != 0) { return round_; } else { return RoundDefaultValue; } }
      set {
        _hasBits0 |= 2;
        round_ = value;
      }
    }
    /// <summary>Gets whether the "round" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRound {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "round" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRound() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "answerList" field.</summary>
    public const int AnswerListFieldNumber = 4;
    private static readonly pb::FieldCodec<global::HardCordGirlData.AnswerInfo> _repeated_answerList_codec
        = pb::FieldCodec.ForMessage(34, global::HardCordGirlData.AnswerInfo.Parser);
    private readonly pbc::RepeatedField<global::HardCordGirlData.AnswerInfo> answerList_ = new pbc::RepeatedField<global::HardCordGirlData.AnswerInfo>();
    /// <summary>
    /// 答案列表
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::HardCordGirlData.AnswerInfo> AnswerList {
      get { return answerList_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GuLu_Answer_QA);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GuLu_Answer_QA other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Question != other.Question) return false;
      if (QId != other.QId) return false;
      if (Round != other.Round) return false;
      if(!answerList_.Equals(other.answerList_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasQuestion) hash ^= Question.GetHashCode();
      if (HasQId) hash ^= QId.GetHashCode();
      if (HasRound) hash ^= Round.GetHashCode();
      hash ^= answerList_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasQuestion) {
        output.WriteRawTag(10);
        output.WriteString(Question);
      }
      if (HasQId) {
        output.WriteRawTag(16);
        output.WriteInt32(QId);
      }
      if (HasRound) {
        output.WriteRawTag(24);
        output.WriteInt32(Round);
      }
      answerList_.WriteTo(output, _repeated_answerList_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasQuestion) {
        output.WriteRawTag(10);
        output.WriteString(Question);
      }
      if (HasQId) {
        output.WriteRawTag(16);
        output.WriteInt32(QId);
      }
      if (HasRound) {
        output.WriteRawTag(24);
        output.WriteInt32(Round);
      }
      answerList_.WriteTo(ref output, _repeated_answerList_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasQuestion) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Question);
      }
      if (HasQId) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(QId);
      }
      if (HasRound) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Round);
      }
      size += answerList_.CalculateSize(_repeated_answerList_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GuLu_Answer_QA other) {
      if (other == null) {
        return;
      }
      if (other.HasQuestion) {
        Question = other.Question;
      }
      if (other.HasQId) {
        QId = other.QId;
      }
      if (other.HasRound) {
        Round = other.Round;
      }
      answerList_.Add(other.answerList_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Question = input.ReadString();
            break;
          }
          case 16: {
            QId = input.ReadInt32();
            break;
          }
          case 24: {
            Round = input.ReadInt32();
            break;
          }
          case 34: {
            answerList_.AddEntriesFrom(input, _repeated_answerList_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Question = input.ReadString();
            break;
          }
          case 16: {
            QId = input.ReadInt32();
            break;
          }
          case 24: {
            Round = input.ReadInt32();
            break;
          }
          case 34: {
            answerList_.AddEntriesFrom(ref input, _repeated_answerList_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class GuLu_Memory_QA : pb::IMessage<GuLu_Memory_QA>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GuLu_Memory_QA> _parser = new pb::MessageParser<GuLu_Memory_QA>(() => new GuLu_Memory_QA());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GuLu_Memory_QA> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HardCordGirlData.HardCordGirlDataClassReflection.Descriptor.MessageTypes[20]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GuLu_Memory_QA() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GuLu_Memory_QA(GuLu_Memory_QA other) : this() {
      _hasBits0 = other._hasBits0;
      round_ = other.round_;
      picType_ = other.picType_;
      pics_ = other.pics_.Clone();
      hexagons_ = other.hexagons_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GuLu_Memory_QA Clone() {
      return new GuLu_Memory_QA(this);
    }

    /// <summary>Field number for the "round" field.</summary>
    public const int RoundFieldNumber = 1;
    private readonly static int RoundDefaultValue = 0;

    private int round_;
    /// <summary>
    ///轮次数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Round {
      get { if ((_hasBits0 & 1) != 0) { return round_; } else { return RoundDefaultValue; } }
      set {
        _hasBits0 |= 1;
        round_ = value;
      }
    }
    /// <summary>Gets whether the "round" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRound {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "round" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRound() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "picType" field.</summary>
    public const int PicTypeFieldNumber = 2;
    private readonly static int PicTypeDefaultValue = 0;

    private int picType_;
    /// <summary>
    ///抽取图片类型
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int PicType {
      get { if ((_hasBits0 & 2) != 0) { return picType_; } else { return PicTypeDefaultValue; } }
      set {
        _hasBits0 |= 2;
        picType_ = value;
      }
    }
    /// <summary>Gets whether the "picType" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPicType {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "picType" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPicType() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "pics" field.</summary>
    public const int PicsFieldNumber = 3;
    private static readonly pb::FieldCodec<int> _repeated_pics_codec
        = pb::FieldCodec.ForInt32(24);
    private readonly pbc::RepeatedField<int> pics_ = new pbc::RepeatedField<int>();
    /// <summary>
    ///抽取的图片编号
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<int> Pics {
      get { return pics_; }
    }

    /// <summary>Field number for the "hexagons" field.</summary>
    public const int HexagonsFieldNumber = 4;
    private static readonly pb::FieldCodec<int> _repeated_hexagons_codec
        = pb::FieldCodec.ForInt32(32);
    private readonly pbc::RepeatedField<int> hexagons_ = new pbc::RepeatedField<int>();
    /// <summary>
    ///抽取的六边形编号
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<int> Hexagons {
      get { return hexagons_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GuLu_Memory_QA);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GuLu_Memory_QA other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Round != other.Round) return false;
      if (PicType != other.PicType) return false;
      if(!pics_.Equals(other.pics_)) return false;
      if(!hexagons_.Equals(other.hexagons_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasRound) hash ^= Round.GetHashCode();
      if (HasPicType) hash ^= PicType.GetHashCode();
      hash ^= pics_.GetHashCode();
      hash ^= hexagons_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasRound) {
        output.WriteRawTag(8);
        output.WriteInt32(Round);
      }
      if (HasPicType) {
        output.WriteRawTag(16);
        output.WriteInt32(PicType);
      }
      pics_.WriteTo(output, _repeated_pics_codec);
      hexagons_.WriteTo(output, _repeated_hexagons_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasRound) {
        output.WriteRawTag(8);
        output.WriteInt32(Round);
      }
      if (HasPicType) {
        output.WriteRawTag(16);
        output.WriteInt32(PicType);
      }
      pics_.WriteTo(ref output, _repeated_pics_codec);
      hexagons_.WriteTo(ref output, _repeated_hexagons_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasRound) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Round);
      }
      if (HasPicType) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PicType);
      }
      size += pics_.CalculateSize(_repeated_pics_codec);
      size += hexagons_.CalculateSize(_repeated_hexagons_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GuLu_Memory_QA other) {
      if (other == null) {
        return;
      }
      if (other.HasRound) {
        Round = other.Round;
      }
      if (other.HasPicType) {
        PicType = other.PicType;
      }
      pics_.Add(other.pics_);
      hexagons_.Add(other.hexagons_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Round = input.ReadInt32();
            break;
          }
          case 16: {
            PicType = input.ReadInt32();
            break;
          }
          case 26:
          case 24: {
            pics_.AddEntriesFrom(input, _repeated_pics_codec);
            break;
          }
          case 34:
          case 32: {
            hexagons_.AddEntriesFrom(input, _repeated_hexagons_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Round = input.ReadInt32();
            break;
          }
          case 16: {
            PicType = input.ReadInt32();
            break;
          }
          case 26:
          case 24: {
            pics_.AddEntriesFrom(ref input, _repeated_pics_codec);
            break;
          }
          case 34:
          case 32: {
            hexagons_.AddEntriesFrom(ref input, _repeated_hexagons_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class GuLu_ChangeScene_Info : pb::IMessage<GuLu_ChangeScene_Info>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GuLu_ChangeScene_Info> _parser = new pb::MessageParser<GuLu_ChangeScene_Info>(() => new GuLu_ChangeScene_Info());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GuLu_ChangeScene_Info> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HardCordGirlData.HardCordGirlDataClassReflection.Descriptor.MessageTypes[21]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GuLu_ChangeScene_Info() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GuLu_ChangeScene_Info(GuLu_ChangeScene_Info other) : this() {
      _hasBits0 = other._hasBits0;
      isBack_ = other.isBack_;
      sceneId_ = other.sceneId_;
      roomId_ = other.roomId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GuLu_ChangeScene_Info Clone() {
      return new GuLu_ChangeScene_Info(this);
    }

    /// <summary>Field number for the "isBack" field.</summary>
    public const int IsBackFieldNumber = 1;
    private readonly static bool IsBackDefaultValue = false;

    private bool isBack_;
    /// <summary>
    ///进入或者退出
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsBack {
      get { if ((_hasBits0 & 1) != 0) { return isBack_; } else { return IsBackDefaultValue; } }
      set {
        _hasBits0 |= 1;
        isBack_ = value;
      }
    }
    /// <summary>Gets whether the "isBack" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIsBack {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "isBack" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIsBack() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "sceneId" field.</summary>
    public const int SceneIdFieldNumber = 2;
    private readonly static int SceneIdDefaultValue = 0;

    private int sceneId_;
    /// <summary>
    ///场景id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int SceneId {
      get { if ((_hasBits0 & 2) != 0) { return sceneId_; } else { return SceneIdDefaultValue; } }
      set {
        _hasBits0 |= 2;
        sceneId_ = value;
      }
    }
    /// <summary>Gets whether the "sceneId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSceneId {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "sceneId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSceneId() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "roomId" field.</summary>
    public const int RoomIdFieldNumber = 3;
    private readonly static int RoomIdDefaultValue = 0;

    private int roomId_;
    /// <summary>
    ///房间id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int RoomId {
      get { if ((_hasBits0 & 4) != 0) { return roomId_; } else { return RoomIdDefaultValue; } }
      set {
        _hasBits0 |= 4;
        roomId_ = value;
      }
    }
    /// <summary>Gets whether the "roomId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRoomId {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "roomId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRoomId() {
      _hasBits0 &= ~4;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GuLu_ChangeScene_Info);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GuLu_ChangeScene_Info other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (IsBack != other.IsBack) return false;
      if (SceneId != other.SceneId) return false;
      if (RoomId != other.RoomId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasIsBack) hash ^= IsBack.GetHashCode();
      if (HasSceneId) hash ^= SceneId.GetHashCode();
      if (HasRoomId) hash ^= RoomId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasIsBack) {
        output.WriteRawTag(8);
        output.WriteBool(IsBack);
      }
      if (HasSceneId) {
        output.WriteRawTag(16);
        output.WriteInt32(SceneId);
      }
      if (HasRoomId) {
        output.WriteRawTag(24);
        output.WriteInt32(RoomId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasIsBack) {
        output.WriteRawTag(8);
        output.WriteBool(IsBack);
      }
      if (HasSceneId) {
        output.WriteRawTag(16);
        output.WriteInt32(SceneId);
      }
      if (HasRoomId) {
        output.WriteRawTag(24);
        output.WriteInt32(RoomId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasIsBack) {
        size += 1 + 1;
      }
      if (HasSceneId) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SceneId);
      }
      if (HasRoomId) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RoomId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GuLu_ChangeScene_Info other) {
      if (other == null) {
        return;
      }
      if (other.HasIsBack) {
        IsBack = other.IsBack;
      }
      if (other.HasSceneId) {
        SceneId = other.SceneId;
      }
      if (other.HasRoomId) {
        RoomId = other.RoomId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            IsBack = input.ReadBool();
            break;
          }
          case 16: {
            SceneId = input.ReadInt32();
            break;
          }
          case 24: {
            RoomId = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            IsBack = input.ReadBool();
            break;
          }
          case 16: {
            SceneId = input.ReadInt32();
            break;
          }
          case 24: {
            RoomId = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class GuLu_PlayerOut_Info : pb::IMessage<GuLu_PlayerOut_Info>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GuLu_PlayerOut_Info> _parser = new pb::MessageParser<GuLu_PlayerOut_Info>(() => new GuLu_PlayerOut_Info());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GuLu_PlayerOut_Info> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HardCordGirlData.HardCordGirlDataClassReflection.Descriptor.MessageTypes[22]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GuLu_PlayerOut_Info() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GuLu_PlayerOut_Info(GuLu_PlayerOut_Info other) : this() {
      _hasBits0 = other._hasBits0;
      playerId_ = other.playerId_;
      outRound_ = other.outRound_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GuLu_PlayerOut_Info Clone() {
      return new GuLu_PlayerOut_Info(this);
    }

    /// <summary>Field number for the "playerId" field.</summary>
    public const int PlayerIdFieldNumber = 1;
    private readonly static int PlayerIdDefaultValue = 0;

    private int playerId_;
    /// <summary>
    ///玩家id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int PlayerId {
      get { if ((_hasBits0 & 1) != 0) { return playerId_; } else { return PlayerIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        playerId_ = value;
      }
    }
    /// <summary>Gets whether the "playerId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPlayerId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "playerId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPlayerId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "outRound" field.</summary>
    public const int OutRoundFieldNumber = 2;
    private readonly static int OutRoundDefaultValue = 0;

    private int outRound_;
    /// <summary>
    ///淘汰轮次
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int OutRound {
      get { if ((_hasBits0 & 2) != 0) { return outRound_; } else { return OutRoundDefaultValue; } }
      set {
        _hasBits0 |= 2;
        outRound_ = value;
      }
    }
    /// <summary>Gets whether the "outRound" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasOutRound {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "outRound" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearOutRound() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GuLu_PlayerOut_Info);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GuLu_PlayerOut_Info other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlayerId != other.PlayerId) return false;
      if (OutRound != other.OutRound) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasPlayerId) hash ^= PlayerId.GetHashCode();
      if (HasOutRound) hash ^= OutRound.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasPlayerId) {
        output.WriteRawTag(8);
        output.WriteInt32(PlayerId);
      }
      if (HasOutRound) {
        output.WriteRawTag(16);
        output.WriteInt32(OutRound);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasPlayerId) {
        output.WriteRawTag(8);
        output.WriteInt32(PlayerId);
      }
      if (HasOutRound) {
        output.WriteRawTag(16);
        output.WriteInt32(OutRound);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasPlayerId) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PlayerId);
      }
      if (HasOutRound) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(OutRound);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GuLu_PlayerOut_Info other) {
      if (other == null) {
        return;
      }
      if (other.HasPlayerId) {
        PlayerId = other.PlayerId;
      }
      if (other.HasOutRound) {
        OutRound = other.OutRound;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PlayerId = input.ReadInt32();
            break;
          }
          case 16: {
            OutRound = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            PlayerId = input.ReadInt32();
            break;
          }
          case 16: {
            OutRound = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class GuLu_PlayerBlackScreen_Info : pb::IMessage<GuLu_PlayerBlackScreen_Info>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GuLu_PlayerBlackScreen_Info> _parser = new pb::MessageParser<GuLu_PlayerBlackScreen_Info>(() => new GuLu_PlayerBlackScreen_Info());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GuLu_PlayerBlackScreen_Info> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HardCordGirlData.HardCordGirlDataClassReflection.Descriptor.MessageTypes[23]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GuLu_PlayerBlackScreen_Info() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GuLu_PlayerBlackScreen_Info(GuLu_PlayerBlackScreen_Info other) : this() {
      _hasBits0 = other._hasBits0;
      playerId_ = other.playerId_;
      isBlackScreen_ = other.isBlackScreen_;
      safePosId_ = other.safePosId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GuLu_PlayerBlackScreen_Info Clone() {
      return new GuLu_PlayerBlackScreen_Info(this);
    }

    /// <summary>Field number for the "playerId" field.</summary>
    public const int PlayerIdFieldNumber = 1;
    private readonly static int PlayerIdDefaultValue = 0;

    private int playerId_;
    /// <summary>
    ///玩家id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int PlayerId {
      get { if ((_hasBits0 & 1) != 0) { return playerId_; } else { return PlayerIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        playerId_ = value;
      }
    }
    /// <summary>Gets whether the "playerId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPlayerId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "playerId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPlayerId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "isBlackScreen" field.</summary>
    public const int IsBlackScreenFieldNumber = 2;
    private readonly static bool IsBlackScreenDefaultValue = false;

    private bool isBlackScreen_;
    /// <summary>
    ///玩家是否黑屏
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsBlackScreen {
      get { if ((_hasBits0 & 2) != 0) { return isBlackScreen_; } else { return IsBlackScreenDefaultValue; } }
      set {
        _hasBits0 |= 2;
        isBlackScreen_ = value;
      }
    }
    /// <summary>Gets whether the "isBlackScreen" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIsBlackScreen {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "isBlackScreen" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIsBlackScreen() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "safePosId" field.</summary>
    public const int SafePosIdFieldNumber = 3;
    private readonly static int SafePosIdDefaultValue = 0;

    private int safePosId_;
    /// <summary>
    ///安全位置ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int SafePosId {
      get { if ((_hasBits0 & 4) != 0) { return safePosId_; } else { return SafePosIdDefaultValue; } }
      set {
        _hasBits0 |= 4;
        safePosId_ = value;
      }
    }
    /// <summary>Gets whether the "safePosId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSafePosId {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "safePosId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSafePosId() {
      _hasBits0 &= ~4;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GuLu_PlayerBlackScreen_Info);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GuLu_PlayerBlackScreen_Info other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlayerId != other.PlayerId) return false;
      if (IsBlackScreen != other.IsBlackScreen) return false;
      if (SafePosId != other.SafePosId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasPlayerId) hash ^= PlayerId.GetHashCode();
      if (HasIsBlackScreen) hash ^= IsBlackScreen.GetHashCode();
      if (HasSafePosId) hash ^= SafePosId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasPlayerId) {
        output.WriteRawTag(8);
        output.WriteInt32(PlayerId);
      }
      if (HasIsBlackScreen) {
        output.WriteRawTag(16);
        output.WriteBool(IsBlackScreen);
      }
      if (HasSafePosId) {
        output.WriteRawTag(24);
        output.WriteInt32(SafePosId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasPlayerId) {
        output.WriteRawTag(8);
        output.WriteInt32(PlayerId);
      }
      if (HasIsBlackScreen) {
        output.WriteRawTag(16);
        output.WriteBool(IsBlackScreen);
      }
      if (HasSafePosId) {
        output.WriteRawTag(24);
        output.WriteInt32(SafePosId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasPlayerId) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PlayerId);
      }
      if (HasIsBlackScreen) {
        size += 1 + 1;
      }
      if (HasSafePosId) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SafePosId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GuLu_PlayerBlackScreen_Info other) {
      if (other == null) {
        return;
      }
      if (other.HasPlayerId) {
        PlayerId = other.PlayerId;
      }
      if (other.HasIsBlackScreen) {
        IsBlackScreen = other.IsBlackScreen;
      }
      if (other.HasSafePosId) {
        SafePosId = other.SafePosId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PlayerId = input.ReadInt32();
            break;
          }
          case 16: {
            IsBlackScreen = input.ReadBool();
            break;
          }
          case 24: {
            SafePosId = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            PlayerId = input.ReadInt32();
            break;
          }
          case 16: {
            IsBlackScreen = input.ReadBool();
            break;
          }
          case 24: {
            SafePosId = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class GuLu_Player_SpawnPosIndex : pb::IMessage<GuLu_Player_SpawnPosIndex>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GuLu_Player_SpawnPosIndex> _parser = new pb::MessageParser<GuLu_Player_SpawnPosIndex>(() => new GuLu_Player_SpawnPosIndex());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GuLu_Player_SpawnPosIndex> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HardCordGirlData.HardCordGirlDataClassReflection.Descriptor.MessageTypes[24]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GuLu_Player_SpawnPosIndex() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GuLu_Player_SpawnPosIndex(GuLu_Player_SpawnPosIndex other) : this() {
      playerId_ = other.playerId_.Clone();
      posIndex_ = other.posIndex_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GuLu_Player_SpawnPosIndex Clone() {
      return new GuLu_Player_SpawnPosIndex(this);
    }

    /// <summary>Field number for the "playerId" field.</summary>
    public const int PlayerIdFieldNumber = 1;
    private static readonly pb::FieldCodec<uint> _repeated_playerId_codec
        = pb::FieldCodec.ForUInt32(8);
    private readonly pbc::RepeatedField<uint> playerId_ = new pbc::RepeatedField<uint>();
    /// <summary>
    ///玩家id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<uint> PlayerId {
      get { return playerId_; }
    }

    /// <summary>Field number for the "posIndex" field.</summary>
    public const int PosIndexFieldNumber = 2;
    private static readonly pb::FieldCodec<int> _repeated_posIndex_codec
        = pb::FieldCodec.ForInt32(16);
    private readonly pbc::RepeatedField<int> posIndex_ = new pbc::RepeatedField<int>();
    /// <summary>
    ///生成位置
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<int> PosIndex {
      get { return posIndex_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GuLu_Player_SpawnPosIndex);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GuLu_Player_SpawnPosIndex other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!playerId_.Equals(other.playerId_)) return false;
      if(!posIndex_.Equals(other.posIndex_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= playerId_.GetHashCode();
      hash ^= posIndex_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      playerId_.WriteTo(output, _repeated_playerId_codec);
      posIndex_.WriteTo(output, _repeated_posIndex_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      playerId_.WriteTo(ref output, _repeated_playerId_codec);
      posIndex_.WriteTo(ref output, _repeated_posIndex_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += playerId_.CalculateSize(_repeated_playerId_codec);
      size += posIndex_.CalculateSize(_repeated_posIndex_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GuLu_Player_SpawnPosIndex other) {
      if (other == null) {
        return;
      }
      playerId_.Add(other.playerId_);
      posIndex_.Add(other.posIndex_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10:
          case 8: {
            playerId_.AddEntriesFrom(input, _repeated_playerId_codec);
            break;
          }
          case 18:
          case 16: {
            posIndex_.AddEntriesFrom(input, _repeated_posIndex_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10:
          case 8: {
            playerId_.AddEntriesFrom(ref input, _repeated_playerId_codec);
            break;
          }
          case 18:
          case 16: {
            posIndex_.AddEntriesFrom(ref input, _repeated_posIndex_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class GuLu_MiniGameStart_Info : pb::IMessage<GuLu_MiniGameStart_Info>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GuLu_MiniGameStart_Info> _parser = new pb::MessageParser<GuLu_MiniGameStart_Info>(() => new GuLu_MiniGameStart_Info());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GuLu_MiniGameStart_Info> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HardCordGirlData.HardCordGirlDataClassReflection.Descriptor.MessageTypes[25]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GuLu_MiniGameStart_Info() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GuLu_MiniGameStart_Info(GuLu_MiniGameStart_Info other) : this() {
      _hasBits0 = other._hasBits0;
      playerId_ = other.playerId_;
      gameType_ = other.gameType_;
      gameTheme_ = other.gameTheme_;
      sceneLoad_ = other.sceneLoad_;
      gameIndex_ = other.gameIndex_;
      curGameIndex_ = other.curGameIndex_;
      playerPosList_ = other.playerPosList_ != null ? other.playerPosList_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GuLu_MiniGameStart_Info Clone() {
      return new GuLu_MiniGameStart_Info(this);
    }

    /// <summary>Field number for the "playerId" field.</summary>
    public const int PlayerIdFieldNumber = 1;
    private readonly static int PlayerIdDefaultValue = 0;

    private int playerId_;
    /// <summary>
    ///发送消息的主持人id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int PlayerId {
      get { if ((_hasBits0 & 1) != 0) { return playerId_; } else { return PlayerIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        playerId_ = value;
      }
    }
    /// <summary>Gets whether the "playerId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPlayerId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "playerId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPlayerId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "gameType" field.</summary>
    public const int GameTypeFieldNumber = 2;
    private readonly static int GameTypeDefaultValue = 0;

    private int gameType_;
    /// <summary>
    ///游戏类型
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int GameType {
      get { if ((_hasBits0 & 2) != 0) { return gameType_; } else { return GameTypeDefaultValue; } }
      set {
        _hasBits0 |= 2;
        gameType_ = value;
      }
    }
    /// <summary>Gets whether the "gameType" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGameType {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "gameType" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGameType() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "gameTheme" field.</summary>
    public const int GameThemeFieldNumber = 3;
    private readonly static int GameThemeDefaultValue = 0;

    private int gameTheme_;
    /// <summary>
    ///游戏主题
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int GameTheme {
      get { if ((_hasBits0 & 4) != 0) { return gameTheme_; } else { return GameThemeDefaultValue; } }
      set {
        _hasBits0 |= 4;
        gameTheme_ = value;
      }
    }
    /// <summary>Gets whether the "gameTheme" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGameTheme {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "gameTheme" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGameTheme() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "sceneLoad" field.</summary>
    public const int SceneLoadFieldNumber = 4;
    private readonly static bool SceneLoadDefaultValue = false;

    private bool sceneLoad_;
    /// <summary>
    ///游戏场景是否已经加载
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool SceneLoad {
      get { if ((_hasBits0 & 8) != 0) { return sceneLoad_; } else { return SceneLoadDefaultValue; } }
      set {
        _hasBits0 |= 8;
        sceneLoad_ = value;
      }
    }
    /// <summary>Gets whether the "sceneLoad" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSceneLoad {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "sceneLoad" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSceneLoad() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "gameIndex" field.</summary>
    public const int GameIndexFieldNumber = 5;
    private readonly static int GameIndexDefaultValue = 0;

    private int gameIndex_;
    /// <summary>
    ///游玩游戏次数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int GameIndex {
      get { if ((_hasBits0 & 16) != 0) { return gameIndex_; } else { return GameIndexDefaultValue; } }
      set {
        _hasBits0 |= 16;
        gameIndex_ = value;
      }
    }
    /// <summary>Gets whether the "gameIndex" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGameIndex {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "gameIndex" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGameIndex() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "curGameIndex" field.</summary>
    public const int CurGameIndexFieldNumber = 6;
    private readonly static int CurGameIndexDefaultValue = 0;

    private int curGameIndex_;
    /// <summary>
    ///游戏类型编号
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CurGameIndex {
      get { if ((_hasBits0 & 32) != 0) { return curGameIndex_; } else { return CurGameIndexDefaultValue; } }
      set {
        _hasBits0 |= 32;
        curGameIndex_ = value;
      }
    }
    /// <summary>Gets whether the "curGameIndex" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCurGameIndex {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "curGameIndex" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCurGameIndex() {
      _hasBits0 &= ~32;
    }

    /// <summary>Field number for the "playerPosList" field.</summary>
    public const int PlayerPosListFieldNumber = 7;
    private global::HardCordGirlData.GuLu_Player_SpawnPosIndex playerPosList_;
    /// <summary>
    ///玩家生成位置列表
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::HardCordGirlData.GuLu_Player_SpawnPosIndex PlayerPosList {
      get { return playerPosList_; }
      set {
        playerPosList_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GuLu_MiniGameStart_Info);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GuLu_MiniGameStart_Info other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlayerId != other.PlayerId) return false;
      if (GameType != other.GameType) return false;
      if (GameTheme != other.GameTheme) return false;
      if (SceneLoad != other.SceneLoad) return false;
      if (GameIndex != other.GameIndex) return false;
      if (CurGameIndex != other.CurGameIndex) return false;
      if (!object.Equals(PlayerPosList, other.PlayerPosList)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasPlayerId) hash ^= PlayerId.GetHashCode();
      if (HasGameType) hash ^= GameType.GetHashCode();
      if (HasGameTheme) hash ^= GameTheme.GetHashCode();
      if (HasSceneLoad) hash ^= SceneLoad.GetHashCode();
      if (HasGameIndex) hash ^= GameIndex.GetHashCode();
      if (HasCurGameIndex) hash ^= CurGameIndex.GetHashCode();
      if (playerPosList_ != null) hash ^= PlayerPosList.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasPlayerId) {
        output.WriteRawTag(8);
        output.WriteInt32(PlayerId);
      }
      if (HasGameType) {
        output.WriteRawTag(16);
        output.WriteInt32(GameType);
      }
      if (HasGameTheme) {
        output.WriteRawTag(24);
        output.WriteInt32(GameTheme);
      }
      if (HasSceneLoad) {
        output.WriteRawTag(32);
        output.WriteBool(SceneLoad);
      }
      if (HasGameIndex) {
        output.WriteRawTag(40);
        output.WriteInt32(GameIndex);
      }
      if (HasCurGameIndex) {
        output.WriteRawTag(48);
        output.WriteInt32(CurGameIndex);
      }
      if (playerPosList_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(PlayerPosList);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasPlayerId) {
        output.WriteRawTag(8);
        output.WriteInt32(PlayerId);
      }
      if (HasGameType) {
        output.WriteRawTag(16);
        output.WriteInt32(GameType);
      }
      if (HasGameTheme) {
        output.WriteRawTag(24);
        output.WriteInt32(GameTheme);
      }
      if (HasSceneLoad) {
        output.WriteRawTag(32);
        output.WriteBool(SceneLoad);
      }
      if (HasGameIndex) {
        output.WriteRawTag(40);
        output.WriteInt32(GameIndex);
      }
      if (HasCurGameIndex) {
        output.WriteRawTag(48);
        output.WriteInt32(CurGameIndex);
      }
      if (playerPosList_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(PlayerPosList);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasPlayerId) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PlayerId);
      }
      if (HasGameType) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(GameType);
      }
      if (HasGameTheme) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(GameTheme);
      }
      if (HasSceneLoad) {
        size += 1 + 1;
      }
      if (HasGameIndex) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(GameIndex);
      }
      if (HasCurGameIndex) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CurGameIndex);
      }
      if (playerPosList_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PlayerPosList);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GuLu_MiniGameStart_Info other) {
      if (other == null) {
        return;
      }
      if (other.HasPlayerId) {
        PlayerId = other.PlayerId;
      }
      if (other.HasGameType) {
        GameType = other.GameType;
      }
      if (other.HasGameTheme) {
        GameTheme = other.GameTheme;
      }
      if (other.HasSceneLoad) {
        SceneLoad = other.SceneLoad;
      }
      if (other.HasGameIndex) {
        GameIndex = other.GameIndex;
      }
      if (other.HasCurGameIndex) {
        CurGameIndex = other.CurGameIndex;
      }
      if (other.playerPosList_ != null) {
        if (playerPosList_ == null) {
          PlayerPosList = new global::HardCordGirlData.GuLu_Player_SpawnPosIndex();
        }
        PlayerPosList.MergeFrom(other.PlayerPosList);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PlayerId = input.ReadInt32();
            break;
          }
          case 16: {
            GameType = input.ReadInt32();
            break;
          }
          case 24: {
            GameTheme = input.ReadInt32();
            break;
          }
          case 32: {
            SceneLoad = input.ReadBool();
            break;
          }
          case 40: {
            GameIndex = input.ReadInt32();
            break;
          }
          case 48: {
            CurGameIndex = input.ReadInt32();
            break;
          }
          case 58: {
            if (playerPosList_ == null) {
              PlayerPosList = new global::HardCordGirlData.GuLu_Player_SpawnPosIndex();
            }
            input.ReadMessage(PlayerPosList);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            PlayerId = input.ReadInt32();
            break;
          }
          case 16: {
            GameType = input.ReadInt32();
            break;
          }
          case 24: {
            GameTheme = input.ReadInt32();
            break;
          }
          case 32: {
            SceneLoad = input.ReadBool();
            break;
          }
          case 40: {
            GameIndex = input.ReadInt32();
            break;
          }
          case 48: {
            CurGameIndex = input.ReadInt32();
            break;
          }
          case 58: {
            if (playerPosList_ == null) {
              PlayerPosList = new global::HardCordGirlData.GuLu_Player_SpawnPosIndex();
            }
            input.ReadMessage(PlayerPosList);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class GuLu_MiniGameEnd_Info : pb::IMessage<GuLu_MiniGameEnd_Info>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GuLu_MiniGameEnd_Info> _parser = new pb::MessageParser<GuLu_MiniGameEnd_Info>(() => new GuLu_MiniGameEnd_Info());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GuLu_MiniGameEnd_Info> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HardCordGirlData.HardCordGirlDataClassReflection.Descriptor.MessageTypes[26]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GuLu_MiniGameEnd_Info() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GuLu_MiniGameEnd_Info(GuLu_MiniGameEnd_Info other) : this() {
      _hasBits0 = other._hasBits0;
      playerId_ = other.playerId_;
      endRound_ = other.endRound_;
      needBack_ = other.needBack_;
      winTeam_ = other.winTeam_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GuLu_MiniGameEnd_Info Clone() {
      return new GuLu_MiniGameEnd_Info(this);
    }

    /// <summary>Field number for the "playerId" field.</summary>
    public const int PlayerIdFieldNumber = 1;
    private readonly static int PlayerIdDefaultValue = 0;

    private int playerId_;
    /// <summary>
    ///发送消息的玩家id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int PlayerId {
      get { if ((_hasBits0 & 1) != 0) { return playerId_; } else { return PlayerIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        playerId_ = value;
      }
    }
    /// <summary>Gets whether the "playerId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPlayerId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "playerId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPlayerId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "endRound" field.</summary>
    public const int EndRoundFieldNumber = 2;
    private readonly static int EndRoundDefaultValue = 0;

    private int endRound_;
    /// <summary>
    ///结束游戏轮次
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int EndRound {
      get { if ((_hasBits0 & 2) != 0) { return endRound_; } else { return EndRoundDefaultValue; } }
      set {
        _hasBits0 |= 2;
        endRound_ = value;
      }
    }
    /// <summary>Gets whether the "endRound" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasEndRound {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "endRound" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearEndRound() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "needBack" field.</summary>
    public const int NeedBackFieldNumber = 3;
    private readonly static bool NeedBackDefaultValue = false;

    private bool needBack_;
    /// <summary>
    ///是否需要返回街道
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool NeedBack {
      get { if ((_hasBits0 & 4) != 0) { return needBack_; } else { return NeedBackDefaultValue; } }
      set {
        _hasBits0 |= 4;
        needBack_ = value;
      }
    }
    /// <summary>Gets whether the "needBack" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasNeedBack {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "needBack" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearNeedBack() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "winTeam" field.</summary>
    public const int WinTeamFieldNumber = 4;
    private readonly static int WinTeamDefaultValue = 0;

    private int winTeam_;
    /// <summary>
    ///获胜队伍
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int WinTeam {
      get { if ((_hasBits0 & 8) != 0) { return winTeam_; } else { return WinTeamDefaultValue; } }
      set {
        _hasBits0 |= 8;
        winTeam_ = value;
      }
    }
    /// <summary>Gets whether the "winTeam" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasWinTeam {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "winTeam" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearWinTeam() {
      _hasBits0 &= ~8;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GuLu_MiniGameEnd_Info);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GuLu_MiniGameEnd_Info other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlayerId != other.PlayerId) return false;
      if (EndRound != other.EndRound) return false;
      if (NeedBack != other.NeedBack) return false;
      if (WinTeam != other.WinTeam) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasPlayerId) hash ^= PlayerId.GetHashCode();
      if (HasEndRound) hash ^= EndRound.GetHashCode();
      if (HasNeedBack) hash ^= NeedBack.GetHashCode();
      if (HasWinTeam) hash ^= WinTeam.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasPlayerId) {
        output.WriteRawTag(8);
        output.WriteInt32(PlayerId);
      }
      if (HasEndRound) {
        output.WriteRawTag(16);
        output.WriteInt32(EndRound);
      }
      if (HasNeedBack) {
        output.WriteRawTag(24);
        output.WriteBool(NeedBack);
      }
      if (HasWinTeam) {
        output.WriteRawTag(32);
        output.WriteInt32(WinTeam);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasPlayerId) {
        output.WriteRawTag(8);
        output.WriteInt32(PlayerId);
      }
      if (HasEndRound) {
        output.WriteRawTag(16);
        output.WriteInt32(EndRound);
      }
      if (HasNeedBack) {
        output.WriteRawTag(24);
        output.WriteBool(NeedBack);
      }
      if (HasWinTeam) {
        output.WriteRawTag(32);
        output.WriteInt32(WinTeam);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasPlayerId) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PlayerId);
      }
      if (HasEndRound) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(EndRound);
      }
      if (HasNeedBack) {
        size += 1 + 1;
      }
      if (HasWinTeam) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(WinTeam);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GuLu_MiniGameEnd_Info other) {
      if (other == null) {
        return;
      }
      if (other.HasPlayerId) {
        PlayerId = other.PlayerId;
      }
      if (other.HasEndRound) {
        EndRound = other.EndRound;
      }
      if (other.HasNeedBack) {
        NeedBack = other.NeedBack;
      }
      if (other.HasWinTeam) {
        WinTeam = other.WinTeam;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PlayerId = input.ReadInt32();
            break;
          }
          case 16: {
            EndRound = input.ReadInt32();
            break;
          }
          case 24: {
            NeedBack = input.ReadBool();
            break;
          }
          case 32: {
            WinTeam = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            PlayerId = input.ReadInt32();
            break;
          }
          case 16: {
            EndRound = input.ReadInt32();
            break;
          }
          case 24: {
            NeedBack = input.ReadBool();
            break;
          }
          case 32: {
            WinTeam = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class GuLu_Bomb_Info : pb::IMessage<GuLu_Bomb_Info>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GuLu_Bomb_Info> _parser = new pb::MessageParser<GuLu_Bomb_Info>(() => new GuLu_Bomb_Info());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GuLu_Bomb_Info> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HardCordGirlData.HardCordGirlDataClassReflection.Descriptor.MessageTypes[27]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GuLu_Bomb_Info() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GuLu_Bomb_Info(GuLu_Bomb_Info other) : this() {
      _hasBits0 = other._hasBits0;
      bombType_ = other.bombType_;
      bombSapwnTime_ = other.bombSapwnTime_;
      bombSapwnPos_ = other.bombSapwnPos_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GuLu_Bomb_Info Clone() {
      return new GuLu_Bomb_Info(this);
    }

    /// <summary>Field number for the "bombType" field.</summary>
    public const int BombTypeFieldNumber = 1;
    private readonly static int BombTypeDefaultValue = 0;

    private int bombType_;
    /// <summary>
    ///炸弹种类
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int BombType {
      get { if ((_hasBits0 & 1) != 0) { return bombType_; } else { return BombTypeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        bombType_ = value;
      }
    }
    /// <summary>Gets whether the "bombType" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBombType {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "bombType" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBombType() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "bombSapwnTime" field.</summary>
    public const int BombSapwnTimeFieldNumber = 2;
    private readonly static float BombSapwnTimeDefaultValue = 0F;

    private float bombSapwnTime_;
    /// <summary>
    ///炸弹生成时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float BombSapwnTime {
      get { if ((_hasBits0 & 2) != 0) { return bombSapwnTime_; } else { return BombSapwnTimeDefaultValue; } }
      set {
        _hasBits0 |= 2;
        bombSapwnTime_ = value;
      }
    }
    /// <summary>Gets whether the "bombSapwnTime" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBombSapwnTime {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "bombSapwnTime" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBombSapwnTime() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "bombSapwnPos" field.</summary>
    public const int BombSapwnPosFieldNumber = 3;
    private readonly static int BombSapwnPosDefaultValue = 0;

    private int bombSapwnPos_;
    /// <summary>
    ///炸弹生成位置
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int BombSapwnPos {
      get { if ((_hasBits0 & 4) != 0) { return bombSapwnPos_; } else { return BombSapwnPosDefaultValue; } }
      set {
        _hasBits0 |= 4;
        bombSapwnPos_ = value;
      }
    }
    /// <summary>Gets whether the "bombSapwnPos" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBombSapwnPos {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "bombSapwnPos" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBombSapwnPos() {
      _hasBits0 &= ~4;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GuLu_Bomb_Info);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GuLu_Bomb_Info other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BombType != other.BombType) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(BombSapwnTime, other.BombSapwnTime)) return false;
      if (BombSapwnPos != other.BombSapwnPos) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasBombType) hash ^= BombType.GetHashCode();
      if (HasBombSapwnTime) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(BombSapwnTime);
      if (HasBombSapwnPos) hash ^= BombSapwnPos.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasBombType) {
        output.WriteRawTag(8);
        output.WriteInt32(BombType);
      }
      if (HasBombSapwnTime) {
        output.WriteRawTag(21);
        output.WriteFloat(BombSapwnTime);
      }
      if (HasBombSapwnPos) {
        output.WriteRawTag(24);
        output.WriteInt32(BombSapwnPos);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasBombType) {
        output.WriteRawTag(8);
        output.WriteInt32(BombType);
      }
      if (HasBombSapwnTime) {
        output.WriteRawTag(21);
        output.WriteFloat(BombSapwnTime);
      }
      if (HasBombSapwnPos) {
        output.WriteRawTag(24);
        output.WriteInt32(BombSapwnPos);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasBombType) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BombType);
      }
      if (HasBombSapwnTime) {
        size += 1 + 4;
      }
      if (HasBombSapwnPos) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BombSapwnPos);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GuLu_Bomb_Info other) {
      if (other == null) {
        return;
      }
      if (other.HasBombType) {
        BombType = other.BombType;
      }
      if (other.HasBombSapwnTime) {
        BombSapwnTime = other.BombSapwnTime;
      }
      if (other.HasBombSapwnPos) {
        BombSapwnPos = other.BombSapwnPos;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BombType = input.ReadInt32();
            break;
          }
          case 21: {
            BombSapwnTime = input.ReadFloat();
            break;
          }
          case 24: {
            BombSapwnPos = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            BombType = input.ReadInt32();
            break;
          }
          case 21: {
            BombSapwnTime = input.ReadFloat();
            break;
          }
          case 24: {
            BombSapwnPos = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class GuLu_BombSpawn_Info : pb::IMessage<GuLu_BombSpawn_Info>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GuLu_BombSpawn_Info> _parser = new pb::MessageParser<GuLu_BombSpawn_Info>(() => new GuLu_BombSpawn_Info());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GuLu_BombSpawn_Info> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HardCordGirlData.HardCordGirlDataClassReflection.Descriptor.MessageTypes[28]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GuLu_BombSpawn_Info() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GuLu_BombSpawn_Info(GuLu_BombSpawn_Info other) : this() {
      _hasBits0 = other._hasBits0;
      round_ = other.round_;
      bombs_ = other.bombs_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GuLu_BombSpawn_Info Clone() {
      return new GuLu_BombSpawn_Info(this);
    }

    /// <summary>Field number for the "round" field.</summary>
    public const int RoundFieldNumber = 1;
    private readonly static int RoundDefaultValue = 0;

    private int round_;
    /// <summary>
    ///轮次数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Round {
      get { if ((_hasBits0 & 1) != 0) { return round_; } else { return RoundDefaultValue; } }
      set {
        _hasBits0 |= 1;
        round_ = value;
      }
    }
    /// <summary>Gets whether the "round" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRound {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "round" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRound() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "bombs" field.</summary>
    public const int BombsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::HardCordGirlData.GuLu_Bomb_Info> _repeated_bombs_codec
        = pb::FieldCodec.ForMessage(18, global::HardCordGirlData.GuLu_Bomb_Info.Parser);
    private readonly pbc::RepeatedField<global::HardCordGirlData.GuLu_Bomb_Info> bombs_ = new pbc::RepeatedField<global::HardCordGirlData.GuLu_Bomb_Info>();
    /// <summary>
    ///炸弹生成属性
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::HardCordGirlData.GuLu_Bomb_Info> Bombs {
      get { return bombs_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GuLu_BombSpawn_Info);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GuLu_BombSpawn_Info other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Round != other.Round) return false;
      if(!bombs_.Equals(other.bombs_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasRound) hash ^= Round.GetHashCode();
      hash ^= bombs_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasRound) {
        output.WriteRawTag(8);
        output.WriteInt32(Round);
      }
      bombs_.WriteTo(output, _repeated_bombs_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasRound) {
        output.WriteRawTag(8);
        output.WriteInt32(Round);
      }
      bombs_.WriteTo(ref output, _repeated_bombs_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasRound) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Round);
      }
      size += bombs_.CalculateSize(_repeated_bombs_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GuLu_BombSpawn_Info other) {
      if (other == null) {
        return;
      }
      if (other.HasRound) {
        Round = other.Round;
      }
      bombs_.Add(other.bombs_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Round = input.ReadInt32();
            break;
          }
          case 18: {
            bombs_.AddEntriesFrom(input, _repeated_bombs_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Round = input.ReadInt32();
            break;
          }
          case 18: {
            bombs_.AddEntriesFrom(ref input, _repeated_bombs_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class GuLu_BumperCar_HitPlayer_Info : pb::IMessage<GuLu_BumperCar_HitPlayer_Info>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GuLu_BumperCar_HitPlayer_Info> _parser = new pb::MessageParser<GuLu_BumperCar_HitPlayer_Info>(() => new GuLu_BumperCar_HitPlayer_Info());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GuLu_BumperCar_HitPlayer_Info> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HardCordGirlData.HardCordGirlDataClassReflection.Descriptor.MessageTypes[29]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GuLu_BumperCar_HitPlayer_Info() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GuLu_BumperCar_HitPlayer_Info(GuLu_BumperCar_HitPlayer_Info other) : this() {
      _hasBits0 = other._hasBits0;
      id_ = other.id_;
      pos_ = other.pos_ != null ? other.pos_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GuLu_BumperCar_HitPlayer_Info Clone() {
      return new GuLu_BumperCar_HitPlayer_Info(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private readonly static int IdDefaultValue = 0;

    private int id_;
    /// <summary>
    ///碰撞到的玩家id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Id {
      get { if ((_hasBits0 & 1) != 0) { return id_; } else { return IdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        id_ = value;
      }
    }
    /// <summary>Gets whether the "id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "pos" field.</summary>
    public const int PosFieldNumber = 2;
    private global::HardCordGirlData.VECTOR3 pos_;
    /// <summary>
    ///玩家位置
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::HardCordGirlData.VECTOR3 Pos {
      get { return pos_; }
      set {
        pos_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GuLu_BumperCar_HitPlayer_Info);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GuLu_BumperCar_HitPlayer_Info other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (!object.Equals(Pos, other.Pos)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasId) hash ^= Id.GetHashCode();
      if (pos_ != null) hash ^= Pos.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasId) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (pos_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Pos);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasId) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (pos_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Pos);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasId) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (pos_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Pos);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GuLu_BumperCar_HitPlayer_Info other) {
      if (other == null) {
        return;
      }
      if (other.HasId) {
        Id = other.Id;
      }
      if (other.pos_ != null) {
        if (pos_ == null) {
          Pos = new global::HardCordGirlData.VECTOR3();
        }
        Pos.MergeFrom(other.Pos);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            if (pos_ == null) {
              Pos = new global::HardCordGirlData.VECTOR3();
            }
            input.ReadMessage(Pos);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            if (pos_ == null) {
              Pos = new global::HardCordGirlData.VECTOR3();
            }
            input.ReadMessage(Pos);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class GuLu_BumperCar_ShakingArea_Info : pb::IMessage<GuLu_BumperCar_ShakingArea_Info>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GuLu_BumperCar_ShakingArea_Info> _parser = new pb::MessageParser<GuLu_BumperCar_ShakingArea_Info>(() => new GuLu_BumperCar_ShakingArea_Info());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GuLu_BumperCar_ShakingArea_Info> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HardCordGirlData.HardCordGirlDataClassReflection.Descriptor.MessageTypes[30]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GuLu_BumperCar_ShakingArea_Info() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GuLu_BumperCar_ShakingArea_Info(GuLu_BumperCar_ShakingArea_Info other) : this() {
      _hasBits0 = other._hasBits0;
      round_ = other.round_;
      shakingTime_ = other.shakingTime_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GuLu_BumperCar_ShakingArea_Info Clone() {
      return new GuLu_BumperCar_ShakingArea_Info(this);
    }

    /// <summary>Field number for the "round" field.</summary>
    public const int RoundFieldNumber = 1;
    private readonly static int RoundDefaultValue = 0;

    private int round_;
    /// <summary>
    ///轮次数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Round {
      get { if ((_hasBits0 & 1) != 0) { return round_; } else { return RoundDefaultValue; } }
      set {
        _hasBits0 |= 1;
        round_ = value;
      }
    }
    /// <summary>Gets whether the "round" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRound {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "round" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRound() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "shakingTime" field.</summary>
    public const int ShakingTimeFieldNumber = 2;
    private readonly static int ShakingTimeDefaultValue = 0;

    private int shakingTime_;
    /// <summary>
    ///区域震动时间	
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ShakingTime {
      get { if ((_hasBits0 & 2) != 0) { return shakingTime_; } else { return ShakingTimeDefaultValue; } }
      set {
        _hasBits0 |= 2;
        shakingTime_ = value;
      }
    }
    /// <summary>Gets whether the "shakingTime" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasShakingTime {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "shakingTime" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearShakingTime() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GuLu_BumperCar_ShakingArea_Info);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GuLu_BumperCar_ShakingArea_Info other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Round != other.Round) return false;
      if (ShakingTime != other.ShakingTime) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasRound) hash ^= Round.GetHashCode();
      if (HasShakingTime) hash ^= ShakingTime.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasRound) {
        output.WriteRawTag(8);
        output.WriteInt32(Round);
      }
      if (HasShakingTime) {
        output.WriteRawTag(16);
        output.WriteInt32(ShakingTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasRound) {
        output.WriteRawTag(8);
        output.WriteInt32(Round);
      }
      if (HasShakingTime) {
        output.WriteRawTag(16);
        output.WriteInt32(ShakingTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasRound) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Round);
      }
      if (HasShakingTime) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ShakingTime);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GuLu_BumperCar_ShakingArea_Info other) {
      if (other == null) {
        return;
      }
      if (other.HasRound) {
        Round = other.Round;
      }
      if (other.HasShakingTime) {
        ShakingTime = other.ShakingTime;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Round = input.ReadInt32();
            break;
          }
          case 16: {
            ShakingTime = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Round = input.ReadInt32();
            break;
          }
          case 16: {
            ShakingTime = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class GuLu_BumperCar_PlayEngineSound_Info : pb::IMessage<GuLu_BumperCar_PlayEngineSound_Info>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GuLu_BumperCar_PlayEngineSound_Info> _parser = new pb::MessageParser<GuLu_BumperCar_PlayEngineSound_Info>(() => new GuLu_BumperCar_PlayEngineSound_Info());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GuLu_BumperCar_PlayEngineSound_Info> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HardCordGirlData.HardCordGirlDataClassReflection.Descriptor.MessageTypes[31]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GuLu_BumperCar_PlayEngineSound_Info() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GuLu_BumperCar_PlayEngineSound_Info(GuLu_BumperCar_PlayEngineSound_Info other) : this() {
      _hasBits0 = other._hasBits0;
      id_ = other.id_;
      pitchValue_ = other.pitchValue_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GuLu_BumperCar_PlayEngineSound_Info Clone() {
      return new GuLu_BumperCar_PlayEngineSound_Info(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private readonly static int IdDefaultValue = 0;

    private int id_;
    /// <summary>
    ///碰撞到的玩家id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Id {
      get { if ((_hasBits0 & 1) != 0) { return id_; } else { return IdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        id_ = value;
      }
    }
    /// <summary>Gets whether the "id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "pitchValue" field.</summary>
    public const int PitchValueFieldNumber = 2;
    private readonly static float PitchValueDefaultValue = 0F;

    private float pitchValue_;
    /// <summary>
    ///播放声音频率
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float PitchValue {
      get { if ((_hasBits0 & 2) != 0) { return pitchValue_; } else { return PitchValueDefaultValue; } }
      set {
        _hasBits0 |= 2;
        pitchValue_ = value;
      }
    }
    /// <summary>Gets whether the "pitchValue" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPitchValue {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "pitchValue" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPitchValue() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GuLu_BumperCar_PlayEngineSound_Info);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GuLu_BumperCar_PlayEngineSound_Info other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(PitchValue, other.PitchValue)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasId) hash ^= Id.GetHashCode();
      if (HasPitchValue) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(PitchValue);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasId) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (HasPitchValue) {
        output.WriteRawTag(21);
        output.WriteFloat(PitchValue);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasId) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (HasPitchValue) {
        output.WriteRawTag(21);
        output.WriteFloat(PitchValue);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasId) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (HasPitchValue) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GuLu_BumperCar_PlayEngineSound_Info other) {
      if (other == null) {
        return;
      }
      if (other.HasId) {
        Id = other.Id;
      }
      if (other.HasPitchValue) {
        PitchValue = other.PitchValue;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 21: {
            PitchValue = input.ReadFloat();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 21: {
            PitchValue = input.ReadFloat();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class GuLu_BNB_PlayerSpawnBomb_Info : pb::IMessage<GuLu_BNB_PlayerSpawnBomb_Info>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GuLu_BNB_PlayerSpawnBomb_Info> _parser = new pb::MessageParser<GuLu_BNB_PlayerSpawnBomb_Info>(() => new GuLu_BNB_PlayerSpawnBomb_Info());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GuLu_BNB_PlayerSpawnBomb_Info> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HardCordGirlData.HardCordGirlDataClassReflection.Descriptor.MessageTypes[32]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GuLu_BNB_PlayerSpawnBomb_Info() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GuLu_BNB_PlayerSpawnBomb_Info(GuLu_BNB_PlayerSpawnBomb_Info other) : this() {
      _hasBits0 = other._hasBits0;
      x_ = other.x_;
      z_ = other.z_;
      bombLength_ = other.bombLength_;
      playerId_ = other.playerId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GuLu_BNB_PlayerSpawnBomb_Info Clone() {
      return new GuLu_BNB_PlayerSpawnBomb_Info(this);
    }

    /// <summary>Field number for the "x" field.</summary>
    public const int XFieldNumber = 1;
    private readonly static int XDefaultValue = 0;

    private int x_;
    /// <summary>
    ///生成位置X
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int X {
      get { if ((_hasBits0 & 1) != 0) { return x_; } else { return XDefaultValue; } }
      set {
        _hasBits0 |= 1;
        x_ = value;
      }
    }
    /// <summary>Gets whether the "x" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasX {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "x" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearX() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "z" field.</summary>
    public const int ZFieldNumber = 2;
    private readonly static int ZDefaultValue = 0;

    private int z_;
    /// <summary>
    ///生成位置Z
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Z {
      get { if ((_hasBits0 & 2) != 0) { return z_; } else { return ZDefaultValue; } }
      set {
        _hasBits0 |= 2;
        z_ = value;
      }
    }
    /// <summary>Gets whether the "z" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasZ {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "z" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearZ() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "bombLength" field.</summary>
    public const int BombLengthFieldNumber = 3;
    private readonly static int BombLengthDefaultValue = 0;

    private int bombLength_;
    /// <summary>
    ///炸弹范围
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int BombLength {
      get { if ((_hasBits0 & 4) != 0) { return bombLength_; } else { return BombLengthDefaultValue; } }
      set {
        _hasBits0 |= 4;
        bombLength_ = value;
      }
    }
    /// <summary>Gets whether the "bombLength" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBombLength {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "bombLength" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBombLength() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "playerId" field.</summary>
    public const int PlayerIdFieldNumber = 4;
    private readonly static uint PlayerIdDefaultValue = 0;

    private uint playerId_;
    /// <summary>
    ///生成的玩家ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint PlayerId {
      get { if ((_hasBits0 & 8) != 0) { return playerId_; } else { return PlayerIdDefaultValue; } }
      set {
        _hasBits0 |= 8;
        playerId_ = value;
      }
    }
    /// <summary>Gets whether the "playerId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPlayerId {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "playerId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPlayerId() {
      _hasBits0 &= ~8;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GuLu_BNB_PlayerSpawnBomb_Info);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GuLu_BNB_PlayerSpawnBomb_Info other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (X != other.X) return false;
      if (Z != other.Z) return false;
      if (BombLength != other.BombLength) return false;
      if (PlayerId != other.PlayerId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasX) hash ^= X.GetHashCode();
      if (HasZ) hash ^= Z.GetHashCode();
      if (HasBombLength) hash ^= BombLength.GetHashCode();
      if (HasPlayerId) hash ^= PlayerId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasX) {
        output.WriteRawTag(8);
        output.WriteInt32(X);
      }
      if (HasZ) {
        output.WriteRawTag(16);
        output.WriteInt32(Z);
      }
      if (HasBombLength) {
        output.WriteRawTag(24);
        output.WriteInt32(BombLength);
      }
      if (HasPlayerId) {
        output.WriteRawTag(32);
        output.WriteUInt32(PlayerId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasX) {
        output.WriteRawTag(8);
        output.WriteInt32(X);
      }
      if (HasZ) {
        output.WriteRawTag(16);
        output.WriteInt32(Z);
      }
      if (HasBombLength) {
        output.WriteRawTag(24);
        output.WriteInt32(BombLength);
      }
      if (HasPlayerId) {
        output.WriteRawTag(32);
        output.WriteUInt32(PlayerId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasX) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(X);
      }
      if (HasZ) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Z);
      }
      if (HasBombLength) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BombLength);
      }
      if (HasPlayerId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PlayerId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GuLu_BNB_PlayerSpawnBomb_Info other) {
      if (other == null) {
        return;
      }
      if (other.HasX) {
        X = other.X;
      }
      if (other.HasZ) {
        Z = other.Z;
      }
      if (other.HasBombLength) {
        BombLength = other.BombLength;
      }
      if (other.HasPlayerId) {
        PlayerId = other.PlayerId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            X = input.ReadInt32();
            break;
          }
          case 16: {
            Z = input.ReadInt32();
            break;
          }
          case 24: {
            BombLength = input.ReadInt32();
            break;
          }
          case 32: {
            PlayerId = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            X = input.ReadInt32();
            break;
          }
          case 16: {
            Z = input.ReadInt32();
            break;
          }
          case 24: {
            BombLength = input.ReadInt32();
            break;
          }
          case 32: {
            PlayerId = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class GuLu_SnowBall_Hit : pb::IMessage<GuLu_SnowBall_Hit>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GuLu_SnowBall_Hit> _parser = new pb::MessageParser<GuLu_SnowBall_Hit>(() => new GuLu_SnowBall_Hit());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GuLu_SnowBall_Hit> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HardCordGirlData.HardCordGirlDataClassReflection.Descriptor.MessageTypes[33]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GuLu_SnowBall_Hit() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GuLu_SnowBall_Hit(GuLu_SnowBall_Hit other) : this() {
      _hasBits0 = other._hasBits0;
      playerId_ = other.playerId_;
      type_ = other.type_;
      hitPos_ = other.hitPos_ != null ? other.hitPos_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GuLu_SnowBall_Hit Clone() {
      return new GuLu_SnowBall_Hit(this);
    }

    /// <summary>Field number for the "playerId" field.</summary>
    public const int PlayerIdFieldNumber = 1;
    private readonly static int PlayerIdDefaultValue = 0;

    private int playerId_;
    /// <summary>
    ///被击中玩家ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int PlayerId {
      get { if ((_hasBits0 & 1) != 0) { return playerId_; } else { return PlayerIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        playerId_ = value;
      }
    }
    /// <summary>Gets whether the "playerId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPlayerId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "playerId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPlayerId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 2;
    private readonly static int TypeDefaultValue = 0;

    private int type_;
    /// <summary>
    ///击中道具类型
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Type {
      get { if ((_hasBits0 & 2) != 0) { return type_; } else { return TypeDefaultValue; } }
      set {
        _hasBits0 |= 2;
        type_ = value;
      }
    }
    /// <summary>Gets whether the "type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasType {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearType() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "HitPos" field.</summary>
    public const int HitPosFieldNumber = 3;
    private global::HardCordGirlData.VECTOR3 hitPos_;
    /// <summary>
    ///击中位置
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::HardCordGirlData.VECTOR3 HitPos {
      get { return hitPos_; }
      set {
        hitPos_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GuLu_SnowBall_Hit);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GuLu_SnowBall_Hit other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlayerId != other.PlayerId) return false;
      if (Type != other.Type) return false;
      if (!object.Equals(HitPos, other.HitPos)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasPlayerId) hash ^= PlayerId.GetHashCode();
      if (HasType) hash ^= Type.GetHashCode();
      if (hitPos_ != null) hash ^= HitPos.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasPlayerId) {
        output.WriteRawTag(8);
        output.WriteInt32(PlayerId);
      }
      if (HasType) {
        output.WriteRawTag(16);
        output.WriteInt32(Type);
      }
      if (hitPos_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(HitPos);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasPlayerId) {
        output.WriteRawTag(8);
        output.WriteInt32(PlayerId);
      }
      if (HasType) {
        output.WriteRawTag(16);
        output.WriteInt32(Type);
      }
      if (hitPos_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(HitPos);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasPlayerId) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PlayerId);
      }
      if (HasType) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
      }
      if (hitPos_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(HitPos);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GuLu_SnowBall_Hit other) {
      if (other == null) {
        return;
      }
      if (other.HasPlayerId) {
        PlayerId = other.PlayerId;
      }
      if (other.HasType) {
        Type = other.Type;
      }
      if (other.hitPos_ != null) {
        if (hitPos_ == null) {
          HitPos = new global::HardCordGirlData.VECTOR3();
        }
        HitPos.MergeFrom(other.HitPos);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PlayerId = input.ReadInt32();
            break;
          }
          case 16: {
            Type = input.ReadInt32();
            break;
          }
          case 26: {
            if (hitPos_ == null) {
              HitPos = new global::HardCordGirlData.VECTOR3();
            }
            input.ReadMessage(HitPos);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            PlayerId = input.ReadInt32();
            break;
          }
          case 16: {
            Type = input.ReadInt32();
            break;
          }
          case 26: {
            if (hitPos_ == null) {
              HitPos = new global::HardCordGirlData.VECTOR3();
            }
            input.ReadMessage(HitPos);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Data_ID_Data : pb::IMessage<Data_ID_Data>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Data_ID_Data> _parser = new pb::MessageParser<Data_ID_Data>(() => new Data_ID_Data());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Data_ID_Data> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HardCordGirlData.HardCordGirlDataClassReflection.Descriptor.MessageTypes[34]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Data_ID_Data() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Data_ID_Data(Data_ID_Data other) : this() {
      _hasBits0 = other._hasBits0;
      id_ = other.id_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Data_ID_Data Clone() {
      return new Data_ID_Data(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private readonly static uint IdDefaultValue = 0;

    private uint id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Id {
      get { if ((_hasBits0 & 1) != 0) { return id_; } else { return IdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        id_ = value;
      }
    }
    /// <summary>Gets whether the "id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearId() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Data_ID_Data);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Data_ID_Data other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasId) hash ^= Id.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasId) {
        output.WriteRawTag(8);
        output.WriteUInt32(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasId) {
        output.WriteRawTag(8);
        output.WriteUInt32(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Id);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Data_ID_Data other) {
      if (other == null) {
        return;
      }
      if (other.HasId) {
        Id = other.Id;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///玩家受击信息
  /// </summary>
  public sealed partial class PlayerOnHit_Info : pb::IMessage<PlayerOnHit_Info>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PlayerOnHit_Info> _parser = new pb::MessageParser<PlayerOnHit_Info>(() => new PlayerOnHit_Info());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PlayerOnHit_Info> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HardCordGirlData.HardCordGirlDataClassReflection.Descriptor.MessageTypes[35]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PlayerOnHit_Info() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PlayerOnHit_Info(PlayerOnHit_Info other) : this() {
      _hasBits0 = other._hasBits0;
      onHitPlayerId_ = other.onHitPlayerId_;
      damage_ = other.damage_;
      attackPlayerId_ = other.attackPlayerId_;
      bulletColor_ = other.bulletColor_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PlayerOnHit_Info Clone() {
      return new PlayerOnHit_Info(this);
    }

    /// <summary>Field number for the "onHitPlayerId" field.</summary>
    public const int OnHitPlayerIdFieldNumber = 1;
    private readonly static uint OnHitPlayerIdDefaultValue = 0;

    private uint onHitPlayerId_;
    /// <summary>
    ///受击玩家id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint OnHitPlayerId {
      get { if ((_hasBits0 & 1) != 0) { return onHitPlayerId_; } else { return OnHitPlayerIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        onHitPlayerId_ = value;
      }
    }
    /// <summary>Gets whether the "onHitPlayerId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasOnHitPlayerId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "onHitPlayerId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearOnHitPlayerId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "damage" field.</summary>
    public const int DamageFieldNumber = 2;
    private readonly static int DamageDefaultValue = 0;

    private int damage_;
    /// <summary>
    ///伤害值
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Damage {
      get { if ((_hasBits0 & 2) != 0) { return damage_; } else { return DamageDefaultValue; } }
      set {
        _hasBits0 |= 2;
        damage_ = value;
      }
    }
    /// <summary>Gets whether the "damage" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDamage {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "damage" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDamage() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "attackPlayerId" field.</summary>
    public const int AttackPlayerIdFieldNumber = 3;
    private readonly static uint AttackPlayerIdDefaultValue = 0;

    private uint attackPlayerId_;
    /// <summary>
    ///攻击方玩家id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint AttackPlayerId {
      get { if ((_hasBits0 & 4) != 0) { return attackPlayerId_; } else { return AttackPlayerIdDefaultValue; } }
      set {
        _hasBits0 |= 4;
        attackPlayerId_ = value;
      }
    }
    /// <summary>Gets whether the "attackPlayerId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAttackPlayerId {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "attackPlayerId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAttackPlayerId() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "bulletColor" field.</summary>
    public const int BulletColorFieldNumber = 4;
    private readonly static int BulletColorDefaultValue = 0;

    private int bulletColor_;
    /// <summary>
    ///子弹颜色
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int BulletColor {
      get { if ((_hasBits0 & 8) != 0) { return bulletColor_; } else { return BulletColorDefaultValue; } }
      set {
        _hasBits0 |= 8;
        bulletColor_ = value;
      }
    }
    /// <summary>Gets whether the "bulletColor" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBulletColor {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "bulletColor" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBulletColor() {
      _hasBits0 &= ~8;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PlayerOnHit_Info);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PlayerOnHit_Info other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (OnHitPlayerId != other.OnHitPlayerId) return false;
      if (Damage != other.Damage) return false;
      if (AttackPlayerId != other.AttackPlayerId) return false;
      if (BulletColor != other.BulletColor) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasOnHitPlayerId) hash ^= OnHitPlayerId.GetHashCode();
      if (HasDamage) hash ^= Damage.GetHashCode();
      if (HasAttackPlayerId) hash ^= AttackPlayerId.GetHashCode();
      if (HasBulletColor) hash ^= BulletColor.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasOnHitPlayerId) {
        output.WriteRawTag(8);
        output.WriteUInt32(OnHitPlayerId);
      }
      if (HasDamage) {
        output.WriteRawTag(16);
        output.WriteInt32(Damage);
      }
      if (HasAttackPlayerId) {
        output.WriteRawTag(24);
        output.WriteUInt32(AttackPlayerId);
      }
      if (HasBulletColor) {
        output.WriteRawTag(32);
        output.WriteInt32(BulletColor);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasOnHitPlayerId) {
        output.WriteRawTag(8);
        output.WriteUInt32(OnHitPlayerId);
      }
      if (HasDamage) {
        output.WriteRawTag(16);
        output.WriteInt32(Damage);
      }
      if (HasAttackPlayerId) {
        output.WriteRawTag(24);
        output.WriteUInt32(AttackPlayerId);
      }
      if (HasBulletColor) {
        output.WriteRawTag(32);
        output.WriteInt32(BulletColor);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasOnHitPlayerId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(OnHitPlayerId);
      }
      if (HasDamage) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Damage);
      }
      if (HasAttackPlayerId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(AttackPlayerId);
      }
      if (HasBulletColor) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BulletColor);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PlayerOnHit_Info other) {
      if (other == null) {
        return;
      }
      if (other.HasOnHitPlayerId) {
        OnHitPlayerId = other.OnHitPlayerId;
      }
      if (other.HasDamage) {
        Damage = other.Damage;
      }
      if (other.HasAttackPlayerId) {
        AttackPlayerId = other.AttackPlayerId;
      }
      if (other.HasBulletColor) {
        BulletColor = other.BulletColor;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            OnHitPlayerId = input.ReadUInt32();
            break;
          }
          case 16: {
            Damage = input.ReadInt32();
            break;
          }
          case 24: {
            AttackPlayerId = input.ReadUInt32();
            break;
          }
          case 32: {
            BulletColor = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            OnHitPlayerId = input.ReadUInt32();
            break;
          }
          case 16: {
            Damage = input.ReadInt32();
            break;
          }
          case 24: {
            AttackPlayerId = input.ReadUInt32();
            break;
          }
          case 32: {
            BulletColor = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Data_ID_Bool_Data : pb::IMessage<Data_ID_Bool_Data>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Data_ID_Bool_Data> _parser = new pb::MessageParser<Data_ID_Bool_Data>(() => new Data_ID_Bool_Data());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Data_ID_Bool_Data> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HardCordGirlData.HardCordGirlDataClassReflection.Descriptor.MessageTypes[36]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Data_ID_Bool_Data() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Data_ID_Bool_Data(Data_ID_Bool_Data other) : this() {
      _hasBits0 = other._hasBits0;
      id_ = other.id_;
      state_ = other.state_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Data_ID_Bool_Data Clone() {
      return new Data_ID_Bool_Data(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private readonly static uint IdDefaultValue = 0;

    private uint id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Id {
      get { if ((_hasBits0 & 1) != 0) { return id_; } else { return IdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        id_ = value;
      }
    }
    /// <summary>Gets whether the "id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "state" field.</summary>
    public const int StateFieldNumber = 2;
    private readonly static bool StateDefaultValue = false;

    private bool state_;
    /// <summary>
    ///状态
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool State {
      get { if ((_hasBits0 & 2) != 0) { return state_; } else { return StateDefaultValue; } }
      set {
        _hasBits0 |= 2;
        state_ = value;
      }
    }
    /// <summary>Gets whether the "state" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasState {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "state" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearState() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Data_ID_Bool_Data);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Data_ID_Bool_Data other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (State != other.State) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasId) hash ^= Id.GetHashCode();
      if (HasState) hash ^= State.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasId) {
        output.WriteRawTag(8);
        output.WriteUInt32(Id);
      }
      if (HasState) {
        output.WriteRawTag(16);
        output.WriteBool(State);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasId) {
        output.WriteRawTag(8);
        output.WriteUInt32(Id);
      }
      if (HasState) {
        output.WriteRawTag(16);
        output.WriteBool(State);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Id);
      }
      if (HasState) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Data_ID_Bool_Data other) {
      if (other == null) {
        return;
      }
      if (other.HasId) {
        Id = other.Id;
      }
      if (other.HasState) {
        State = other.State;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadUInt32();
            break;
          }
          case 16: {
            State = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadUInt32();
            break;
          }
          case 16: {
            State = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class GuLu_ChangeSubScene_Info : pb::IMessage<GuLu_ChangeSubScene_Info>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GuLu_ChangeSubScene_Info> _parser = new pb::MessageParser<GuLu_ChangeSubScene_Info>(() => new GuLu_ChangeSubScene_Info());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GuLu_ChangeSubScene_Info> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HardCordGirlData.HardCordGirlDataClassReflection.Descriptor.MessageTypes[37]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GuLu_ChangeSubScene_Info() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GuLu_ChangeSubScene_Info(GuLu_ChangeSubScene_Info other) : this() {
      _hasBits0 = other._hasBits0;
      sceneId_ = other.sceneId_;
      roomId_ = other.roomId_;
      mapId_ = other.mapId_;
      timeTick_ = other.timeTick_;
      waves_ = other.waves_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GuLu_ChangeSubScene_Info Clone() {
      return new GuLu_ChangeSubScene_Info(this);
    }

    /// <summary>Field number for the "sceneId" field.</summary>
    public const int SceneIdFieldNumber = 1;
    private readonly static int SceneIdDefaultValue = 0;

    private int sceneId_;
    /// <summary>
    ///场景id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int SceneId {
      get { if ((_hasBits0 & 1) != 0) { return sceneId_; } else { return SceneIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        sceneId_ = value;
      }
    }
    /// <summary>Gets whether the "sceneId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSceneId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "sceneId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSceneId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "roomId" field.</summary>
    public const int RoomIdFieldNumber = 2;
    private readonly static int RoomIdDefaultValue = 0;

    private int roomId_;
    /// <summary>
    ///房间id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int RoomId {
      get { if ((_hasBits0 & 2) != 0) { return roomId_; } else { return RoomIdDefaultValue; } }
      set {
        _hasBits0 |= 2;
        roomId_ = value;
      }
    }
    /// <summary>Gets whether the "roomId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRoomId {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "roomId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRoomId() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "mapId" field.</summary>
    public const int MapIdFieldNumber = 3;
    private readonly static int MapIdDefaultValue = 0;

    private int mapId_;
    /// <summary>
    ///地图id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int MapId {
      get { if ((_hasBits0 & 4) != 0) { return mapId_; } else { return MapIdDefaultValue; } }
      set {
        _hasBits0 |= 4;
        mapId_ = value;
      }
    }
    /// <summary>Gets whether the "mapId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMapId {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "mapId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMapId() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "timeTick" field.</summary>
    public const int TimeTickFieldNumber = 4;
    private readonly static int TimeTickDefaultValue = 0;

    private int timeTick_;
    /// <summary>
    ///时间tick
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int TimeTick {
      get { if ((_hasBits0 & 8) != 0) { return timeTick_; } else { return TimeTickDefaultValue; } }
      set {
        _hasBits0 |= 8;
        timeTick_ = value;
      }
    }
    /// <summary>Gets whether the "timeTick" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTimeTick {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "timeTick" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTimeTick() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "waves" field.</summary>
    public const int WavesFieldNumber = 5;
    private readonly static int WavesDefaultValue = 0;

    private int waves_;
    /// <summary>
    ///波次
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Waves {
      get { if ((_hasBits0 & 16) != 0) { return waves_; } else { return WavesDefaultValue; } }
      set {
        _hasBits0 |= 16;
        waves_ = value;
      }
    }
    /// <summary>Gets whether the "waves" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasWaves {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "waves" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearWaves() {
      _hasBits0 &= ~16;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GuLu_ChangeSubScene_Info);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GuLu_ChangeSubScene_Info other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SceneId != other.SceneId) return false;
      if (RoomId != other.RoomId) return false;
      if (MapId != other.MapId) return false;
      if (TimeTick != other.TimeTick) return false;
      if (Waves != other.Waves) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasSceneId) hash ^= SceneId.GetHashCode();
      if (HasRoomId) hash ^= RoomId.GetHashCode();
      if (HasMapId) hash ^= MapId.GetHashCode();
      if (HasTimeTick) hash ^= TimeTick.GetHashCode();
      if (HasWaves) hash ^= Waves.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasSceneId) {
        output.WriteRawTag(8);
        output.WriteInt32(SceneId);
      }
      if (HasRoomId) {
        output.WriteRawTag(16);
        output.WriteInt32(RoomId);
      }
      if (HasMapId) {
        output.WriteRawTag(24);
        output.WriteInt32(MapId);
      }
      if (HasTimeTick) {
        output.WriteRawTag(32);
        output.WriteInt32(TimeTick);
      }
      if (HasWaves) {
        output.WriteRawTag(40);
        output.WriteInt32(Waves);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasSceneId) {
        output.WriteRawTag(8);
        output.WriteInt32(SceneId);
      }
      if (HasRoomId) {
        output.WriteRawTag(16);
        output.WriteInt32(RoomId);
      }
      if (HasMapId) {
        output.WriteRawTag(24);
        output.WriteInt32(MapId);
      }
      if (HasTimeTick) {
        output.WriteRawTag(32);
        output.WriteInt32(TimeTick);
      }
      if (HasWaves) {
        output.WriteRawTag(40);
        output.WriteInt32(Waves);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasSceneId) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SceneId);
      }
      if (HasRoomId) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RoomId);
      }
      if (HasMapId) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MapId);
      }
      if (HasTimeTick) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TimeTick);
      }
      if (HasWaves) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Waves);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GuLu_ChangeSubScene_Info other) {
      if (other == null) {
        return;
      }
      if (other.HasSceneId) {
        SceneId = other.SceneId;
      }
      if (other.HasRoomId) {
        RoomId = other.RoomId;
      }
      if (other.HasMapId) {
        MapId = other.MapId;
      }
      if (other.HasTimeTick) {
        TimeTick = other.TimeTick;
      }
      if (other.HasWaves) {
        Waves = other.Waves;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            SceneId = input.ReadInt32();
            break;
          }
          case 16: {
            RoomId = input.ReadInt32();
            break;
          }
          case 24: {
            MapId = input.ReadInt32();
            break;
          }
          case 32: {
            TimeTick = input.ReadInt32();
            break;
          }
          case 40: {
            Waves = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            SceneId = input.ReadInt32();
            break;
          }
          case 16: {
            RoomId = input.ReadInt32();
            break;
          }
          case 24: {
            MapId = input.ReadInt32();
            break;
          }
          case 32: {
            TimeTick = input.ReadInt32();
            break;
          }
          case 40: {
            Waves = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///祖玛小球同步类型
  /// </summary>
  public sealed partial class PopCapBeadData : pb::IMessage<PopCapBeadData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PopCapBeadData> _parser = new pb::MessageParser<PopCapBeadData>(() => new PopCapBeadData());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PopCapBeadData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HardCordGirlData.HardCordGirlDataClassReflection.Descriptor.MessageTypes[38]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PopCapBeadData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PopCapBeadData(PopCapBeadData other) : this() {
      _hasBits0 = other._hasBits0;
      id_ = other.id_;
      beadType_ = other.beadType_;
      beadPos_ = other.beadPos_ != null ? other.beadPos_.Clone() : null;
      beadRot_ = other.beadRot_ != null ? other.beadRot_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PopCapBeadData Clone() {
      return new PopCapBeadData(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private readonly static uint IdDefaultValue = 0;

    private uint id_;
    /// <summary>
    ///玩家id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Id {
      get { if ((_hasBits0 & 1) != 0) { return id_; } else { return IdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        id_ = value;
      }
    }
    /// <summary>Gets whether the "id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "beadType" field.</summary>
    public const int BeadTypeFieldNumber = 2;
    private readonly static int BeadTypeDefaultValue = 0;

    private int beadType_;
    /// <summary>
    ///小球类型
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int BeadType {
      get { if ((_hasBits0 & 2) != 0) { return beadType_; } else { return BeadTypeDefaultValue; } }
      set {
        _hasBits0 |= 2;
        beadType_ = value;
      }
    }
    /// <summary>Gets whether the "beadType" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBeadType {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "beadType" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBeadType() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "beadPos" field.</summary>
    public const int BeadPosFieldNumber = 3;
    private global::HardCordGirlData.VECTOR3 beadPos_;
    /// <summary>
    ///小球位置
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::HardCordGirlData.VECTOR3 BeadPos {
      get { return beadPos_; }
      set {
        beadPos_ = value;
      }
    }

    /// <summary>Field number for the "beadRot" field.</summary>
    public const int BeadRotFieldNumber = 4;
    private global::HardCordGirlData.QUATEENION beadRot_;
    /// <summary>
    ///小球旋转
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::HardCordGirlData.QUATEENION BeadRot {
      get { return beadRot_; }
      set {
        beadRot_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PopCapBeadData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PopCapBeadData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (BeadType != other.BeadType) return false;
      if (!object.Equals(BeadPos, other.BeadPos)) return false;
      if (!object.Equals(BeadRot, other.BeadRot)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasId) hash ^= Id.GetHashCode();
      if (HasBeadType) hash ^= BeadType.GetHashCode();
      if (beadPos_ != null) hash ^= BeadPos.GetHashCode();
      if (beadRot_ != null) hash ^= BeadRot.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasId) {
        output.WriteRawTag(8);
        output.WriteUInt32(Id);
      }
      if (HasBeadType) {
        output.WriteRawTag(16);
        output.WriteInt32(BeadType);
      }
      if (beadPos_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(BeadPos);
      }
      if (beadRot_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(BeadRot);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasId) {
        output.WriteRawTag(8);
        output.WriteUInt32(Id);
      }
      if (HasBeadType) {
        output.WriteRawTag(16);
        output.WriteInt32(BeadType);
      }
      if (beadPos_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(BeadPos);
      }
      if (beadRot_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(BeadRot);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Id);
      }
      if (HasBeadType) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BeadType);
      }
      if (beadPos_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(BeadPos);
      }
      if (beadRot_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(BeadRot);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PopCapBeadData other) {
      if (other == null) {
        return;
      }
      if (other.HasId) {
        Id = other.Id;
      }
      if (other.HasBeadType) {
        BeadType = other.BeadType;
      }
      if (other.beadPos_ != null) {
        if (beadPos_ == null) {
          BeadPos = new global::HardCordGirlData.VECTOR3();
        }
        BeadPos.MergeFrom(other.BeadPos);
      }
      if (other.beadRot_ != null) {
        if (beadRot_ == null) {
          BeadRot = new global::HardCordGirlData.QUATEENION();
        }
        BeadRot.MergeFrom(other.BeadRot);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadUInt32();
            break;
          }
          case 16: {
            BeadType = input.ReadInt32();
            break;
          }
          case 26: {
            if (beadPos_ == null) {
              BeadPos = new global::HardCordGirlData.VECTOR3();
            }
            input.ReadMessage(BeadPos);
            break;
          }
          case 34: {
            if (beadRot_ == null) {
              BeadRot = new global::HardCordGirlData.QUATEENION();
            }
            input.ReadMessage(BeadRot);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadUInt32();
            break;
          }
          case 16: {
            BeadType = input.ReadInt32();
            break;
          }
          case 26: {
            if (beadPos_ == null) {
              BeadPos = new global::HardCordGirlData.VECTOR3();
            }
            input.ReadMessage(BeadPos);
            break;
          }
          case 34: {
            if (beadRot_ == null) {
              BeadRot = new global::HardCordGirlData.QUATEENION();
            }
            input.ReadMessage(BeadRot);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class QUATEENION : pb::IMessage<QUATEENION>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<QUATEENION> _parser = new pb::MessageParser<QUATEENION>(() => new QUATEENION());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<QUATEENION> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HardCordGirlData.HardCordGirlDataClassReflection.Descriptor.MessageTypes[39]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public QUATEENION() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public QUATEENION(QUATEENION other) : this() {
      _hasBits0 = other._hasBits0;
      x_ = other.x_;
      y_ = other.y_;
      z_ = other.z_;
      w_ = other.w_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public QUATEENION Clone() {
      return new QUATEENION(this);
    }

    /// <summary>Field number for the "X" field.</summary>
    public const int XFieldNumber = 1;
    private readonly static float XDefaultValue = 0F;

    private float x_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float X {
      get { if ((_hasBits0 & 1) != 0) { return x_; } else { return XDefaultValue; } }
      set {
        _hasBits0 |= 1;
        x_ = value;
      }
    }
    /// <summary>Gets whether the "X" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasX {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "X" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearX() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "Y" field.</summary>
    public const int YFieldNumber = 2;
    private readonly static float YDefaultValue = 0F;

    private float y_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Y {
      get { if ((_hasBits0 & 2) != 0) { return y_; } else { return YDefaultValue; } }
      set {
        _hasBits0 |= 2;
        y_ = value;
      }
    }
    /// <summary>Gets whether the "Y" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasY {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "Y" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearY() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "Z" field.</summary>
    public const int ZFieldNumber = 3;
    private readonly static float ZDefaultValue = 0F;

    private float z_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Z {
      get { if ((_hasBits0 & 4) != 0) { return z_; } else { return ZDefaultValue; } }
      set {
        _hasBits0 |= 4;
        z_ = value;
      }
    }
    /// <summary>Gets whether the "Z" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasZ {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "Z" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearZ() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "w" field.</summary>
    public const int WFieldNumber = 4;
    private readonly static float WDefaultValue = 0F;

    private float w_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float W {
      get { if ((_hasBits0 & 8) != 0) { return w_; } else { return WDefaultValue; } }
      set {
        _hasBits0 |= 8;
        w_ = value;
      }
    }
    /// <summary>Gets whether the "w" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasW {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "w" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearW() {
      _hasBits0 &= ~8;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as QUATEENION);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(QUATEENION other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(X, other.X)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Y, other.Y)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Z, other.Z)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(W, other.W)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasX) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(X);
      if (HasY) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Y);
      if (HasZ) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Z);
      if (HasW) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(W);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasX) {
        output.WriteRawTag(13);
        output.WriteFloat(X);
      }
      if (HasY) {
        output.WriteRawTag(21);
        output.WriteFloat(Y);
      }
      if (HasZ) {
        output.WriteRawTag(29);
        output.WriteFloat(Z);
      }
      if (HasW) {
        output.WriteRawTag(37);
        output.WriteFloat(W);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasX) {
        output.WriteRawTag(13);
        output.WriteFloat(X);
      }
      if (HasY) {
        output.WriteRawTag(21);
        output.WriteFloat(Y);
      }
      if (HasZ) {
        output.WriteRawTag(29);
        output.WriteFloat(Z);
      }
      if (HasW) {
        output.WriteRawTag(37);
        output.WriteFloat(W);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasX) {
        size += 1 + 4;
      }
      if (HasY) {
        size += 1 + 4;
      }
      if (HasZ) {
        size += 1 + 4;
      }
      if (HasW) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(QUATEENION other) {
      if (other == null) {
        return;
      }
      if (other.HasX) {
        X = other.X;
      }
      if (other.HasY) {
        Y = other.Y;
      }
      if (other.HasZ) {
        Z = other.Z;
      }
      if (other.HasW) {
        W = other.W;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            X = input.ReadFloat();
            break;
          }
          case 21: {
            Y = input.ReadFloat();
            break;
          }
          case 29: {
            Z = input.ReadFloat();
            break;
          }
          case 37: {
            W = input.ReadFloat();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 13: {
            X = input.ReadFloat();
            break;
          }
          case 21: {
            Y = input.ReadFloat();
            break;
          }
          case 29: {
            Z = input.ReadFloat();
            break;
          }
          case 37: {
            W = input.ReadFloat();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///祖玛小球碰撞信息
  /// </summary>
  public sealed partial class PopCapBeadTriggerData : pb::IMessage<PopCapBeadTriggerData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PopCapBeadTriggerData> _parser = new pb::MessageParser<PopCapBeadTriggerData>(() => new PopCapBeadTriggerData());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PopCapBeadTriggerData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HardCordGirlData.HardCordGirlDataClassReflection.Descriptor.MessageTypes[40]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PopCapBeadTriggerData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PopCapBeadTriggerData(PopCapBeadTriggerData other) : this() {
      _hasBits0 = other._hasBits0;
      id_ = other.id_;
      listId_ = other.listId_;
      triggerLinkID_ = other.triggerLinkID_;
      triggerBeadID_ = other.triggerBeadID_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PopCapBeadTriggerData Clone() {
      return new PopCapBeadTriggerData(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private readonly static uint IdDefaultValue = 0;

    private uint id_;
    /// <summary>
    ///玩家信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Id {
      get { if ((_hasBits0 & 1) != 0) { return id_; } else { return IdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        id_ = value;
      }
    }
    /// <summary>Gets whether the "id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "listId" field.</summary>
    public const int ListIdFieldNumber = 2;
    private readonly static int ListIdDefaultValue = 0;

    private int listId_;
    /// <summary>
    ///小球列表id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ListId {
      get { if ((_hasBits0 & 2) != 0) { return listId_; } else { return ListIdDefaultValue; } }
      set {
        _hasBits0 |= 2;
        listId_ = value;
      }
    }
    /// <summary>Gets whether the "listId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasListId {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "listId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearListId() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "triggerLinkID" field.</summary>
    public const int TriggerLinkIDFieldNumber = 3;
    private readonly static int TriggerLinkIDDefaultValue = 0;

    private int triggerLinkID_;
    /// <summary>
    ///碰撞小球链表ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int TriggerLinkID {
      get { if ((_hasBits0 & 4) != 0) { return triggerLinkID_; } else { return TriggerLinkIDDefaultValue; } }
      set {
        _hasBits0 |= 4;
        triggerLinkID_ = value;
      }
    }
    /// <summary>Gets whether the "triggerLinkID" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTriggerLinkID {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "triggerLinkID" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTriggerLinkID() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "triggerBeadID" field.</summary>
    public const int TriggerBeadIDFieldNumber = 4;
    private readonly static int TriggerBeadIDDefaultValue = 0;

    private int triggerBeadID_;
    /// <summary>
    ///碰撞小球ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int TriggerBeadID {
      get { if ((_hasBits0 & 8) != 0) { return triggerBeadID_; } else { return TriggerBeadIDDefaultValue; } }
      set {
        _hasBits0 |= 8;
        triggerBeadID_ = value;
      }
    }
    /// <summary>Gets whether the "triggerBeadID" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTriggerBeadID {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "triggerBeadID" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTriggerBeadID() {
      _hasBits0 &= ~8;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PopCapBeadTriggerData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PopCapBeadTriggerData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (ListId != other.ListId) return false;
      if (TriggerLinkID != other.TriggerLinkID) return false;
      if (TriggerBeadID != other.TriggerBeadID) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasId) hash ^= Id.GetHashCode();
      if (HasListId) hash ^= ListId.GetHashCode();
      if (HasTriggerLinkID) hash ^= TriggerLinkID.GetHashCode();
      if (HasTriggerBeadID) hash ^= TriggerBeadID.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasId) {
        output.WriteRawTag(8);
        output.WriteUInt32(Id);
      }
      if (HasListId) {
        output.WriteRawTag(16);
        output.WriteInt32(ListId);
      }
      if (HasTriggerLinkID) {
        output.WriteRawTag(24);
        output.WriteInt32(TriggerLinkID);
      }
      if (HasTriggerBeadID) {
        output.WriteRawTag(32);
        output.WriteInt32(TriggerBeadID);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasId) {
        output.WriteRawTag(8);
        output.WriteUInt32(Id);
      }
      if (HasListId) {
        output.WriteRawTag(16);
        output.WriteInt32(ListId);
      }
      if (HasTriggerLinkID) {
        output.WriteRawTag(24);
        output.WriteInt32(TriggerLinkID);
      }
      if (HasTriggerBeadID) {
        output.WriteRawTag(32);
        output.WriteInt32(TriggerBeadID);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Id);
      }
      if (HasListId) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ListId);
      }
      if (HasTriggerLinkID) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TriggerLinkID);
      }
      if (HasTriggerBeadID) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TriggerBeadID);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PopCapBeadTriggerData other) {
      if (other == null) {
        return;
      }
      if (other.HasId) {
        Id = other.Id;
      }
      if (other.HasListId) {
        ListId = other.ListId;
      }
      if (other.HasTriggerLinkID) {
        TriggerLinkID = other.TriggerLinkID;
      }
      if (other.HasTriggerBeadID) {
        TriggerBeadID = other.TriggerBeadID;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadUInt32();
            break;
          }
          case 16: {
            ListId = input.ReadInt32();
            break;
          }
          case 24: {
            TriggerLinkID = input.ReadInt32();
            break;
          }
          case 32: {
            TriggerBeadID = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadUInt32();
            break;
          }
          case 16: {
            ListId = input.ReadInt32();
            break;
          }
          case 24: {
            TriggerLinkID = input.ReadInt32();
            break;
          }
          case 32: {
            TriggerBeadID = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///祖玛小球分队数据
  /// </summary>
  public sealed partial class PopCapBeadUnitData : pb::IMessage<PopCapBeadUnitData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PopCapBeadUnitData> _parser = new pb::MessageParser<PopCapBeadUnitData>(() => new PopCapBeadUnitData());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PopCapBeadUnitData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HardCordGirlData.HardCordGirlDataClassReflection.Descriptor.MessageTypes[41]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PopCapBeadUnitData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PopCapBeadUnitData(PopCapBeadUnitData other) : this() {
      _hasBits0 = other._hasBits0;
      availableBeadType_ = other.availableBeadType_;
      listPlayerID_ = other.listPlayerID_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PopCapBeadUnitData Clone() {
      return new PopCapBeadUnitData(this);
    }

    /// <summary>Field number for the "availableBeadType" field.</summary>
    public const int AvailableBeadTypeFieldNumber = 1;
    private readonly static int AvailableBeadTypeDefaultValue = 0;

    private int availableBeadType_;
    /// <summary>
    ///玩家信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int AvailableBeadType {
      get { if ((_hasBits0 & 1) != 0) { return availableBeadType_; } else { return AvailableBeadTypeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        availableBeadType_ = value;
      }
    }
    /// <summary>Gets whether the "availableBeadType" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAvailableBeadType {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "availableBeadType" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAvailableBeadType() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "listPlayerID" field.</summary>
    public const int ListPlayerIDFieldNumber = 2;
    private static readonly pb::FieldCodec<int> _repeated_listPlayerID_codec
        = pb::FieldCodec.ForInt32(16);
    private readonly pbc::RepeatedField<int> listPlayerID_ = new pbc::RepeatedField<int>();
    /// <summary>
    ///玩家顺序ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<int> ListPlayerID {
      get { return listPlayerID_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PopCapBeadUnitData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PopCapBeadUnitData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AvailableBeadType != other.AvailableBeadType) return false;
      if(!listPlayerID_.Equals(other.listPlayerID_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasAvailableBeadType) hash ^= AvailableBeadType.GetHashCode();
      hash ^= listPlayerID_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasAvailableBeadType) {
        output.WriteRawTag(8);
        output.WriteInt32(AvailableBeadType);
      }
      listPlayerID_.WriteTo(output, _repeated_listPlayerID_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasAvailableBeadType) {
        output.WriteRawTag(8);
        output.WriteInt32(AvailableBeadType);
      }
      listPlayerID_.WriteTo(ref output, _repeated_listPlayerID_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasAvailableBeadType) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AvailableBeadType);
      }
      size += listPlayerID_.CalculateSize(_repeated_listPlayerID_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PopCapBeadUnitData other) {
      if (other == null) {
        return;
      }
      if (other.HasAvailableBeadType) {
        AvailableBeadType = other.AvailableBeadType;
      }
      listPlayerID_.Add(other.listPlayerID_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            AvailableBeadType = input.ReadInt32();
            break;
          }
          case 18:
          case 16: {
            listPlayerID_.AddEntriesFrom(input, _repeated_listPlayerID_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            AvailableBeadType = input.ReadInt32();
            break;
          }
          case 18:
          case 16: {
            listPlayerID_.AddEntriesFrom(ref input, _repeated_listPlayerID_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///祖玛小球游戏结束同步
  /// </summary>
  public sealed partial class PopCapGameOverData : pb::IMessage<PopCapGameOverData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PopCapGameOverData> _parser = new pb::MessageParser<PopCapGameOverData>(() => new PopCapGameOverData());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PopCapGameOverData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HardCordGirlData.HardCordGirlDataClassReflection.Descriptor.MessageTypes[42]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PopCapGameOverData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PopCapGameOverData(PopCapGameOverData other) : this() {
      _hasBits0 = other._hasBits0;
      overTemp_ = other.overTemp_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PopCapGameOverData Clone() {
      return new PopCapGameOverData(this);
    }

    /// <summary>Field number for the "overTemp" field.</summary>
    public const int OverTempFieldNumber = 1;
    private readonly static int OverTempDefaultValue = 0;

    private int overTemp_;
    /// <summary>
    ///玩家信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int OverTemp {
      get { if ((_hasBits0 & 1) != 0) { return overTemp_; } else { return OverTempDefaultValue; } }
      set {
        _hasBits0 |= 1;
        overTemp_ = value;
      }
    }
    /// <summary>Gets whether the "overTemp" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasOverTemp {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "overTemp" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearOverTemp() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PopCapGameOverData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PopCapGameOverData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (OverTemp != other.OverTemp) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasOverTemp) hash ^= OverTemp.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasOverTemp) {
        output.WriteRawTag(8);
        output.WriteInt32(OverTemp);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasOverTemp) {
        output.WriteRawTag(8);
        output.WriteInt32(OverTemp);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasOverTemp) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(OverTemp);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PopCapGameOverData other) {
      if (other == null) {
        return;
      }
      if (other.HasOverTemp) {
        OverTemp = other.OverTemp;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            OverTemp = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            OverTemp = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///祖玛小球飞行碰撞信息
  /// </summary>
  public sealed partial class PopCapBeadTriggerData_Fly : pb::IMessage<PopCapBeadTriggerData_Fly>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PopCapBeadTriggerData_Fly> _parser = new pb::MessageParser<PopCapBeadTriggerData_Fly>(() => new PopCapBeadTriggerData_Fly());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PopCapBeadTriggerData_Fly> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HardCordGirlData.HardCordGirlDataClassReflection.Descriptor.MessageTypes[43]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PopCapBeadTriggerData_Fly() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PopCapBeadTriggerData_Fly(PopCapBeadTriggerData_Fly other) : this() {
      _hasBits0 = other._hasBits0;
      id_ = other.id_;
      listId_ = other.listId_;
      triggerId_ = other.triggerId_;
      triggerListId_ = other.triggerListId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PopCapBeadTriggerData_Fly Clone() {
      return new PopCapBeadTriggerData_Fly(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private readonly static uint IdDefaultValue = 0;

    private uint id_;
    /// <summary>
    ///玩家信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Id {
      get { if ((_hasBits0 & 1) != 0) { return id_; } else { return IdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        id_ = value;
      }
    }
    /// <summary>Gets whether the "id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "listId" field.</summary>
    public const int ListIdFieldNumber = 2;
    private readonly static int ListIdDefaultValue = 0;

    private int listId_;
    /// <summary>
    ///小球列表id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ListId {
      get { if ((_hasBits0 & 2) != 0) { return listId_; } else { return ListIdDefaultValue; } }
      set {
        _hasBits0 |= 2;
        listId_ = value;
      }
    }
    /// <summary>Gets whether the "listId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasListId {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "listId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearListId() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "triggerId" field.</summary>
    public const int TriggerIdFieldNumber = 3;
    private readonly static uint TriggerIdDefaultValue = 0;

    private uint triggerId_;
    /// <summary>
    ///碰撞小球所属玩家
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint TriggerId {
      get { if ((_hasBits0 & 4) != 0) { return triggerId_; } else { return TriggerIdDefaultValue; } }
      set {
        _hasBits0 |= 4;
        triggerId_ = value;
      }
    }
    /// <summary>Gets whether the "triggerId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTriggerId {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "triggerId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTriggerId() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "triggerListId" field.</summary>
    public const int TriggerListIdFieldNumber = 4;
    private readonly static int TriggerListIdDefaultValue = 0;

    private int triggerListId_;
    /// <summary>
    ///碰撞小球列表id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int TriggerListId {
      get { if ((_hasBits0 & 8) != 0) { return triggerListId_; } else { return TriggerListIdDefaultValue; } }
      set {
        _hasBits0 |= 8;
        triggerListId_ = value;
      }
    }
    /// <summary>Gets whether the "triggerListId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTriggerListId {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "triggerListId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTriggerListId() {
      _hasBits0 &= ~8;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PopCapBeadTriggerData_Fly);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PopCapBeadTriggerData_Fly other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (ListId != other.ListId) return false;
      if (TriggerId != other.TriggerId) return false;
      if (TriggerListId != other.TriggerListId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasId) hash ^= Id.GetHashCode();
      if (HasListId) hash ^= ListId.GetHashCode();
      if (HasTriggerId) hash ^= TriggerId.GetHashCode();
      if (HasTriggerListId) hash ^= TriggerListId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasId) {
        output.WriteRawTag(8);
        output.WriteUInt32(Id);
      }
      if (HasListId) {
        output.WriteRawTag(16);
        output.WriteInt32(ListId);
      }
      if (HasTriggerId) {
        output.WriteRawTag(24);
        output.WriteUInt32(TriggerId);
      }
      if (HasTriggerListId) {
        output.WriteRawTag(32);
        output.WriteInt32(TriggerListId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasId) {
        output.WriteRawTag(8);
        output.WriteUInt32(Id);
      }
      if (HasListId) {
        output.WriteRawTag(16);
        output.WriteInt32(ListId);
      }
      if (HasTriggerId) {
        output.WriteRawTag(24);
        output.WriteUInt32(TriggerId);
      }
      if (HasTriggerListId) {
        output.WriteRawTag(32);
        output.WriteInt32(TriggerListId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Id);
      }
      if (HasListId) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ListId);
      }
      if (HasTriggerId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TriggerId);
      }
      if (HasTriggerListId) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TriggerListId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PopCapBeadTriggerData_Fly other) {
      if (other == null) {
        return;
      }
      if (other.HasId) {
        Id = other.Id;
      }
      if (other.HasListId) {
        ListId = other.ListId;
      }
      if (other.HasTriggerId) {
        TriggerId = other.TriggerId;
      }
      if (other.HasTriggerListId) {
        TriggerListId = other.TriggerListId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadUInt32();
            break;
          }
          case 16: {
            ListId = input.ReadInt32();
            break;
          }
          case 24: {
            TriggerId = input.ReadUInt32();
            break;
          }
          case 32: {
            TriggerListId = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadUInt32();
            break;
          }
          case 16: {
            ListId = input.ReadInt32();
            break;
          }
          case 24: {
            TriggerId = input.ReadUInt32();
            break;
          }
          case 32: {
            TriggerListId = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class GuLu_CS_ENTER : pb::IMessage<GuLu_CS_ENTER>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GuLu_CS_ENTER> _parser = new pb::MessageParser<GuLu_CS_ENTER>(() => new GuLu_CS_ENTER());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GuLu_CS_ENTER> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HardCordGirlData.HardCordGirlDataClassReflection.Descriptor.MessageTypes[44]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GuLu_CS_ENTER() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GuLu_CS_ENTER(GuLu_CS_ENTER other) : this() {
      _hasBits0 = other._hasBits0;
      playerId_ = other.playerId_;
      isOpen_ = other.isOpen_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GuLu_CS_ENTER Clone() {
      return new GuLu_CS_ENTER(this);
    }

    /// <summary>Field number for the "playerId" field.</summary>
    public const int PlayerIdFieldNumber = 1;
    private readonly static uint PlayerIdDefaultValue = 0;

    private uint playerId_;
    /// <summary>
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint PlayerId {
      get { if ((_hasBits0 & 1) != 0) { return playerId_; } else { return PlayerIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        playerId_ = value;
      }
    }
    /// <summary>Gets whether the "playerId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPlayerId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "playerId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPlayerId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "isOpen" field.</summary>
    public const int IsOpenFieldNumber = 2;
    private readonly static bool IsOpenDefaultValue = false;

    private bool isOpen_;
    /// <summary>
    ///CS开启/关闭
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsOpen {
      get { if ((_hasBits0 & 2) != 0) { return isOpen_; } else { return IsOpenDefaultValue; } }
      set {
        _hasBits0 |= 2;
        isOpen_ = value;
      }
    }
    /// <summary>Gets whether the "isOpen" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIsOpen {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "isOpen" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIsOpen() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GuLu_CS_ENTER);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GuLu_CS_ENTER other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlayerId != other.PlayerId) return false;
      if (IsOpen != other.IsOpen) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasPlayerId) hash ^= PlayerId.GetHashCode();
      if (HasIsOpen) hash ^= IsOpen.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasPlayerId) {
        output.WriteRawTag(8);
        output.WriteUInt32(PlayerId);
      }
      if (HasIsOpen) {
        output.WriteRawTag(16);
        output.WriteBool(IsOpen);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasPlayerId) {
        output.WriteRawTag(8);
        output.WriteUInt32(PlayerId);
      }
      if (HasIsOpen) {
        output.WriteRawTag(16);
        output.WriteBool(IsOpen);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasPlayerId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PlayerId);
      }
      if (HasIsOpen) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GuLu_CS_ENTER other) {
      if (other == null) {
        return;
      }
      if (other.HasPlayerId) {
        PlayerId = other.PlayerId;
      }
      if (other.HasIsOpen) {
        IsOpen = other.IsOpen;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PlayerId = input.ReadUInt32();
            break;
          }
          case 16: {
            IsOpen = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            PlayerId = input.ReadUInt32();
            break;
          }
          case 16: {
            IsOpen = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class GuLu_Dice : pb::IMessage<GuLu_Dice>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GuLu_Dice> _parser = new pb::MessageParser<GuLu_Dice>(() => new GuLu_Dice());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GuLu_Dice> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HardCordGirlData.HardCordGirlDataClassReflection.Descriptor.MessageTypes[45]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GuLu_Dice() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GuLu_Dice(GuLu_Dice other) : this() {
      pOS_ = other.pOS_ != null ? other.pOS_.Clone() : null;
      rOT_ = other.rOT_ != null ? other.rOT_.Clone() : null;
      dIRECTION_ = other.dIRECTION_ != null ? other.dIRECTION_.Clone() : null;
      torque_ = other.torque_ != null ? other.torque_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GuLu_Dice Clone() {
      return new GuLu_Dice(this);
    }

    /// <summary>Field number for the "POS" field.</summary>
    public const int POSFieldNumber = 1;
    private global::HardCordGirlData.VECTOR3 pOS_;
    /// <summary>
    ///位置
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::HardCordGirlData.VECTOR3 POS {
      get { return pOS_; }
      set {
        pOS_ = value;
      }
    }

    /// <summary>Field number for the "ROT" field.</summary>
    public const int ROTFieldNumber = 2;
    private global::HardCordGirlData.VECTOR3 rOT_;
    /// <summary>
    ///旋转
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::HardCordGirlData.VECTOR3 ROT {
      get { return rOT_; }
      set {
        rOT_ = value;
      }
    }

    /// <summary>Field number for the "DIRECTION" field.</summary>
    public const int DIRECTIONFieldNumber = 3;
    private global::HardCordGirlData.VECTOR3 dIRECTION_;
    /// <summary>
    ///力的方向大小
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::HardCordGirlData.VECTOR3 DIRECTION {
      get { return dIRECTION_; }
      set {
        dIRECTION_ = value;
      }
    }

    /// <summary>Field number for the "Torque" field.</summary>
    public const int TorqueFieldNumber = 4;
    private global::HardCordGirlData.VECTOR3 torque_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::HardCordGirlData.VECTOR3 Torque {
      get { return torque_; }
      set {
        torque_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GuLu_Dice);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GuLu_Dice other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(POS, other.POS)) return false;
      if (!object.Equals(ROT, other.ROT)) return false;
      if (!object.Equals(DIRECTION, other.DIRECTION)) return false;
      if (!object.Equals(Torque, other.Torque)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (pOS_ != null) hash ^= POS.GetHashCode();
      if (rOT_ != null) hash ^= ROT.GetHashCode();
      if (dIRECTION_ != null) hash ^= DIRECTION.GetHashCode();
      if (torque_ != null) hash ^= Torque.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (pOS_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(POS);
      }
      if (rOT_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ROT);
      }
      if (dIRECTION_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(DIRECTION);
      }
      if (torque_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Torque);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (pOS_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(POS);
      }
      if (rOT_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ROT);
      }
      if (dIRECTION_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(DIRECTION);
      }
      if (torque_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Torque);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (pOS_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(POS);
      }
      if (rOT_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ROT);
      }
      if (dIRECTION_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DIRECTION);
      }
      if (torque_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Torque);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GuLu_Dice other) {
      if (other == null) {
        return;
      }
      if (other.pOS_ != null) {
        if (pOS_ == null) {
          POS = new global::HardCordGirlData.VECTOR3();
        }
        POS.MergeFrom(other.POS);
      }
      if (other.rOT_ != null) {
        if (rOT_ == null) {
          ROT = new global::HardCordGirlData.VECTOR3();
        }
        ROT.MergeFrom(other.ROT);
      }
      if (other.dIRECTION_ != null) {
        if (dIRECTION_ == null) {
          DIRECTION = new global::HardCordGirlData.VECTOR3();
        }
        DIRECTION.MergeFrom(other.DIRECTION);
      }
      if (other.torque_ != null) {
        if (torque_ == null) {
          Torque = new global::HardCordGirlData.VECTOR3();
        }
        Torque.MergeFrom(other.Torque);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (pOS_ == null) {
              POS = new global::HardCordGirlData.VECTOR3();
            }
            input.ReadMessage(POS);
            break;
          }
          case 18: {
            if (rOT_ == null) {
              ROT = new global::HardCordGirlData.VECTOR3();
            }
            input.ReadMessage(ROT);
            break;
          }
          case 26: {
            if (dIRECTION_ == null) {
              DIRECTION = new global::HardCordGirlData.VECTOR3();
            }
            input.ReadMessage(DIRECTION);
            break;
          }
          case 34: {
            if (torque_ == null) {
              Torque = new global::HardCordGirlData.VECTOR3();
            }
            input.ReadMessage(Torque);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (pOS_ == null) {
              POS = new global::HardCordGirlData.VECTOR3();
            }
            input.ReadMessage(POS);
            break;
          }
          case 18: {
            if (rOT_ == null) {
              ROT = new global::HardCordGirlData.VECTOR3();
            }
            input.ReadMessage(ROT);
            break;
          }
          case 26: {
            if (dIRECTION_ == null) {
              DIRECTION = new global::HardCordGirlData.VECTOR3();
            }
            input.ReadMessage(DIRECTION);
            break;
          }
          case 34: {
            if (torque_ == null) {
              Torque = new global::HardCordGirlData.VECTOR3();
            }
            input.ReadMessage(Torque);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class GuLu_DANCE_INFO : pb::IMessage<GuLu_DANCE_INFO>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GuLu_DANCE_INFO> _parser = new pb::MessageParser<GuLu_DANCE_INFO>(() => new GuLu_DANCE_INFO());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GuLu_DANCE_INFO> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HardCordGirlData.HardCordGirlDataClassReflection.Descriptor.MessageTypes[46]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GuLu_DANCE_INFO() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GuLu_DANCE_INFO(GuLu_DANCE_INFO other) : this() {
      _hasBits0 = other._hasBits0;
      danceId_ = other.danceId_;
      isDance_ = other.isDance_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GuLu_DANCE_INFO Clone() {
      return new GuLu_DANCE_INFO(this);
    }

    /// <summary>Field number for the "danceId" field.</summary>
    public const int DanceIdFieldNumber = 1;
    private readonly static uint DanceIdDefaultValue = 0;

    private uint danceId_;
    /// <summary>
    ///舞蹈ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint DanceId {
      get { if ((_hasBits0 & 1) != 0) { return danceId_; } else { return DanceIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        danceId_ = value;
      }
    }
    /// <summary>Gets whether the "danceId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDanceId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "danceId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDanceId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "isDance" field.</summary>
    public const int IsDanceFieldNumber = 2;
    private readonly static bool IsDanceDefaultValue = false;

    private bool isDance_;
    /// <summary>
    ///舞蹈开关
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsDance {
      get { if ((_hasBits0 & 2) != 0) { return isDance_; } else { return IsDanceDefaultValue; } }
      set {
        _hasBits0 |= 2;
        isDance_ = value;
      }
    }
    /// <summary>Gets whether the "isDance" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIsDance {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "isDance" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIsDance() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GuLu_DANCE_INFO);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GuLu_DANCE_INFO other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (DanceId != other.DanceId) return false;
      if (IsDance != other.IsDance) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasDanceId) hash ^= DanceId.GetHashCode();
      if (HasIsDance) hash ^= IsDance.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasDanceId) {
        output.WriteRawTag(8);
        output.WriteUInt32(DanceId);
      }
      if (HasIsDance) {
        output.WriteRawTag(16);
        output.WriteBool(IsDance);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasDanceId) {
        output.WriteRawTag(8);
        output.WriteUInt32(DanceId);
      }
      if (HasIsDance) {
        output.WriteRawTag(16);
        output.WriteBool(IsDance);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasDanceId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(DanceId);
      }
      if (HasIsDance) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GuLu_DANCE_INFO other) {
      if (other == null) {
        return;
      }
      if (other.HasDanceId) {
        DanceId = other.DanceId;
      }
      if (other.HasIsDance) {
        IsDance = other.IsDance;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            DanceId = input.ReadUInt32();
            break;
          }
          case 16: {
            IsDance = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            DanceId = input.ReadUInt32();
            break;
          }
          case 16: {
            IsDance = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class TrackerData : pb::IMessage<TrackerData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TrackerData> _parser = new pb::MessageParser<TrackerData>(() => new TrackerData());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TrackerData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HardCordGirlData.HardCordGirlDataClassReflection.Descriptor.MessageTypes[47]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TrackerData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TrackerData(TrackerData other) : this() {
      _hasBits0 = other._hasBits0;
      playerId_ = other.playerId_;
      headPos_ = other.headPos_ != null ? other.headPos_.Clone() : null;
      hipPos_ = other.hipPos_ != null ? other.hipPos_.Clone() : null;
      lhPos_ = other.lhPos_ != null ? other.lhPos_.Clone() : null;
      rhPos_ = other.rhPos_ != null ? other.rhPos_.Clone() : null;
      llPos_ = other.llPos_ != null ? other.llPos_.Clone() : null;
      rlPos_ = other.rlPos_ != null ? other.rlPos_.Clone() : null;
      headRot_ = other.headRot_ != null ? other.headRot_.Clone() : null;
      hipRot_ = other.hipRot_ != null ? other.hipRot_.Clone() : null;
      lhRot_ = other.lhRot_ != null ? other.lhRot_.Clone() : null;
      rhRot_ = other.rhRot_ != null ? other.rhRot_.Clone() : null;
      llRot_ = other.llRot_ != null ? other.llRot_.Clone() : null;
      rlRot_ = other.rlRot_ != null ? other.rlRot_.Clone() : null;
      protoType_ = other.protoType_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TrackerData Clone() {
      return new TrackerData(this);
    }

    /// <summary>Field number for the "playerId" field.</summary>
    public const int PlayerIdFieldNumber = 1;
    private readonly static int PlayerIdDefaultValue = 0;

    private int playerId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int PlayerId {
      get { if ((_hasBits0 & 1) != 0) { return playerId_; } else { return PlayerIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        playerId_ = value;
      }
    }
    /// <summary>Gets whether the "playerId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPlayerId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "playerId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPlayerId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "headPos" field.</summary>
    public const int HeadPosFieldNumber = 2;
    private global::HardCordGirlData.VECTOR3 headPos_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::HardCordGirlData.VECTOR3 HeadPos {
      get { return headPos_; }
      set {
        headPos_ = value;
      }
    }

    /// <summary>Field number for the "hipPos" field.</summary>
    public const int HipPosFieldNumber = 3;
    private global::HardCordGirlData.VECTOR3 hipPos_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::HardCordGirlData.VECTOR3 HipPos {
      get { return hipPos_; }
      set {
        hipPos_ = value;
      }
    }

    /// <summary>Field number for the "lhPos" field.</summary>
    public const int LhPosFieldNumber = 4;
    private global::HardCordGirlData.VECTOR3 lhPos_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::HardCordGirlData.VECTOR3 LhPos {
      get { return lhPos_; }
      set {
        lhPos_ = value;
      }
    }

    /// <summary>Field number for the "rhPos" field.</summary>
    public const int RhPosFieldNumber = 5;
    private global::HardCordGirlData.VECTOR3 rhPos_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::HardCordGirlData.VECTOR3 RhPos {
      get { return rhPos_; }
      set {
        rhPos_ = value;
      }
    }

    /// <summary>Field number for the "llPos" field.</summary>
    public const int LlPosFieldNumber = 6;
    private global::HardCordGirlData.VECTOR3 llPos_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::HardCordGirlData.VECTOR3 LlPos {
      get { return llPos_; }
      set {
        llPos_ = value;
      }
    }

    /// <summary>Field number for the "rlPos" field.</summary>
    public const int RlPosFieldNumber = 7;
    private global::HardCordGirlData.VECTOR3 rlPos_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::HardCordGirlData.VECTOR3 RlPos {
      get { return rlPos_; }
      set {
        rlPos_ = value;
      }
    }

    /// <summary>Field number for the "headRot" field.</summary>
    public const int HeadRotFieldNumber = 8;
    private global::HardCordGirlData.VECTOR4 headRot_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::HardCordGirlData.VECTOR4 HeadRot {
      get { return headRot_; }
      set {
        headRot_ = value;
      }
    }

    /// <summary>Field number for the "hipRot" field.</summary>
    public const int HipRotFieldNumber = 9;
    private global::HardCordGirlData.VECTOR4 hipRot_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::HardCordGirlData.VECTOR4 HipRot {
      get { return hipRot_; }
      set {
        hipRot_ = value;
      }
    }

    /// <summary>Field number for the "lhRot" field.</summary>
    public const int LhRotFieldNumber = 10;
    private global::HardCordGirlData.VECTOR4 lhRot_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::HardCordGirlData.VECTOR4 LhRot {
      get { return lhRot_; }
      set {
        lhRot_ = value;
      }
    }

    /// <summary>Field number for the "rhRot" field.</summary>
    public const int RhRotFieldNumber = 11;
    private global::HardCordGirlData.VECTOR4 rhRot_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::HardCordGirlData.VECTOR4 RhRot {
      get { return rhRot_; }
      set {
        rhRot_ = value;
      }
    }

    /// <summary>Field number for the "llRot" field.</summary>
    public const int LlRotFieldNumber = 12;
    private global::HardCordGirlData.VECTOR4 llRot_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::HardCordGirlData.VECTOR4 LlRot {
      get { return llRot_; }
      set {
        llRot_ = value;
      }
    }

    /// <summary>Field number for the "rlRot" field.</summary>
    public const int RlRotFieldNumber = 13;
    private global::HardCordGirlData.VECTOR4 rlRot_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::HardCordGirlData.VECTOR4 RlRot {
      get { return rlRot_; }
      set {
        rlRot_ = value;
      }
    }

    /// <summary>Field number for the "protoType" field.</summary>
    public const int ProtoTypeFieldNumber = 14;
    private readonly static int ProtoTypeDefaultValue = 0;

    private int protoType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ProtoType {
      get { if ((_hasBits0 & 2) != 0) { return protoType_; } else { return ProtoTypeDefaultValue; } }
      set {
        _hasBits0 |= 2;
        protoType_ = value;
      }
    }
    /// <summary>Gets whether the "protoType" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasProtoType {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "protoType" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearProtoType() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TrackerData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TrackerData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlayerId != other.PlayerId) return false;
      if (!object.Equals(HeadPos, other.HeadPos)) return false;
      if (!object.Equals(HipPos, other.HipPos)) return false;
      if (!object.Equals(LhPos, other.LhPos)) return false;
      if (!object.Equals(RhPos, other.RhPos)) return false;
      if (!object.Equals(LlPos, other.LlPos)) return false;
      if (!object.Equals(RlPos, other.RlPos)) return false;
      if (!object.Equals(HeadRot, other.HeadRot)) return false;
      if (!object.Equals(HipRot, other.HipRot)) return false;
      if (!object.Equals(LhRot, other.LhRot)) return false;
      if (!object.Equals(RhRot, other.RhRot)) return false;
      if (!object.Equals(LlRot, other.LlRot)) return false;
      if (!object.Equals(RlRot, other.RlRot)) return false;
      if (ProtoType != other.ProtoType) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasPlayerId) hash ^= PlayerId.GetHashCode();
      if (headPos_ != null) hash ^= HeadPos.GetHashCode();
      if (hipPos_ != null) hash ^= HipPos.GetHashCode();
      if (lhPos_ != null) hash ^= LhPos.GetHashCode();
      if (rhPos_ != null) hash ^= RhPos.GetHashCode();
      if (llPos_ != null) hash ^= LlPos.GetHashCode();
      if (rlPos_ != null) hash ^= RlPos.GetHashCode();
      if (headRot_ != null) hash ^= HeadRot.GetHashCode();
      if (hipRot_ != null) hash ^= HipRot.GetHashCode();
      if (lhRot_ != null) hash ^= LhRot.GetHashCode();
      if (rhRot_ != null) hash ^= RhRot.GetHashCode();
      if (llRot_ != null) hash ^= LlRot.GetHashCode();
      if (rlRot_ != null) hash ^= RlRot.GetHashCode();
      if (HasProtoType) hash ^= ProtoType.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasPlayerId) {
        output.WriteRawTag(8);
        output.WriteInt32(PlayerId);
      }
      if (headPos_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(HeadPos);
      }
      if (hipPos_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(HipPos);
      }
      if (lhPos_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(LhPos);
      }
      if (rhPos_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(RhPos);
      }
      if (llPos_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(LlPos);
      }
      if (rlPos_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(RlPos);
      }
      if (headRot_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(HeadRot);
      }
      if (hipRot_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(HipRot);
      }
      if (lhRot_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(LhRot);
      }
      if (rhRot_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(RhRot);
      }
      if (llRot_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(LlRot);
      }
      if (rlRot_ != null) {
        output.WriteRawTag(106);
        output.WriteMessage(RlRot);
      }
      if (HasProtoType) {
        output.WriteRawTag(112);
        output.WriteInt32(ProtoType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasPlayerId) {
        output.WriteRawTag(8);
        output.WriteInt32(PlayerId);
      }
      if (headPos_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(HeadPos);
      }
      if (hipPos_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(HipPos);
      }
      if (lhPos_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(LhPos);
      }
      if (rhPos_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(RhPos);
      }
      if (llPos_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(LlPos);
      }
      if (rlPos_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(RlPos);
      }
      if (headRot_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(HeadRot);
      }
      if (hipRot_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(HipRot);
      }
      if (lhRot_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(LhRot);
      }
      if (rhRot_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(RhRot);
      }
      if (llRot_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(LlRot);
      }
      if (rlRot_ != null) {
        output.WriteRawTag(106);
        output.WriteMessage(RlRot);
      }
      if (HasProtoType) {
        output.WriteRawTag(112);
        output.WriteInt32(ProtoType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasPlayerId) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PlayerId);
      }
      if (headPos_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(HeadPos);
      }
      if (hipPos_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(HipPos);
      }
      if (lhPos_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LhPos);
      }
      if (rhPos_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RhPos);
      }
      if (llPos_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LlPos);
      }
      if (rlPos_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RlPos);
      }
      if (headRot_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(HeadRot);
      }
      if (hipRot_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(HipRot);
      }
      if (lhRot_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LhRot);
      }
      if (rhRot_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RhRot);
      }
      if (llRot_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LlRot);
      }
      if (rlRot_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RlRot);
      }
      if (HasProtoType) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ProtoType);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TrackerData other) {
      if (other == null) {
        return;
      }
      if (other.HasPlayerId) {
        PlayerId = other.PlayerId;
      }
      if (other.headPos_ != null) {
        if (headPos_ == null) {
          HeadPos = new global::HardCordGirlData.VECTOR3();
        }
        HeadPos.MergeFrom(other.HeadPos);
      }
      if (other.hipPos_ != null) {
        if (hipPos_ == null) {
          HipPos = new global::HardCordGirlData.VECTOR3();
        }
        HipPos.MergeFrom(other.HipPos);
      }
      if (other.lhPos_ != null) {
        if (lhPos_ == null) {
          LhPos = new global::HardCordGirlData.VECTOR3();
        }
        LhPos.MergeFrom(other.LhPos);
      }
      if (other.rhPos_ != null) {
        if (rhPos_ == null) {
          RhPos = new global::HardCordGirlData.VECTOR3();
        }
        RhPos.MergeFrom(other.RhPos);
      }
      if (other.llPos_ != null) {
        if (llPos_ == null) {
          LlPos = new global::HardCordGirlData.VECTOR3();
        }
        LlPos.MergeFrom(other.LlPos);
      }
      if (other.rlPos_ != null) {
        if (rlPos_ == null) {
          RlPos = new global::HardCordGirlData.VECTOR3();
        }
        RlPos.MergeFrom(other.RlPos);
      }
      if (other.headRot_ != null) {
        if (headRot_ == null) {
          HeadRot = new global::HardCordGirlData.VECTOR4();
        }
        HeadRot.MergeFrom(other.HeadRot);
      }
      if (other.hipRot_ != null) {
        if (hipRot_ == null) {
          HipRot = new global::HardCordGirlData.VECTOR4();
        }
        HipRot.MergeFrom(other.HipRot);
      }
      if (other.lhRot_ != null) {
        if (lhRot_ == null) {
          LhRot = new global::HardCordGirlData.VECTOR4();
        }
        LhRot.MergeFrom(other.LhRot);
      }
      if (other.rhRot_ != null) {
        if (rhRot_ == null) {
          RhRot = new global::HardCordGirlData.VECTOR4();
        }
        RhRot.MergeFrom(other.RhRot);
      }
      if (other.llRot_ != null) {
        if (llRot_ == null) {
          LlRot = new global::HardCordGirlData.VECTOR4();
        }
        LlRot.MergeFrom(other.LlRot);
      }
      if (other.rlRot_ != null) {
        if (rlRot_ == null) {
          RlRot = new global::HardCordGirlData.VECTOR4();
        }
        RlRot.MergeFrom(other.RlRot);
      }
      if (other.HasProtoType) {
        ProtoType = other.ProtoType;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PlayerId = input.ReadInt32();
            break;
          }
          case 18: {
            if (headPos_ == null) {
              HeadPos = new global::HardCordGirlData.VECTOR3();
            }
            input.ReadMessage(HeadPos);
            break;
          }
          case 26: {
            if (hipPos_ == null) {
              HipPos = new global::HardCordGirlData.VECTOR3();
            }
            input.ReadMessage(HipPos);
            break;
          }
          case 34: {
            if (lhPos_ == null) {
              LhPos = new global::HardCordGirlData.VECTOR3();
            }
            input.ReadMessage(LhPos);
            break;
          }
          case 42: {
            if (rhPos_ == null) {
              RhPos = new global::HardCordGirlData.VECTOR3();
            }
            input.ReadMessage(RhPos);
            break;
          }
          case 50: {
            if (llPos_ == null) {
              LlPos = new global::HardCordGirlData.VECTOR3();
            }
            input.ReadMessage(LlPos);
            break;
          }
          case 58: {
            if (rlPos_ == null) {
              RlPos = new global::HardCordGirlData.VECTOR3();
            }
            input.ReadMessage(RlPos);
            break;
          }
          case 66: {
            if (headRot_ == null) {
              HeadRot = new global::HardCordGirlData.VECTOR4();
            }
            input.ReadMessage(HeadRot);
            break;
          }
          case 74: {
            if (hipRot_ == null) {
              HipRot = new global::HardCordGirlData.VECTOR4();
            }
            input.ReadMessage(HipRot);
            break;
          }
          case 82: {
            if (lhRot_ == null) {
              LhRot = new global::HardCordGirlData.VECTOR4();
            }
            input.ReadMessage(LhRot);
            break;
          }
          case 90: {
            if (rhRot_ == null) {
              RhRot = new global::HardCordGirlData.VECTOR4();
            }
            input.ReadMessage(RhRot);
            break;
          }
          case 98: {
            if (llRot_ == null) {
              LlRot = new global::HardCordGirlData.VECTOR4();
            }
            input.ReadMessage(LlRot);
            break;
          }
          case 106: {
            if (rlRot_ == null) {
              RlRot = new global::HardCordGirlData.VECTOR4();
            }
            input.ReadMessage(RlRot);
            break;
          }
          case 112: {
            ProtoType = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            PlayerId = input.ReadInt32();
            break;
          }
          case 18: {
            if (headPos_ == null) {
              HeadPos = new global::HardCordGirlData.VECTOR3();
            }
            input.ReadMessage(HeadPos);
            break;
          }
          case 26: {
            if (hipPos_ == null) {
              HipPos = new global::HardCordGirlData.VECTOR3();
            }
            input.ReadMessage(HipPos);
            break;
          }
          case 34: {
            if (lhPos_ == null) {
              LhPos = new global::HardCordGirlData.VECTOR3();
            }
            input.ReadMessage(LhPos);
            break;
          }
          case 42: {
            if (rhPos_ == null) {
              RhPos = new global::HardCordGirlData.VECTOR3();
            }
            input.ReadMessage(RhPos);
            break;
          }
          case 50: {
            if (llPos_ == null) {
              LlPos = new global::HardCordGirlData.VECTOR3();
            }
            input.ReadMessage(LlPos);
            break;
          }
          case 58: {
            if (rlPos_ == null) {
              RlPos = new global::HardCordGirlData.VECTOR3();
            }
            input.ReadMessage(RlPos);
            break;
          }
          case 66: {
            if (headRot_ == null) {
              HeadRot = new global::HardCordGirlData.VECTOR4();
            }
            input.ReadMessage(HeadRot);
            break;
          }
          case 74: {
            if (hipRot_ == null) {
              HipRot = new global::HardCordGirlData.VECTOR4();
            }
            input.ReadMessage(HipRot);
            break;
          }
          case 82: {
            if (lhRot_ == null) {
              LhRot = new global::HardCordGirlData.VECTOR4();
            }
            input.ReadMessage(LhRot);
            break;
          }
          case 90: {
            if (rhRot_ == null) {
              RhRot = new global::HardCordGirlData.VECTOR4();
            }
            input.ReadMessage(RhRot);
            break;
          }
          case 98: {
            if (llRot_ == null) {
              LlRot = new global::HardCordGirlData.VECTOR4();
            }
            input.ReadMessage(LlRot);
            break;
          }
          case 106: {
            if (rlRot_ == null) {
              RlRot = new global::HardCordGirlData.VECTOR4();
            }
            input.ReadMessage(RlRot);
            break;
          }
          case 112: {
            ProtoType = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ModelScaleData : pb::IMessage<ModelScaleData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ModelScaleData> _parser = new pb::MessageParser<ModelScaleData>(() => new ModelScaleData());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ModelScaleData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HardCordGirlData.HardCordGirlDataClassReflection.Descriptor.MessageTypes[48]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ModelScaleData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ModelScaleData(ModelScaleData other) : this() {
      _hasBits0 = other._hasBits0;
      playerId_ = other.playerId_;
      highScale_ = other.highScale_ != null ? other.highScale_.Clone() : null;
      armScale_ = other.armScale_ != null ? other.armScale_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ModelScaleData Clone() {
      return new ModelScaleData(this);
    }

    /// <summary>Field number for the "playerId" field.</summary>
    public const int PlayerIdFieldNumber = 1;
    private readonly static int PlayerIdDefaultValue = 0;

    private int playerId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int PlayerId {
      get { if ((_hasBits0 & 1) != 0) { return playerId_; } else { return PlayerIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        playerId_ = value;
      }
    }
    /// <summary>Gets whether the "playerId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPlayerId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "playerId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPlayerId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "highScale" field.</summary>
    public const int HighScaleFieldNumber = 2;
    private global::HardCordGirlData.VECTOR3 highScale_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::HardCordGirlData.VECTOR3 HighScale {
      get { return highScale_; }
      set {
        highScale_ = value;
      }
    }

    /// <summary>Field number for the "armScale" field.</summary>
    public const int ArmScaleFieldNumber = 3;
    private global::HardCordGirlData.VECTOR3 armScale_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::HardCordGirlData.VECTOR3 ArmScale {
      get { return armScale_; }
      set {
        armScale_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ModelScaleData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ModelScaleData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlayerId != other.PlayerId) return false;
      if (!object.Equals(HighScale, other.HighScale)) return false;
      if (!object.Equals(ArmScale, other.ArmScale)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasPlayerId) hash ^= PlayerId.GetHashCode();
      if (highScale_ != null) hash ^= HighScale.GetHashCode();
      if (armScale_ != null) hash ^= ArmScale.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasPlayerId) {
        output.WriteRawTag(8);
        output.WriteInt32(PlayerId);
      }
      if (highScale_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(HighScale);
      }
      if (armScale_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(ArmScale);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasPlayerId) {
        output.WriteRawTag(8);
        output.WriteInt32(PlayerId);
      }
      if (highScale_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(HighScale);
      }
      if (armScale_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(ArmScale);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasPlayerId) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PlayerId);
      }
      if (highScale_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(HighScale);
      }
      if (armScale_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ArmScale);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ModelScaleData other) {
      if (other == null) {
        return;
      }
      if (other.HasPlayerId) {
        PlayerId = other.PlayerId;
      }
      if (other.highScale_ != null) {
        if (highScale_ == null) {
          HighScale = new global::HardCordGirlData.VECTOR3();
        }
        HighScale.MergeFrom(other.HighScale);
      }
      if (other.armScale_ != null) {
        if (armScale_ == null) {
          ArmScale = new global::HardCordGirlData.VECTOR3();
        }
        ArmScale.MergeFrom(other.ArmScale);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PlayerId = input.ReadInt32();
            break;
          }
          case 18: {
            if (highScale_ == null) {
              HighScale = new global::HardCordGirlData.VECTOR3();
            }
            input.ReadMessage(HighScale);
            break;
          }
          case 26: {
            if (armScale_ == null) {
              ArmScale = new global::HardCordGirlData.VECTOR3();
            }
            input.ReadMessage(ArmScale);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            PlayerId = input.ReadInt32();
            break;
          }
          case 18: {
            if (highScale_ == null) {
              HighScale = new global::HardCordGirlData.VECTOR3();
            }
            input.ReadMessage(HighScale);
            break;
          }
          case 26: {
            if (armScale_ == null) {
              ArmScale = new global::HardCordGirlData.VECTOR3();
            }
            input.ReadMessage(ArmScale);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SpawnBubbleData : pb::IMessage<SpawnBubbleData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SpawnBubbleData> _parser = new pb::MessageParser<SpawnBubbleData>(() => new SpawnBubbleData());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SpawnBubbleData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HardCordGirlData.HardCordGirlDataClassReflection.Descriptor.MessageTypes[49]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SpawnBubbleData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SpawnBubbleData(SpawnBubbleData other) : this() {
      _hasBits0 = other._hasBits0;
      type_ = other.type_;
      playerId_ = other.playerId_;
      bDataList_ = other.bDataList_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SpawnBubbleData Clone() {
      return new SpawnBubbleData(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private readonly static int TypeDefaultValue = 0;

    private int type_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Type {
      get { if ((_hasBits0 & 1) != 0) { return type_; } else { return TypeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        type_ = value;
      }
    }
    /// <summary>Gets whether the "type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasType {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearType() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "playerId" field.</summary>
    public const int PlayerIdFieldNumber = 2;
    private readonly static int PlayerIdDefaultValue = 0;

    private int playerId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int PlayerId {
      get { if ((_hasBits0 & 2) != 0) { return playerId_; } else { return PlayerIdDefaultValue; } }
      set {
        _hasBits0 |= 2;
        playerId_ = value;
      }
    }
    /// <summary>Gets whether the "playerId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPlayerId {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "playerId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPlayerId() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "bDataList" field.</summary>
    public const int BDataListFieldNumber = 3;
    private static readonly pb::FieldCodec<global::HardCordGirlData.BubbleData> _repeated_bDataList_codec
        = pb::FieldCodec.ForMessage(26, global::HardCordGirlData.BubbleData.Parser);
    private readonly pbc::RepeatedField<global::HardCordGirlData.BubbleData> bDataList_ = new pbc::RepeatedField<global::HardCordGirlData.BubbleData>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::HardCordGirlData.BubbleData> BDataList {
      get { return bDataList_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SpawnBubbleData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SpawnBubbleData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (PlayerId != other.PlayerId) return false;
      if(!bDataList_.Equals(other.bDataList_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasType) hash ^= Type.GetHashCode();
      if (HasPlayerId) hash ^= PlayerId.GetHashCode();
      hash ^= bDataList_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasType) {
        output.WriteRawTag(8);
        output.WriteInt32(Type);
      }
      if (HasPlayerId) {
        output.WriteRawTag(16);
        output.WriteInt32(PlayerId);
      }
      bDataList_.WriteTo(output, _repeated_bDataList_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasType) {
        output.WriteRawTag(8);
        output.WriteInt32(Type);
      }
      if (HasPlayerId) {
        output.WriteRawTag(16);
        output.WriteInt32(PlayerId);
      }
      bDataList_.WriteTo(ref output, _repeated_bDataList_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasType) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
      }
      if (HasPlayerId) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PlayerId);
      }
      size += bDataList_.CalculateSize(_repeated_bDataList_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SpawnBubbleData other) {
      if (other == null) {
        return;
      }
      if (other.HasType) {
        Type = other.Type;
      }
      if (other.HasPlayerId) {
        PlayerId = other.PlayerId;
      }
      bDataList_.Add(other.bDataList_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = input.ReadInt32();
            break;
          }
          case 16: {
            PlayerId = input.ReadInt32();
            break;
          }
          case 26: {
            bDataList_.AddEntriesFrom(input, _repeated_bDataList_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Type = input.ReadInt32();
            break;
          }
          case 16: {
            PlayerId = input.ReadInt32();
            break;
          }
          case 26: {
            bDataList_.AddEntriesFrom(ref input, _repeated_bDataList_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class BubbleData : pb::IMessage<BubbleData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<BubbleData> _parser = new pb::MessageParser<BubbleData>(() => new BubbleData());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<BubbleData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HardCordGirlData.HardCordGirlDataClassReflection.Descriptor.MessageTypes[50]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BubbleData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BubbleData(BubbleData other) : this() {
      _hasBits0 = other._hasBits0;
      playerId_ = other.playerId_;
      bubbleId_ = other.bubbleId_;
      rdmX_ = other.rdmX_;
      rdmY_ = other.rdmY_;
      rdmZ_ = other.rdmZ_;
      colorIndex_ = other.colorIndex_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BubbleData Clone() {
      return new BubbleData(this);
    }

    /// <summary>Field number for the "playerId" field.</summary>
    public const int PlayerIdFieldNumber = 1;
    private readonly static int PlayerIdDefaultValue = 0;

    private int playerId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int PlayerId {
      get { if ((_hasBits0 & 1) != 0) { return playerId_; } else { return PlayerIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        playerId_ = value;
      }
    }
    /// <summary>Gets whether the "playerId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPlayerId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "playerId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPlayerId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "bubbleId" field.</summary>
    public const int BubbleIdFieldNumber = 2;
    private readonly static string BubbleIdDefaultValue = "";

    private string bubbleId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string BubbleId {
      get { return bubbleId_ ?? BubbleIdDefaultValue; }
      set {
        bubbleId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "bubbleId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBubbleId {
      get { return bubbleId_ != null; }
    }
    /// <summary>Clears the value of the "bubbleId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBubbleId() {
      bubbleId_ = null;
    }

    /// <summary>Field number for the "rdmX" field.</summary>
    public const int RdmXFieldNumber = 3;
    private readonly static float RdmXDefaultValue = 0F;

    private float rdmX_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float RdmX {
      get { if ((_hasBits0 & 2) != 0) { return rdmX_; } else { return RdmXDefaultValue; } }
      set {
        _hasBits0 |= 2;
        rdmX_ = value;
      }
    }
    /// <summary>Gets whether the "rdmX" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRdmX {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "rdmX" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRdmX() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "rdmY" field.</summary>
    public const int RdmYFieldNumber = 4;
    private readonly static float RdmYDefaultValue = 0F;

    private float rdmY_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float RdmY {
      get { if ((_hasBits0 & 4) != 0) { return rdmY_; } else { return RdmYDefaultValue; } }
      set {
        _hasBits0 |= 4;
        rdmY_ = value;
      }
    }
    /// <summary>Gets whether the "rdmY" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRdmY {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "rdmY" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRdmY() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "rdmZ" field.</summary>
    public const int RdmZFieldNumber = 5;
    private readonly static float RdmZDefaultValue = 0F;

    private float rdmZ_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float RdmZ {
      get { if ((_hasBits0 & 8) != 0) { return rdmZ_; } else { return RdmZDefaultValue; } }
      set {
        _hasBits0 |= 8;
        rdmZ_ = value;
      }
    }
    /// <summary>Gets whether the "rdmZ" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRdmZ {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "rdmZ" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRdmZ() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "colorIndex" field.</summary>
    public const int ColorIndexFieldNumber = 6;
    private readonly static int ColorIndexDefaultValue = 0;

    private int colorIndex_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ColorIndex {
      get { if ((_hasBits0 & 16) != 0) { return colorIndex_; } else { return ColorIndexDefaultValue; } }
      set {
        _hasBits0 |= 16;
        colorIndex_ = value;
      }
    }
    /// <summary>Gets whether the "colorIndex" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasColorIndex {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "colorIndex" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearColorIndex() {
      _hasBits0 &= ~16;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as BubbleData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(BubbleData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlayerId != other.PlayerId) return false;
      if (BubbleId != other.BubbleId) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(RdmX, other.RdmX)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(RdmY, other.RdmY)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(RdmZ, other.RdmZ)) return false;
      if (ColorIndex != other.ColorIndex) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasPlayerId) hash ^= PlayerId.GetHashCode();
      if (HasBubbleId) hash ^= BubbleId.GetHashCode();
      if (HasRdmX) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(RdmX);
      if (HasRdmY) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(RdmY);
      if (HasRdmZ) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(RdmZ);
      if (HasColorIndex) hash ^= ColorIndex.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasPlayerId) {
        output.WriteRawTag(8);
        output.WriteInt32(PlayerId);
      }
      if (HasBubbleId) {
        output.WriteRawTag(18);
        output.WriteString(BubbleId);
      }
      if (HasRdmX) {
        output.WriteRawTag(29);
        output.WriteFloat(RdmX);
      }
      if (HasRdmY) {
        output.WriteRawTag(37);
        output.WriteFloat(RdmY);
      }
      if (HasRdmZ) {
        output.WriteRawTag(45);
        output.WriteFloat(RdmZ);
      }
      if (HasColorIndex) {
        output.WriteRawTag(48);
        output.WriteInt32(ColorIndex);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasPlayerId) {
        output.WriteRawTag(8);
        output.WriteInt32(PlayerId);
      }
      if (HasBubbleId) {
        output.WriteRawTag(18);
        output.WriteString(BubbleId);
      }
      if (HasRdmX) {
        output.WriteRawTag(29);
        output.WriteFloat(RdmX);
      }
      if (HasRdmY) {
        output.WriteRawTag(37);
        output.WriteFloat(RdmY);
      }
      if (HasRdmZ) {
        output.WriteRawTag(45);
        output.WriteFloat(RdmZ);
      }
      if (HasColorIndex) {
        output.WriteRawTag(48);
        output.WriteInt32(ColorIndex);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasPlayerId) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PlayerId);
      }
      if (HasBubbleId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BubbleId);
      }
      if (HasRdmX) {
        size += 1 + 4;
      }
      if (HasRdmY) {
        size += 1 + 4;
      }
      if (HasRdmZ) {
        size += 1 + 4;
      }
      if (HasColorIndex) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ColorIndex);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(BubbleData other) {
      if (other == null) {
        return;
      }
      if (other.HasPlayerId) {
        PlayerId = other.PlayerId;
      }
      if (other.HasBubbleId) {
        BubbleId = other.BubbleId;
      }
      if (other.HasRdmX) {
        RdmX = other.RdmX;
      }
      if (other.HasRdmY) {
        RdmY = other.RdmY;
      }
      if (other.HasRdmZ) {
        RdmZ = other.RdmZ;
      }
      if (other.HasColorIndex) {
        ColorIndex = other.ColorIndex;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PlayerId = input.ReadInt32();
            break;
          }
          case 18: {
            BubbleId = input.ReadString();
            break;
          }
          case 29: {
            RdmX = input.ReadFloat();
            break;
          }
          case 37: {
            RdmY = input.ReadFloat();
            break;
          }
          case 45: {
            RdmZ = input.ReadFloat();
            break;
          }
          case 48: {
            ColorIndex = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            PlayerId = input.ReadInt32();
            break;
          }
          case 18: {
            BubbleId = input.ReadString();
            break;
          }
          case 29: {
            RdmX = input.ReadFloat();
            break;
          }
          case 37: {
            RdmY = input.ReadFloat();
            break;
          }
          case 45: {
            RdmZ = input.ReadFloat();
            break;
          }
          case 48: {
            ColorIndex = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class BreakBubbleData : pb::IMessage<BreakBubbleData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<BreakBubbleData> _parser = new pb::MessageParser<BreakBubbleData>(() => new BreakBubbleData());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<BreakBubbleData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HardCordGirlData.HardCordGirlDataClassReflection.Descriptor.MessageTypes[51]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BreakBubbleData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BreakBubbleData(BreakBubbleData other) : this() {
      _hasBits0 = other._hasBits0;
      bubbleId_ = other.bubbleId_;
      soundId_ = other.soundId_;
      type_ = other.type_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BreakBubbleData Clone() {
      return new BreakBubbleData(this);
    }

    /// <summary>Field number for the "bubbleId" field.</summary>
    public const int BubbleIdFieldNumber = 1;
    private readonly static string BubbleIdDefaultValue = "";

    private string bubbleId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string BubbleId {
      get { return bubbleId_ ?? BubbleIdDefaultValue; }
      set {
        bubbleId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "bubbleId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBubbleId {
      get { return bubbleId_ != null; }
    }
    /// <summary>Clears the value of the "bubbleId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBubbleId() {
      bubbleId_ = null;
    }

    /// <summary>Field number for the "soundId" field.</summary>
    public const int SoundIdFieldNumber = 2;
    private readonly static int SoundIdDefaultValue = 0;

    private int soundId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int SoundId {
      get { if ((_hasBits0 & 1) != 0) { return soundId_; } else { return SoundIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        soundId_ = value;
      }
    }
    /// <summary>Gets whether the "soundId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSoundId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "soundId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSoundId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 3;
    private readonly static int TypeDefaultValue = 0;

    private int type_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Type {
      get { if ((_hasBits0 & 2) != 0) { return type_; } else { return TypeDefaultValue; } }
      set {
        _hasBits0 |= 2;
        type_ = value;
      }
    }
    /// <summary>Gets whether the "type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasType {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearType() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as BreakBubbleData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(BreakBubbleData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BubbleId != other.BubbleId) return false;
      if (SoundId != other.SoundId) return false;
      if (Type != other.Type) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasBubbleId) hash ^= BubbleId.GetHashCode();
      if (HasSoundId) hash ^= SoundId.GetHashCode();
      if (HasType) hash ^= Type.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasBubbleId) {
        output.WriteRawTag(10);
        output.WriteString(BubbleId);
      }
      if (HasSoundId) {
        output.WriteRawTag(16);
        output.WriteInt32(SoundId);
      }
      if (HasType) {
        output.WriteRawTag(24);
        output.WriteInt32(Type);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasBubbleId) {
        output.WriteRawTag(10);
        output.WriteString(BubbleId);
      }
      if (HasSoundId) {
        output.WriteRawTag(16);
        output.WriteInt32(SoundId);
      }
      if (HasType) {
        output.WriteRawTag(24);
        output.WriteInt32(Type);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasBubbleId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BubbleId);
      }
      if (HasSoundId) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SoundId);
      }
      if (HasType) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(BreakBubbleData other) {
      if (other == null) {
        return;
      }
      if (other.HasBubbleId) {
        BubbleId = other.BubbleId;
      }
      if (other.HasSoundId) {
        SoundId = other.SoundId;
      }
      if (other.HasType) {
        Type = other.Type;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            BubbleId = input.ReadString();
            break;
          }
          case 16: {
            SoundId = input.ReadInt32();
            break;
          }
          case 24: {
            Type = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            BubbleId = input.ReadString();
            break;
          }
          case 16: {
            SoundId = input.ReadInt32();
            break;
          }
          case 24: {
            Type = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SpawnRibbonData : pb::IMessage<SpawnRibbonData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SpawnRibbonData> _parser = new pb::MessageParser<SpawnRibbonData>(() => new SpawnRibbonData());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SpawnRibbonData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HardCordGirlData.HardCordGirlDataClassReflection.Descriptor.MessageTypes[52]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SpawnRibbonData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SpawnRibbonData(SpawnRibbonData other) : this() {
      _hasBits0 = other._hasBits0;
      type_ = other.type_;
      playerId_ = other.playerId_;
      bDataList_ = other.bDataList_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SpawnRibbonData Clone() {
      return new SpawnRibbonData(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private readonly static int TypeDefaultValue = 0;

    private int type_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Type {
      get { if ((_hasBits0 & 1) != 0) { return type_; } else { return TypeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        type_ = value;
      }
    }
    /// <summary>Gets whether the "type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasType {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearType() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "playerId" field.</summary>
    public const int PlayerIdFieldNumber = 2;
    private readonly static int PlayerIdDefaultValue = 0;

    private int playerId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int PlayerId {
      get { if ((_hasBits0 & 2) != 0) { return playerId_; } else { return PlayerIdDefaultValue; } }
      set {
        _hasBits0 |= 2;
        playerId_ = value;
      }
    }
    /// <summary>Gets whether the "playerId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPlayerId {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "playerId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPlayerId() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "bDataList" field.</summary>
    public const int BDataListFieldNumber = 3;
    private static readonly pb::FieldCodec<global::HardCordGirlData.RibbonData> _repeated_bDataList_codec
        = pb::FieldCodec.ForMessage(26, global::HardCordGirlData.RibbonData.Parser);
    private readonly pbc::RepeatedField<global::HardCordGirlData.RibbonData> bDataList_ = new pbc::RepeatedField<global::HardCordGirlData.RibbonData>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::HardCordGirlData.RibbonData> BDataList {
      get { return bDataList_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SpawnRibbonData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SpawnRibbonData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (PlayerId != other.PlayerId) return false;
      if(!bDataList_.Equals(other.bDataList_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasType) hash ^= Type.GetHashCode();
      if (HasPlayerId) hash ^= PlayerId.GetHashCode();
      hash ^= bDataList_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasType) {
        output.WriteRawTag(8);
        output.WriteInt32(Type);
      }
      if (HasPlayerId) {
        output.WriteRawTag(16);
        output.WriteInt32(PlayerId);
      }
      bDataList_.WriteTo(output, _repeated_bDataList_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasType) {
        output.WriteRawTag(8);
        output.WriteInt32(Type);
      }
      if (HasPlayerId) {
        output.WriteRawTag(16);
        output.WriteInt32(PlayerId);
      }
      bDataList_.WriteTo(ref output, _repeated_bDataList_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasType) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
      }
      if (HasPlayerId) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PlayerId);
      }
      size += bDataList_.CalculateSize(_repeated_bDataList_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SpawnRibbonData other) {
      if (other == null) {
        return;
      }
      if (other.HasType) {
        Type = other.Type;
      }
      if (other.HasPlayerId) {
        PlayerId = other.PlayerId;
      }
      bDataList_.Add(other.bDataList_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = input.ReadInt32();
            break;
          }
          case 16: {
            PlayerId = input.ReadInt32();
            break;
          }
          case 26: {
            bDataList_.AddEntriesFrom(input, _repeated_bDataList_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Type = input.ReadInt32();
            break;
          }
          case 16: {
            PlayerId = input.ReadInt32();
            break;
          }
          case 26: {
            bDataList_.AddEntriesFrom(ref input, _repeated_bDataList_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class RibbonData : pb::IMessage<RibbonData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RibbonData> _parser = new pb::MessageParser<RibbonData>(() => new RibbonData());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<RibbonData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HardCordGirlData.HardCordGirlDataClassReflection.Descriptor.MessageTypes[53]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RibbonData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RibbonData(RibbonData other) : this() {
      _hasBits0 = other._hasBits0;
      playerId_ = other.playerId_;
      ribbonId_ = other.ribbonId_;
      rdmX_ = other.rdmX_;
      rdmY_ = other.rdmY_;
      rdmZ_ = other.rdmZ_;
      colorIndex_ = other.colorIndex_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RibbonData Clone() {
      return new RibbonData(this);
    }

    /// <summary>Field number for the "playerId" field.</summary>
    public const int PlayerIdFieldNumber = 1;
    private readonly static int PlayerIdDefaultValue = 0;

    private int playerId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int PlayerId {
      get { if ((_hasBits0 & 1) != 0) { return playerId_; } else { return PlayerIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        playerId_ = value;
      }
    }
    /// <summary>Gets whether the "playerId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPlayerId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "playerId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPlayerId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "ribbonId" field.</summary>
    public const int RibbonIdFieldNumber = 2;
    private readonly static string RibbonIdDefaultValue = "";

    private string ribbonId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string RibbonId {
      get { return ribbonId_ ?? RibbonIdDefaultValue; }
      set {
        ribbonId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "ribbonId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRibbonId {
      get { return ribbonId_ != null; }
    }
    /// <summary>Clears the value of the "ribbonId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRibbonId() {
      ribbonId_ = null;
    }

    /// <summary>Field number for the "rdmX" field.</summary>
    public const int RdmXFieldNumber = 3;
    private readonly static float RdmXDefaultValue = 0F;

    private float rdmX_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float RdmX {
      get { if ((_hasBits0 & 2) != 0) { return rdmX_; } else { return RdmXDefaultValue; } }
      set {
        _hasBits0 |= 2;
        rdmX_ = value;
      }
    }
    /// <summary>Gets whether the "rdmX" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRdmX {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "rdmX" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRdmX() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "rdmY" field.</summary>
    public const int RdmYFieldNumber = 4;
    private readonly static float RdmYDefaultValue = 0F;

    private float rdmY_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float RdmY {
      get { if ((_hasBits0 & 4) != 0) { return rdmY_; } else { return RdmYDefaultValue; } }
      set {
        _hasBits0 |= 4;
        rdmY_ = value;
      }
    }
    /// <summary>Gets whether the "rdmY" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRdmY {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "rdmY" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRdmY() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "rdmZ" field.</summary>
    public const int RdmZFieldNumber = 5;
    private readonly static float RdmZDefaultValue = 0F;

    private float rdmZ_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float RdmZ {
      get { if ((_hasBits0 & 8) != 0) { return rdmZ_; } else { return RdmZDefaultValue; } }
      set {
        _hasBits0 |= 8;
        rdmZ_ = value;
      }
    }
    /// <summary>Gets whether the "rdmZ" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRdmZ {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "rdmZ" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRdmZ() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "colorIndex" field.</summary>
    public const int ColorIndexFieldNumber = 6;
    private readonly static int ColorIndexDefaultValue = 0;

    private int colorIndex_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ColorIndex {
      get { if ((_hasBits0 & 16) != 0) { return colorIndex_; } else { return ColorIndexDefaultValue; } }
      set {
        _hasBits0 |= 16;
        colorIndex_ = value;
      }
    }
    /// <summary>Gets whether the "colorIndex" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasColorIndex {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "colorIndex" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearColorIndex() {
      _hasBits0 &= ~16;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as RibbonData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(RibbonData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlayerId != other.PlayerId) return false;
      if (RibbonId != other.RibbonId) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(RdmX, other.RdmX)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(RdmY, other.RdmY)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(RdmZ, other.RdmZ)) return false;
      if (ColorIndex != other.ColorIndex) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasPlayerId) hash ^= PlayerId.GetHashCode();
      if (HasRibbonId) hash ^= RibbonId.GetHashCode();
      if (HasRdmX) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(RdmX);
      if (HasRdmY) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(RdmY);
      if (HasRdmZ) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(RdmZ);
      if (HasColorIndex) hash ^= ColorIndex.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasPlayerId) {
        output.WriteRawTag(8);
        output.WriteInt32(PlayerId);
      }
      if (HasRibbonId) {
        output.WriteRawTag(18);
        output.WriteString(RibbonId);
      }
      if (HasRdmX) {
        output.WriteRawTag(29);
        output.WriteFloat(RdmX);
      }
      if (HasRdmY) {
        output.WriteRawTag(37);
        output.WriteFloat(RdmY);
      }
      if (HasRdmZ) {
        output.WriteRawTag(45);
        output.WriteFloat(RdmZ);
      }
      if (HasColorIndex) {
        output.WriteRawTag(48);
        output.WriteInt32(ColorIndex);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasPlayerId) {
        output.WriteRawTag(8);
        output.WriteInt32(PlayerId);
      }
      if (HasRibbonId) {
        output.WriteRawTag(18);
        output.WriteString(RibbonId);
      }
      if (HasRdmX) {
        output.WriteRawTag(29);
        output.WriteFloat(RdmX);
      }
      if (HasRdmY) {
        output.WriteRawTag(37);
        output.WriteFloat(RdmY);
      }
      if (HasRdmZ) {
        output.WriteRawTag(45);
        output.WriteFloat(RdmZ);
      }
      if (HasColorIndex) {
        output.WriteRawTag(48);
        output.WriteInt32(ColorIndex);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasPlayerId) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PlayerId);
      }
      if (HasRibbonId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RibbonId);
      }
      if (HasRdmX) {
        size += 1 + 4;
      }
      if (HasRdmY) {
        size += 1 + 4;
      }
      if (HasRdmZ) {
        size += 1 + 4;
      }
      if (HasColorIndex) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ColorIndex);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(RibbonData other) {
      if (other == null) {
        return;
      }
      if (other.HasPlayerId) {
        PlayerId = other.PlayerId;
      }
      if (other.HasRibbonId) {
        RibbonId = other.RibbonId;
      }
      if (other.HasRdmX) {
        RdmX = other.RdmX;
      }
      if (other.HasRdmY) {
        RdmY = other.RdmY;
      }
      if (other.HasRdmZ) {
        RdmZ = other.RdmZ;
      }
      if (other.HasColorIndex) {
        ColorIndex = other.ColorIndex;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PlayerId = input.ReadInt32();
            break;
          }
          case 18: {
            RibbonId = input.ReadString();
            break;
          }
          case 29: {
            RdmX = input.ReadFloat();
            break;
          }
          case 37: {
            RdmY = input.ReadFloat();
            break;
          }
          case 45: {
            RdmZ = input.ReadFloat();
            break;
          }
          case 48: {
            ColorIndex = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            PlayerId = input.ReadInt32();
            break;
          }
          case 18: {
            RibbonId = input.ReadString();
            break;
          }
          case 29: {
            RdmX = input.ReadFloat();
            break;
          }
          case 37: {
            RdmY = input.ReadFloat();
            break;
          }
          case 45: {
            RdmZ = input.ReadFloat();
            break;
          }
          case 48: {
            ColorIndex = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class FininshRibbonPathData : pb::IMessage<FininshRibbonPathData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<FininshRibbonPathData> _parser = new pb::MessageParser<FininshRibbonPathData>(() => new FininshRibbonPathData());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<FininshRibbonPathData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HardCordGirlData.HardCordGirlDataClassReflection.Descriptor.MessageTypes[54]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FininshRibbonPathData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FininshRibbonPathData(FininshRibbonPathData other) : this() {
      _hasBits0 = other._hasBits0;
      ribbonId_ = other.ribbonId_;
      soundId_ = other.soundId_;
      type_ = other.type_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FininshRibbonPathData Clone() {
      return new FininshRibbonPathData(this);
    }

    /// <summary>Field number for the "ribbonId" field.</summary>
    public const int RibbonIdFieldNumber = 1;
    private readonly static string RibbonIdDefaultValue = "";

    private string ribbonId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string RibbonId {
      get { return ribbonId_ ?? RibbonIdDefaultValue; }
      set {
        ribbonId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "ribbonId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRibbonId {
      get { return ribbonId_ != null; }
    }
    /// <summary>Clears the value of the "ribbonId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRibbonId() {
      ribbonId_ = null;
    }

    /// <summary>Field number for the "soundId" field.</summary>
    public const int SoundIdFieldNumber = 2;
    private readonly static int SoundIdDefaultValue = 0;

    private int soundId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int SoundId {
      get { if ((_hasBits0 & 1) != 0) { return soundId_; } else { return SoundIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        soundId_ = value;
      }
    }
    /// <summary>Gets whether the "soundId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSoundId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "soundId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSoundId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 3;
    private readonly static int TypeDefaultValue = 0;

    private int type_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Type {
      get { if ((_hasBits0 & 2) != 0) { return type_; } else { return TypeDefaultValue; } }
      set {
        _hasBits0 |= 2;
        type_ = value;
      }
    }
    /// <summary>Gets whether the "type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasType {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearType() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as FininshRibbonPathData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(FininshRibbonPathData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RibbonId != other.RibbonId) return false;
      if (SoundId != other.SoundId) return false;
      if (Type != other.Type) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasRibbonId) hash ^= RibbonId.GetHashCode();
      if (HasSoundId) hash ^= SoundId.GetHashCode();
      if (HasType) hash ^= Type.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasRibbonId) {
        output.WriteRawTag(10);
        output.WriteString(RibbonId);
      }
      if (HasSoundId) {
        output.WriteRawTag(16);
        output.WriteInt32(SoundId);
      }
      if (HasType) {
        output.WriteRawTag(24);
        output.WriteInt32(Type);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasRibbonId) {
        output.WriteRawTag(10);
        output.WriteString(RibbonId);
      }
      if (HasSoundId) {
        output.WriteRawTag(16);
        output.WriteInt32(SoundId);
      }
      if (HasType) {
        output.WriteRawTag(24);
        output.WriteInt32(Type);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasRibbonId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RibbonId);
      }
      if (HasSoundId) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SoundId);
      }
      if (HasType) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(FininshRibbonPathData other) {
      if (other == null) {
        return;
      }
      if (other.HasRibbonId) {
        RibbonId = other.RibbonId;
      }
      if (other.HasSoundId) {
        SoundId = other.SoundId;
      }
      if (other.HasType) {
        Type = other.Type;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            RibbonId = input.ReadString();
            break;
          }
          case 16: {
            SoundId = input.ReadInt32();
            break;
          }
          case 24: {
            Type = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            RibbonId = input.ReadString();
            break;
          }
          case 16: {
            SoundId = input.ReadInt32();
            break;
          }
          case 24: {
            Type = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class DanceCmdData : pb::IMessage<DanceCmdData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DanceCmdData> _parser = new pb::MessageParser<DanceCmdData>(() => new DanceCmdData());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<DanceCmdData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HardCordGirlData.HardCordGirlDataClassReflection.Descriptor.MessageTypes[55]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DanceCmdData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DanceCmdData(DanceCmdData other) : this() {
      _hasBits0 = other._hasBits0;
      name_ = other.name_;
      cmd_ = other.cmd_;
      animationName_ = other.animationName_;
      videoPath_ = other.videoPath_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DanceCmdData Clone() {
      return new DanceCmdData(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private readonly static string NameDefaultValue = "";

    private string name_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_ ?? NameDefaultValue; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasName {
      get { return name_ != null; }
    }
    /// <summary>Clears the value of the "name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearName() {
      name_ = null;
    }

    /// <summary>Field number for the "cmd" field.</summary>
    public const int CmdFieldNumber = 2;
    private readonly static int CmdDefaultValue = 0;

    private int cmd_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Cmd {
      get { if ((_hasBits0 & 1) != 0) { return cmd_; } else { return CmdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        cmd_ = value;
      }
    }
    /// <summary>Gets whether the "cmd" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCmd {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "cmd" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCmd() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "animationName" field.</summary>
    public const int AnimationNameFieldNumber = 3;
    private readonly static string AnimationNameDefaultValue = "";

    private string animationName_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string AnimationName {
      get { return animationName_ ?? AnimationNameDefaultValue; }
      set {
        animationName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "animationName" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAnimationName {
      get { return animationName_ != null; }
    }
    /// <summary>Clears the value of the "animationName" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAnimationName() {
      animationName_ = null;
    }

    /// <summary>Field number for the "videoPath" field.</summary>
    public const int VideoPathFieldNumber = 4;
    private readonly static string VideoPathDefaultValue = "";

    private string videoPath_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string VideoPath {
      get { return videoPath_ ?? VideoPathDefaultValue; }
      set {
        videoPath_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "videoPath" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasVideoPath {
      get { return videoPath_ != null; }
    }
    /// <summary>Clears the value of the "videoPath" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearVideoPath() {
      videoPath_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as DanceCmdData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(DanceCmdData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (Cmd != other.Cmd) return false;
      if (AnimationName != other.AnimationName) return false;
      if (VideoPath != other.VideoPath) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasName) hash ^= Name.GetHashCode();
      if (HasCmd) hash ^= Cmd.GetHashCode();
      if (HasAnimationName) hash ^= AnimationName.GetHashCode();
      if (HasVideoPath) hash ^= VideoPath.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasName) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (HasCmd) {
        output.WriteRawTag(16);
        output.WriteInt32(Cmd);
      }
      if (HasAnimationName) {
        output.WriteRawTag(26);
        output.WriteString(AnimationName);
      }
      if (HasVideoPath) {
        output.WriteRawTag(34);
        output.WriteString(VideoPath);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasName) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (HasCmd) {
        output.WriteRawTag(16);
        output.WriteInt32(Cmd);
      }
      if (HasAnimationName) {
        output.WriteRawTag(26);
        output.WriteString(AnimationName);
      }
      if (HasVideoPath) {
        output.WriteRawTag(34);
        output.WriteString(VideoPath);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (HasCmd) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Cmd);
      }
      if (HasAnimationName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AnimationName);
      }
      if (HasVideoPath) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(VideoPath);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(DanceCmdData other) {
      if (other == null) {
        return;
      }
      if (other.HasName) {
        Name = other.Name;
      }
      if (other.HasCmd) {
        Cmd = other.Cmd;
      }
      if (other.HasAnimationName) {
        AnimationName = other.AnimationName;
      }
      if (other.HasVideoPath) {
        VideoPath = other.VideoPath;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 16: {
            Cmd = input.ReadInt32();
            break;
          }
          case 26: {
            AnimationName = input.ReadString();
            break;
          }
          case 34: {
            VideoPath = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 16: {
            Cmd = input.ReadInt32();
            break;
          }
          case 26: {
            AnimationName = input.ReadString();
            break;
          }
          case 34: {
            VideoPath = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class WavingStickData : pb::IMessage<WavingStickData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<WavingStickData> _parser = new pb::MessageParser<WavingStickData>(() => new WavingStickData());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<WavingStickData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HardCordGirlData.HardCordGirlDataClassReflection.Descriptor.MessageTypes[56]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public WavingStickData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public WavingStickData(WavingStickData other) : this() {
      _hasBits0 = other._hasBits0;
      playerId_ = other.playerId_;
      handId_ = other.handId_;
      colorIndex_ = other.colorIndex_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public WavingStickData Clone() {
      return new WavingStickData(this);
    }

    /// <summary>Field number for the "playerId" field.</summary>
    public const int PlayerIdFieldNumber = 1;
    private readonly static int PlayerIdDefaultValue = 0;

    private int playerId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int PlayerId {
      get { if ((_hasBits0 & 1) != 0) { return playerId_; } else { return PlayerIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        playerId_ = value;
      }
    }
    /// <summary>Gets whether the "playerId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPlayerId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "playerId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPlayerId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "handId" field.</summary>
    public const int HandIdFieldNumber = 2;
    private readonly static int HandIdDefaultValue = 0;

    private int handId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int HandId {
      get { if ((_hasBits0 & 2) != 0) { return handId_; } else { return HandIdDefaultValue; } }
      set {
        _hasBits0 |= 2;
        handId_ = value;
      }
    }
    /// <summary>Gets whether the "handId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasHandId {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "handId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearHandId() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "colorIndex" field.</summary>
    public const int ColorIndexFieldNumber = 3;
    private readonly static int ColorIndexDefaultValue = 0;

    private int colorIndex_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ColorIndex {
      get { if ((_hasBits0 & 4) != 0) { return colorIndex_; } else { return ColorIndexDefaultValue; } }
      set {
        _hasBits0 |= 4;
        colorIndex_ = value;
      }
    }
    /// <summary>Gets whether the "colorIndex" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasColorIndex {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "colorIndex" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearColorIndex() {
      _hasBits0 &= ~4;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as WavingStickData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(WavingStickData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlayerId != other.PlayerId) return false;
      if (HandId != other.HandId) return false;
      if (ColorIndex != other.ColorIndex) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasPlayerId) hash ^= PlayerId.GetHashCode();
      if (HasHandId) hash ^= HandId.GetHashCode();
      if (HasColorIndex) hash ^= ColorIndex.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasPlayerId) {
        output.WriteRawTag(8);
        output.WriteInt32(PlayerId);
      }
      if (HasHandId) {
        output.WriteRawTag(16);
        output.WriteInt32(HandId);
      }
      if (HasColorIndex) {
        output.WriteRawTag(24);
        output.WriteInt32(ColorIndex);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasPlayerId) {
        output.WriteRawTag(8);
        output.WriteInt32(PlayerId);
      }
      if (HasHandId) {
        output.WriteRawTag(16);
        output.WriteInt32(HandId);
      }
      if (HasColorIndex) {
        output.WriteRawTag(24);
        output.WriteInt32(ColorIndex);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasPlayerId) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PlayerId);
      }
      if (HasHandId) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(HandId);
      }
      if (HasColorIndex) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ColorIndex);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(WavingStickData other) {
      if (other == null) {
        return;
      }
      if (other.HasPlayerId) {
        PlayerId = other.PlayerId;
      }
      if (other.HasHandId) {
        HandId = other.HandId;
      }
      if (other.HasColorIndex) {
        ColorIndex = other.ColorIndex;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PlayerId = input.ReadInt32();
            break;
          }
          case 16: {
            HandId = input.ReadInt32();
            break;
          }
          case 24: {
            ColorIndex = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            PlayerId = input.ReadInt32();
            break;
          }
          case 16: {
            HandId = input.ReadInt32();
            break;
          }
          case 24: {
            ColorIndex = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CtrlFullBodyPlayerData : pb::IMessage<CtrlFullBodyPlayerData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CtrlFullBodyPlayerData> _parser = new pb::MessageParser<CtrlFullBodyPlayerData>(() => new CtrlFullBodyPlayerData());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CtrlFullBodyPlayerData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HardCordGirlData.HardCordGirlDataClassReflection.Descriptor.MessageTypes[57]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CtrlFullBodyPlayerData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CtrlFullBodyPlayerData(CtrlFullBodyPlayerData other) : this() {
      _hasBits0 = other._hasBits0;
      sendPlayerId_ = other.sendPlayerId_;
      fullBodyPlayerId_ = other.fullBodyPlayerId_;
      appearedState_ = other.appearedState_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CtrlFullBodyPlayerData Clone() {
      return new CtrlFullBodyPlayerData(this);
    }

    /// <summary>Field number for the "sendPlayerId" field.</summary>
    public const int SendPlayerIdFieldNumber = 1;
    private readonly static int SendPlayerIdDefaultValue = 0;

    private int sendPlayerId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int SendPlayerId {
      get { if ((_hasBits0 & 1) != 0) { return sendPlayerId_; } else { return SendPlayerIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        sendPlayerId_ = value;
      }
    }
    /// <summary>Gets whether the "sendPlayerId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSendPlayerId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "sendPlayerId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSendPlayerId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "fullBodyPlayerId" field.</summary>
    public const int FullBodyPlayerIdFieldNumber = 2;
    private readonly static int FullBodyPlayerIdDefaultValue = 0;

    private int fullBodyPlayerId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int FullBodyPlayerId {
      get { if ((_hasBits0 & 2) != 0) { return fullBodyPlayerId_; } else { return FullBodyPlayerIdDefaultValue; } }
      set {
        _hasBits0 |= 2;
        fullBodyPlayerId_ = value;
      }
    }
    /// <summary>Gets whether the "fullBodyPlayerId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasFullBodyPlayerId {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "fullBodyPlayerId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearFullBodyPlayerId() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "appearedState" field.</summary>
    public const int AppearedStateFieldNumber = 3;
    private readonly static int AppearedStateDefaultValue = 0;

    private int appearedState_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int AppearedState {
      get { if ((_hasBits0 & 4) != 0) { return appearedState_; } else { return AppearedStateDefaultValue; } }
      set {
        _hasBits0 |= 4;
        appearedState_ = value;
      }
    }
    /// <summary>Gets whether the "appearedState" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAppearedState {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "appearedState" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAppearedState() {
      _hasBits0 &= ~4;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CtrlFullBodyPlayerData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CtrlFullBodyPlayerData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SendPlayerId != other.SendPlayerId) return false;
      if (FullBodyPlayerId != other.FullBodyPlayerId) return false;
      if (AppearedState != other.AppearedState) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasSendPlayerId) hash ^= SendPlayerId.GetHashCode();
      if (HasFullBodyPlayerId) hash ^= FullBodyPlayerId.GetHashCode();
      if (HasAppearedState) hash ^= AppearedState.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasSendPlayerId) {
        output.WriteRawTag(8);
        output.WriteInt32(SendPlayerId);
      }
      if (HasFullBodyPlayerId) {
        output.WriteRawTag(16);
        output.WriteInt32(FullBodyPlayerId);
      }
      if (HasAppearedState) {
        output.WriteRawTag(24);
        output.WriteInt32(AppearedState);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasSendPlayerId) {
        output.WriteRawTag(8);
        output.WriteInt32(SendPlayerId);
      }
      if (HasFullBodyPlayerId) {
        output.WriteRawTag(16);
        output.WriteInt32(FullBodyPlayerId);
      }
      if (HasAppearedState) {
        output.WriteRawTag(24);
        output.WriteInt32(AppearedState);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasSendPlayerId) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SendPlayerId);
      }
      if (HasFullBodyPlayerId) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(FullBodyPlayerId);
      }
      if (HasAppearedState) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AppearedState);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CtrlFullBodyPlayerData other) {
      if (other == null) {
        return;
      }
      if (other.HasSendPlayerId) {
        SendPlayerId = other.SendPlayerId;
      }
      if (other.HasFullBodyPlayerId) {
        FullBodyPlayerId = other.FullBodyPlayerId;
      }
      if (other.HasAppearedState) {
        AppearedState = other.AppearedState;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            SendPlayerId = input.ReadInt32();
            break;
          }
          case 16: {
            FullBodyPlayerId = input.ReadInt32();
            break;
          }
          case 24: {
            AppearedState = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            SendPlayerId = input.ReadInt32();
            break;
          }
          case 16: {
            FullBodyPlayerId = input.ReadInt32();
            break;
          }
          case 24: {
            AppearedState = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class FullBodyPlayerActionData : pb::IMessage<FullBodyPlayerActionData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<FullBodyPlayerActionData> _parser = new pb::MessageParser<FullBodyPlayerActionData>(() => new FullBodyPlayerActionData());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<FullBodyPlayerActionData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HardCordGirlData.HardCordGirlDataClassReflection.Descriptor.MessageTypes[58]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FullBodyPlayerActionData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FullBodyPlayerActionData(FullBodyPlayerActionData other) : this() {
      _hasBits0 = other._hasBits0;
      sendPlayerId_ = other.sendPlayerId_;
      fullBodyPlayerId_ = other.fullBodyPlayerId_;
      actionType_ = other.actionType_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FullBodyPlayerActionData Clone() {
      return new FullBodyPlayerActionData(this);
    }

    /// <summary>Field number for the "sendPlayerId" field.</summary>
    public const int SendPlayerIdFieldNumber = 1;
    private readonly static int SendPlayerIdDefaultValue = 0;

    private int sendPlayerId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int SendPlayerId {
      get { if ((_hasBits0 & 1) != 0) { return sendPlayerId_; } else { return SendPlayerIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        sendPlayerId_ = value;
      }
    }
    /// <summary>Gets whether the "sendPlayerId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSendPlayerId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "sendPlayerId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSendPlayerId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "fullBodyPlayerId" field.</summary>
    public const int FullBodyPlayerIdFieldNumber = 2;
    private readonly static int FullBodyPlayerIdDefaultValue = 0;

    private int fullBodyPlayerId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int FullBodyPlayerId {
      get { if ((_hasBits0 & 2) != 0) { return fullBodyPlayerId_; } else { return FullBodyPlayerIdDefaultValue; } }
      set {
        _hasBits0 |= 2;
        fullBodyPlayerId_ = value;
      }
    }
    /// <summary>Gets whether the "fullBodyPlayerId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasFullBodyPlayerId {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "fullBodyPlayerId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearFullBodyPlayerId() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "actionType" field.</summary>
    public const int ActionTypeFieldNumber = 3;
    private readonly static int ActionTypeDefaultValue = 0;

    private int actionType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ActionType {
      get { if ((_hasBits0 & 4) != 0) { return actionType_; } else { return ActionTypeDefaultValue; } }
      set {
        _hasBits0 |= 4;
        actionType_ = value;
      }
    }
    /// <summary>Gets whether the "actionType" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasActionType {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "actionType" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearActionType() {
      _hasBits0 &= ~4;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as FullBodyPlayerActionData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(FullBodyPlayerActionData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SendPlayerId != other.SendPlayerId) return false;
      if (FullBodyPlayerId != other.FullBodyPlayerId) return false;
      if (ActionType != other.ActionType) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasSendPlayerId) hash ^= SendPlayerId.GetHashCode();
      if (HasFullBodyPlayerId) hash ^= FullBodyPlayerId.GetHashCode();
      if (HasActionType) hash ^= ActionType.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasSendPlayerId) {
        output.WriteRawTag(8);
        output.WriteInt32(SendPlayerId);
      }
      if (HasFullBodyPlayerId) {
        output.WriteRawTag(16);
        output.WriteInt32(FullBodyPlayerId);
      }
      if (HasActionType) {
        output.WriteRawTag(24);
        output.WriteInt32(ActionType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasSendPlayerId) {
        output.WriteRawTag(8);
        output.WriteInt32(SendPlayerId);
      }
      if (HasFullBodyPlayerId) {
        output.WriteRawTag(16);
        output.WriteInt32(FullBodyPlayerId);
      }
      if (HasActionType) {
        output.WriteRawTag(24);
        output.WriteInt32(ActionType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasSendPlayerId) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SendPlayerId);
      }
      if (HasFullBodyPlayerId) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(FullBodyPlayerId);
      }
      if (HasActionType) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ActionType);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(FullBodyPlayerActionData other) {
      if (other == null) {
        return;
      }
      if (other.HasSendPlayerId) {
        SendPlayerId = other.SendPlayerId;
      }
      if (other.HasFullBodyPlayerId) {
        FullBodyPlayerId = other.FullBodyPlayerId;
      }
      if (other.HasActionType) {
        ActionType = other.ActionType;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            SendPlayerId = input.ReadInt32();
            break;
          }
          case 16: {
            FullBodyPlayerId = input.ReadInt32();
            break;
          }
          case 24: {
            ActionType = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            SendPlayerId = input.ReadInt32();
            break;
          }
          case 16: {
            FullBodyPlayerId = input.ReadInt32();
            break;
          }
          case 24: {
            ActionType = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class PlayerActionData : pb::IMessage<PlayerActionData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PlayerActionData> _parser = new pb::MessageParser<PlayerActionData>(() => new PlayerActionData());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PlayerActionData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HardCordGirlData.HardCordGirlDataClassReflection.Descriptor.MessageTypes[59]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PlayerActionData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PlayerActionData(PlayerActionData other) : this() {
      _hasBits0 = other._hasBits0;
      sendPlayerId_ = other.sendPlayerId_;
      actionType_ = other.actionType_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PlayerActionData Clone() {
      return new PlayerActionData(this);
    }

    /// <summary>Field number for the "sendPlayerId" field.</summary>
    public const int SendPlayerIdFieldNumber = 1;
    private readonly static int SendPlayerIdDefaultValue = 0;

    private int sendPlayerId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int SendPlayerId {
      get { if ((_hasBits0 & 1) != 0) { return sendPlayerId_; } else { return SendPlayerIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        sendPlayerId_ = value;
      }
    }
    /// <summary>Gets whether the "sendPlayerId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSendPlayerId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "sendPlayerId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSendPlayerId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "actionType" field.</summary>
    public const int ActionTypeFieldNumber = 2;
    private readonly static int ActionTypeDefaultValue = 0;

    private int actionType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ActionType {
      get { if ((_hasBits0 & 2) != 0) { return actionType_; } else { return ActionTypeDefaultValue; } }
      set {
        _hasBits0 |= 2;
        actionType_ = value;
      }
    }
    /// <summary>Gets whether the "actionType" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasActionType {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "actionType" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearActionType() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PlayerActionData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PlayerActionData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SendPlayerId != other.SendPlayerId) return false;
      if (ActionType != other.ActionType) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasSendPlayerId) hash ^= SendPlayerId.GetHashCode();
      if (HasActionType) hash ^= ActionType.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasSendPlayerId) {
        output.WriteRawTag(8);
        output.WriteInt32(SendPlayerId);
      }
      if (HasActionType) {
        output.WriteRawTag(16);
        output.WriteInt32(ActionType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasSendPlayerId) {
        output.WriteRawTag(8);
        output.WriteInt32(SendPlayerId);
      }
      if (HasActionType) {
        output.WriteRawTag(16);
        output.WriteInt32(ActionType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasSendPlayerId) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SendPlayerId);
      }
      if (HasActionType) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ActionType);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PlayerActionData other) {
      if (other == null) {
        return;
      }
      if (other.HasSendPlayerId) {
        SendPlayerId = other.SendPlayerId;
      }
      if (other.HasActionType) {
        ActionType = other.ActionType;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            SendPlayerId = input.ReadInt32();
            break;
          }
          case 16: {
            ActionType = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            SendPlayerId = input.ReadInt32();
            break;
          }
          case 16: {
            ActionType = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class GunOwnerData : pb::IMessage<GunOwnerData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GunOwnerData> _parser = new pb::MessageParser<GunOwnerData>(() => new GunOwnerData());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GunOwnerData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HardCordGirlData.HardCordGirlDataClassReflection.Descriptor.MessageTypes[60]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GunOwnerData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GunOwnerData(GunOwnerData other) : this() {
      _hasBits0 = other._hasBits0;
      playerId_ = other.playerId_;
      handType_ = other.handType_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GunOwnerData Clone() {
      return new GunOwnerData(this);
    }

    /// <summary>Field number for the "playerId" field.</summary>
    public const int PlayerIdFieldNumber = 1;
    private readonly static int PlayerIdDefaultValue = 0;

    private int playerId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int PlayerId {
      get { if ((_hasBits0 & 1) != 0) { return playerId_; } else { return PlayerIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        playerId_ = value;
      }
    }
    /// <summary>Gets whether the "playerId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPlayerId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "playerId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPlayerId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "handType" field.</summary>
    public const int HandTypeFieldNumber = 2;
    private readonly static int HandTypeDefaultValue = 0;

    private int handType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int HandType {
      get { if ((_hasBits0 & 2) != 0) { return handType_; } else { return HandTypeDefaultValue; } }
      set {
        _hasBits0 |= 2;
        handType_ = value;
      }
    }
    /// <summary>Gets whether the "handType" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasHandType {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "handType" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearHandType() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GunOwnerData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GunOwnerData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlayerId != other.PlayerId) return false;
      if (HandType != other.HandType) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasPlayerId) hash ^= PlayerId.GetHashCode();
      if (HasHandType) hash ^= HandType.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasPlayerId) {
        output.WriteRawTag(8);
        output.WriteInt32(PlayerId);
      }
      if (HasHandType) {
        output.WriteRawTag(16);
        output.WriteInt32(HandType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasPlayerId) {
        output.WriteRawTag(8);
        output.WriteInt32(PlayerId);
      }
      if (HasHandType) {
        output.WriteRawTag(16);
        output.WriteInt32(HandType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasPlayerId) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PlayerId);
      }
      if (HasHandType) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(HandType);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GunOwnerData other) {
      if (other == null) {
        return;
      }
      if (other.HasPlayerId) {
        PlayerId = other.PlayerId;
      }
      if (other.HasHandType) {
        HandType = other.HandType;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PlayerId = input.ReadInt32();
            break;
          }
          case 16: {
            HandType = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            PlayerId = input.ReadInt32();
            break;
          }
          case 16: {
            HandType = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class GunPosData : pb::IMessage<GunPosData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GunPosData> _parser = new pb::MessageParser<GunPosData>(() => new GunPosData());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GunPosData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HardCordGirlData.HardCordGirlDataClassReflection.Descriptor.MessageTypes[61]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GunPosData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GunPosData(GunPosData other) : this() {
      _hasBits0 = other._hasBits0;
      gunType_ = other.gunType_;
      curBullets_ = other.curBullets_;
      pos_ = other.pos_ != null ? other.pos_.Clone() : null;
      euler_ = other.euler_ != null ? other.euler_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GunPosData Clone() {
      return new GunPosData(this);
    }

    /// <summary>Field number for the "gunType" field.</summary>
    public const int GunTypeFieldNumber = 1;
    private readonly static int GunTypeDefaultValue = 0;

    private int gunType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int GunType {
      get { if ((_hasBits0 & 1) != 0) { return gunType_; } else { return GunTypeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        gunType_ = value;
      }
    }
    /// <summary>Gets whether the "gunType" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGunType {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "gunType" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGunType() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "curBullets" field.</summary>
    public const int CurBulletsFieldNumber = 2;
    private readonly static int CurBulletsDefaultValue = 0;

    private int curBullets_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CurBullets {
      get { if ((_hasBits0 & 2) != 0) { return curBullets_; } else { return CurBulletsDefaultValue; } }
      set {
        _hasBits0 |= 2;
        curBullets_ = value;
      }
    }
    /// <summary>Gets whether the "curBullets" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCurBullets {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "curBullets" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCurBullets() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "pos" field.</summary>
    public const int PosFieldNumber = 3;
    private global::HardCordGirlData.VECTOR3 pos_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::HardCordGirlData.VECTOR3 Pos {
      get { return pos_; }
      set {
        pos_ = value;
      }
    }

    /// <summary>Field number for the "euler" field.</summary>
    public const int EulerFieldNumber = 4;
    private global::HardCordGirlData.VECTOR3 euler_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::HardCordGirlData.VECTOR3 Euler {
      get { return euler_; }
      set {
        euler_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GunPosData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GunPosData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (GunType != other.GunType) return false;
      if (CurBullets != other.CurBullets) return false;
      if (!object.Equals(Pos, other.Pos)) return false;
      if (!object.Equals(Euler, other.Euler)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasGunType) hash ^= GunType.GetHashCode();
      if (HasCurBullets) hash ^= CurBullets.GetHashCode();
      if (pos_ != null) hash ^= Pos.GetHashCode();
      if (euler_ != null) hash ^= Euler.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasGunType) {
        output.WriteRawTag(8);
        output.WriteInt32(GunType);
      }
      if (HasCurBullets) {
        output.WriteRawTag(16);
        output.WriteInt32(CurBullets);
      }
      if (pos_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Pos);
      }
      if (euler_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Euler);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasGunType) {
        output.WriteRawTag(8);
        output.WriteInt32(GunType);
      }
      if (HasCurBullets) {
        output.WriteRawTag(16);
        output.WriteInt32(CurBullets);
      }
      if (pos_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Pos);
      }
      if (euler_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Euler);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasGunType) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(GunType);
      }
      if (HasCurBullets) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CurBullets);
      }
      if (pos_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Pos);
      }
      if (euler_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Euler);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GunPosData other) {
      if (other == null) {
        return;
      }
      if (other.HasGunType) {
        GunType = other.GunType;
      }
      if (other.HasCurBullets) {
        CurBullets = other.CurBullets;
      }
      if (other.pos_ != null) {
        if (pos_ == null) {
          Pos = new global::HardCordGirlData.VECTOR3();
        }
        Pos.MergeFrom(other.Pos);
      }
      if (other.euler_ != null) {
        if (euler_ == null) {
          Euler = new global::HardCordGirlData.VECTOR3();
        }
        Euler.MergeFrom(other.Euler);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            GunType = input.ReadInt32();
            break;
          }
          case 16: {
            CurBullets = input.ReadInt32();
            break;
          }
          case 26: {
            if (pos_ == null) {
              Pos = new global::HardCordGirlData.VECTOR3();
            }
            input.ReadMessage(Pos);
            break;
          }
          case 34: {
            if (euler_ == null) {
              Euler = new global::HardCordGirlData.VECTOR3();
            }
            input.ReadMessage(Euler);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            GunType = input.ReadInt32();
            break;
          }
          case 16: {
            CurBullets = input.ReadInt32();
            break;
          }
          case 26: {
            if (pos_ == null) {
              Pos = new global::HardCordGirlData.VECTOR3();
            }
            input.ReadMessage(Pos);
            break;
          }
          case 34: {
            if (euler_ == null) {
              Euler = new global::HardCordGirlData.VECTOR3();
            }
            input.ReadMessage(Euler);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SpawnGunData : pb::IMessage<SpawnGunData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SpawnGunData> _parser = new pb::MessageParser<SpawnGunData>(() => new SpawnGunData());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SpawnGunData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HardCordGirlData.HardCordGirlDataClassReflection.Descriptor.MessageTypes[62]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SpawnGunData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SpawnGunData(SpawnGunData other) : this() {
      _hasBits0 = other._hasBits0;
      playerId_ = other.playerId_;
      handType_ = other.handType_;
      objIds_ = other.objIds_.Clone();
      gunType_ = other.gunType_;
      isBound_ = other.isBound_;
      isUnlimited_ = other.isUnlimited_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SpawnGunData Clone() {
      return new SpawnGunData(this);
    }

    /// <summary>Field number for the "playerId" field.</summary>
    public const int PlayerIdFieldNumber = 1;
    private readonly static int PlayerIdDefaultValue = 0;

    private int playerId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int PlayerId {
      get { if ((_hasBits0 & 1) != 0) { return playerId_; } else { return PlayerIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        playerId_ = value;
      }
    }
    /// <summary>Gets whether the "playerId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPlayerId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "playerId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPlayerId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "handType" field.</summary>
    public const int HandTypeFieldNumber = 2;
    private readonly static int HandTypeDefaultValue = 0;

    private int handType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int HandType {
      get { if ((_hasBits0 & 2) != 0) { return handType_; } else { return HandTypeDefaultValue; } }
      set {
        _hasBits0 |= 2;
        handType_ = value;
      }
    }
    /// <summary>Gets whether the "handType" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasHandType {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "handType" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearHandType() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "objIds" field.</summary>
    public const int ObjIdsFieldNumber = 3;
    private static readonly pb::FieldCodec<int> _repeated_objIds_codec
        = pb::FieldCodec.ForInt32(24);
    private readonly pbc::RepeatedField<int> objIds_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<int> ObjIds {
      get { return objIds_; }
    }

    /// <summary>Field number for the "gunType" field.</summary>
    public const int GunTypeFieldNumber = 4;
    private readonly static int GunTypeDefaultValue = 0;

    private int gunType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int GunType {
      get { if ((_hasBits0 & 4) != 0) { return gunType_; } else { return GunTypeDefaultValue; } }
      set {
        _hasBits0 |= 4;
        gunType_ = value;
      }
    }
    /// <summary>Gets whether the "gunType" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGunType {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "gunType" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGunType() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "isBound" field.</summary>
    public const int IsBoundFieldNumber = 5;
    private readonly static bool IsBoundDefaultValue = false;

    private bool isBound_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsBound {
      get { if ((_hasBits0 & 8) != 0) { return isBound_; } else { return IsBoundDefaultValue; } }
      set {
        _hasBits0 |= 8;
        isBound_ = value;
      }
    }
    /// <summary>Gets whether the "isBound" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIsBound {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "isBound" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIsBound() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "isUnlimited" field.</summary>
    public const int IsUnlimitedFieldNumber = 6;
    private readonly static bool IsUnlimitedDefaultValue = false;

    private bool isUnlimited_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsUnlimited {
      get { if ((_hasBits0 & 16) != 0) { return isUnlimited_; } else { return IsUnlimitedDefaultValue; } }
      set {
        _hasBits0 |= 16;
        isUnlimited_ = value;
      }
    }
    /// <summary>Gets whether the "isUnlimited" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIsUnlimited {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "isUnlimited" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIsUnlimited() {
      _hasBits0 &= ~16;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SpawnGunData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SpawnGunData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlayerId != other.PlayerId) return false;
      if (HandType != other.HandType) return false;
      if(!objIds_.Equals(other.objIds_)) return false;
      if (GunType != other.GunType) return false;
      if (IsBound != other.IsBound) return false;
      if (IsUnlimited != other.IsUnlimited) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasPlayerId) hash ^= PlayerId.GetHashCode();
      if (HasHandType) hash ^= HandType.GetHashCode();
      hash ^= objIds_.GetHashCode();
      if (HasGunType) hash ^= GunType.GetHashCode();
      if (HasIsBound) hash ^= IsBound.GetHashCode();
      if (HasIsUnlimited) hash ^= IsUnlimited.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasPlayerId) {
        output.WriteRawTag(8);
        output.WriteInt32(PlayerId);
      }
      if (HasHandType) {
        output.WriteRawTag(16);
        output.WriteInt32(HandType);
      }
      objIds_.WriteTo(output, _repeated_objIds_codec);
      if (HasGunType) {
        output.WriteRawTag(32);
        output.WriteInt32(GunType);
      }
      if (HasIsBound) {
        output.WriteRawTag(40);
        output.WriteBool(IsBound);
      }
      if (HasIsUnlimited) {
        output.WriteRawTag(48);
        output.WriteBool(IsUnlimited);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasPlayerId) {
        output.WriteRawTag(8);
        output.WriteInt32(PlayerId);
      }
      if (HasHandType) {
        output.WriteRawTag(16);
        output.WriteInt32(HandType);
      }
      objIds_.WriteTo(ref output, _repeated_objIds_codec);
      if (HasGunType) {
        output.WriteRawTag(32);
        output.WriteInt32(GunType);
      }
      if (HasIsBound) {
        output.WriteRawTag(40);
        output.WriteBool(IsBound);
      }
      if (HasIsUnlimited) {
        output.WriteRawTag(48);
        output.WriteBool(IsUnlimited);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasPlayerId) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PlayerId);
      }
      if (HasHandType) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(HandType);
      }
      size += objIds_.CalculateSize(_repeated_objIds_codec);
      if (HasGunType) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(GunType);
      }
      if (HasIsBound) {
        size += 1 + 1;
      }
      if (HasIsUnlimited) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SpawnGunData other) {
      if (other == null) {
        return;
      }
      if (other.HasPlayerId) {
        PlayerId = other.PlayerId;
      }
      if (other.HasHandType) {
        HandType = other.HandType;
      }
      objIds_.Add(other.objIds_);
      if (other.HasGunType) {
        GunType = other.GunType;
      }
      if (other.HasIsBound) {
        IsBound = other.IsBound;
      }
      if (other.HasIsUnlimited) {
        IsUnlimited = other.IsUnlimited;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PlayerId = input.ReadInt32();
            break;
          }
          case 16: {
            HandType = input.ReadInt32();
            break;
          }
          case 26:
          case 24: {
            objIds_.AddEntriesFrom(input, _repeated_objIds_codec);
            break;
          }
          case 32: {
            GunType = input.ReadInt32();
            break;
          }
          case 40: {
            IsBound = input.ReadBool();
            break;
          }
          case 48: {
            IsUnlimited = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            PlayerId = input.ReadInt32();
            break;
          }
          case 16: {
            HandType = input.ReadInt32();
            break;
          }
          case 26:
          case 24: {
            objIds_.AddEntriesFrom(ref input, _repeated_objIds_codec);
            break;
          }
          case 32: {
            GunType = input.ReadInt32();
            break;
          }
          case 40: {
            IsBound = input.ReadBool();
            break;
          }
          case 48: {
            IsUnlimited = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class GrabGunData : pb::IMessage<GrabGunData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GrabGunData> _parser = new pb::MessageParser<GrabGunData>(() => new GrabGunData());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GrabGunData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HardCordGirlData.HardCordGirlDataClassReflection.Descriptor.MessageTypes[63]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GrabGunData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GrabGunData(GrabGunData other) : this() {
      _hasBits0 = other._hasBits0;
      playerId_ = other.playerId_;
      handType_ = other.handType_;
      gunId_ = other.gunId_;
      gunModule_ = other.gunModule_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GrabGunData Clone() {
      return new GrabGunData(this);
    }

    /// <summary>Field number for the "playerId" field.</summary>
    public const int PlayerIdFieldNumber = 1;
    private readonly static int PlayerIdDefaultValue = 0;

    private int playerId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int PlayerId {
      get { if ((_hasBits0 & 1) != 0) { return playerId_; } else { return PlayerIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        playerId_ = value;
      }
    }
    /// <summary>Gets whether the "playerId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPlayerId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "playerId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPlayerId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "handType" field.</summary>
    public const int HandTypeFieldNumber = 2;
    private readonly static int HandTypeDefaultValue = 0;

    private int handType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int HandType {
      get { if ((_hasBits0 & 2) != 0) { return handType_; } else { return HandTypeDefaultValue; } }
      set {
        _hasBits0 |= 2;
        handType_ = value;
      }
    }
    /// <summary>Gets whether the "handType" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasHandType {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "handType" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearHandType() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "gunId" field.</summary>
    public const int GunIdFieldNumber = 3;
    private readonly static int GunIdDefaultValue = 0;

    private int gunId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int GunId {
      get { if ((_hasBits0 & 4) != 0) { return gunId_; } else { return GunIdDefaultValue; } }
      set {
        _hasBits0 |= 4;
        gunId_ = value;
      }
    }
    /// <summary>Gets whether the "gunId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGunId {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "gunId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGunId() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "gunModule" field.</summary>
    public const int GunModuleFieldNumber = 4;
    private readonly static int GunModuleDefaultValue = 0;

    private int gunModule_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int GunModule {
      get { if ((_hasBits0 & 8) != 0) { return gunModule_; } else { return GunModuleDefaultValue; } }
      set {
        _hasBits0 |= 8;
        gunModule_ = value;
      }
    }
    /// <summary>Gets whether the "gunModule" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGunModule {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "gunModule" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGunModule() {
      _hasBits0 &= ~8;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GrabGunData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GrabGunData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlayerId != other.PlayerId) return false;
      if (HandType != other.HandType) return false;
      if (GunId != other.GunId) return false;
      if (GunModule != other.GunModule) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasPlayerId) hash ^= PlayerId.GetHashCode();
      if (HasHandType) hash ^= HandType.GetHashCode();
      if (HasGunId) hash ^= GunId.GetHashCode();
      if (HasGunModule) hash ^= GunModule.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasPlayerId) {
        output.WriteRawTag(8);
        output.WriteInt32(PlayerId);
      }
      if (HasHandType) {
        output.WriteRawTag(16);
        output.WriteInt32(HandType);
      }
      if (HasGunId) {
        output.WriteRawTag(24);
        output.WriteInt32(GunId);
      }
      if (HasGunModule) {
        output.WriteRawTag(32);
        output.WriteInt32(GunModule);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasPlayerId) {
        output.WriteRawTag(8);
        output.WriteInt32(PlayerId);
      }
      if (HasHandType) {
        output.WriteRawTag(16);
        output.WriteInt32(HandType);
      }
      if (HasGunId) {
        output.WriteRawTag(24);
        output.WriteInt32(GunId);
      }
      if (HasGunModule) {
        output.WriteRawTag(32);
        output.WriteInt32(GunModule);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasPlayerId) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PlayerId);
      }
      if (HasHandType) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(HandType);
      }
      if (HasGunId) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(GunId);
      }
      if (HasGunModule) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(GunModule);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GrabGunData other) {
      if (other == null) {
        return;
      }
      if (other.HasPlayerId) {
        PlayerId = other.PlayerId;
      }
      if (other.HasHandType) {
        HandType = other.HandType;
      }
      if (other.HasGunId) {
        GunId = other.GunId;
      }
      if (other.HasGunModule) {
        GunModule = other.GunModule;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PlayerId = input.ReadInt32();
            break;
          }
          case 16: {
            HandType = input.ReadInt32();
            break;
          }
          case 24: {
            GunId = input.ReadInt32();
            break;
          }
          case 32: {
            GunModule = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            PlayerId = input.ReadInt32();
            break;
          }
          case 16: {
            HandType = input.ReadInt32();
            break;
          }
          case 24: {
            GunId = input.ReadInt32();
            break;
          }
          case 32: {
            GunModule = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class UnGrabGunData : pb::IMessage<UnGrabGunData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UnGrabGunData> _parser = new pb::MessageParser<UnGrabGunData>(() => new UnGrabGunData());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<UnGrabGunData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HardCordGirlData.HardCordGirlDataClassReflection.Descriptor.MessageTypes[64]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UnGrabGunData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UnGrabGunData(UnGrabGunData other) : this() {
      _hasBits0 = other._hasBits0;
      playerId_ = other.playerId_;
      handType_ = other.handType_;
      gunId_ = other.gunId_;
      gunModule_ = other.gunModule_;
      velocity_ = other.velocity_ != null ? other.velocity_.Clone() : null;
      angular_ = other.angular_ != null ? other.angular_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UnGrabGunData Clone() {
      return new UnGrabGunData(this);
    }

    /// <summary>Field number for the "playerId" field.</summary>
    public const int PlayerIdFieldNumber = 1;
    private readonly static int PlayerIdDefaultValue = 0;

    private int playerId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int PlayerId {
      get { if ((_hasBits0 & 1) != 0) { return playerId_; } else { return PlayerIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        playerId_ = value;
      }
    }
    /// <summary>Gets whether the "playerId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPlayerId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "playerId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPlayerId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "handType" field.</summary>
    public const int HandTypeFieldNumber = 2;
    private readonly static int HandTypeDefaultValue = 0;

    private int handType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int HandType {
      get { if ((_hasBits0 & 2) != 0) { return handType_; } else { return HandTypeDefaultValue; } }
      set {
        _hasBits0 |= 2;
        handType_ = value;
      }
    }
    /// <summary>Gets whether the "handType" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasHandType {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "handType" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearHandType() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "gunId" field.</summary>
    public const int GunIdFieldNumber = 3;
    private readonly static int GunIdDefaultValue = 0;

    private int gunId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int GunId {
      get { if ((_hasBits0 & 4) != 0) { return gunId_; } else { return GunIdDefaultValue; } }
      set {
        _hasBits0 |= 4;
        gunId_ = value;
      }
    }
    /// <summary>Gets whether the "gunId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGunId {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "gunId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGunId() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "gunModule" field.</summary>
    public const int GunModuleFieldNumber = 4;
    private readonly static int GunModuleDefaultValue = 0;

    private int gunModule_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int GunModule {
      get { if ((_hasBits0 & 8) != 0) { return gunModule_; } else { return GunModuleDefaultValue; } }
      set {
        _hasBits0 |= 8;
        gunModule_ = value;
      }
    }
    /// <summary>Gets whether the "gunModule" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGunModule {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "gunModule" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGunModule() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "velocity" field.</summary>
    public const int VelocityFieldNumber = 5;
    private global::HardCordGirlData.VECTOR3 velocity_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::HardCordGirlData.VECTOR3 Velocity {
      get { return velocity_; }
      set {
        velocity_ = value;
      }
    }

    /// <summary>Field number for the "angular" field.</summary>
    public const int AngularFieldNumber = 6;
    private global::HardCordGirlData.VECTOR3 angular_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::HardCordGirlData.VECTOR3 Angular {
      get { return angular_; }
      set {
        angular_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as UnGrabGunData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(UnGrabGunData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlayerId != other.PlayerId) return false;
      if (HandType != other.HandType) return false;
      if (GunId != other.GunId) return false;
      if (GunModule != other.GunModule) return false;
      if (!object.Equals(Velocity, other.Velocity)) return false;
      if (!object.Equals(Angular, other.Angular)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasPlayerId) hash ^= PlayerId.GetHashCode();
      if (HasHandType) hash ^= HandType.GetHashCode();
      if (HasGunId) hash ^= GunId.GetHashCode();
      if (HasGunModule) hash ^= GunModule.GetHashCode();
      if (velocity_ != null) hash ^= Velocity.GetHashCode();
      if (angular_ != null) hash ^= Angular.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasPlayerId) {
        output.WriteRawTag(8);
        output.WriteInt32(PlayerId);
      }
      if (HasHandType) {
        output.WriteRawTag(16);
        output.WriteInt32(HandType);
      }
      if (HasGunId) {
        output.WriteRawTag(24);
        output.WriteInt32(GunId);
      }
      if (HasGunModule) {
        output.WriteRawTag(32);
        output.WriteInt32(GunModule);
      }
      if (velocity_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Velocity);
      }
      if (angular_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(Angular);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasPlayerId) {
        output.WriteRawTag(8);
        output.WriteInt32(PlayerId);
      }
      if (HasHandType) {
        output.WriteRawTag(16);
        output.WriteInt32(HandType);
      }
      if (HasGunId) {
        output.WriteRawTag(24);
        output.WriteInt32(GunId);
      }
      if (HasGunModule) {
        output.WriteRawTag(32);
        output.WriteInt32(GunModule);
      }
      if (velocity_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Velocity);
      }
      if (angular_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(Angular);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasPlayerId) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PlayerId);
      }
      if (HasHandType) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(HandType);
      }
      if (HasGunId) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(GunId);
      }
      if (HasGunModule) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(GunModule);
      }
      if (velocity_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Velocity);
      }
      if (angular_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Angular);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(UnGrabGunData other) {
      if (other == null) {
        return;
      }
      if (other.HasPlayerId) {
        PlayerId = other.PlayerId;
      }
      if (other.HasHandType) {
        HandType = other.HandType;
      }
      if (other.HasGunId) {
        GunId = other.GunId;
      }
      if (other.HasGunModule) {
        GunModule = other.GunModule;
      }
      if (other.velocity_ != null) {
        if (velocity_ == null) {
          Velocity = new global::HardCordGirlData.VECTOR3();
        }
        Velocity.MergeFrom(other.Velocity);
      }
      if (other.angular_ != null) {
        if (angular_ == null) {
          Angular = new global::HardCordGirlData.VECTOR3();
        }
        Angular.MergeFrom(other.Angular);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PlayerId = input.ReadInt32();
            break;
          }
          case 16: {
            HandType = input.ReadInt32();
            break;
          }
          case 24: {
            GunId = input.ReadInt32();
            break;
          }
          case 32: {
            GunModule = input.ReadInt32();
            break;
          }
          case 42: {
            if (velocity_ == null) {
              Velocity = new global::HardCordGirlData.VECTOR3();
            }
            input.ReadMessage(Velocity);
            break;
          }
          case 50: {
            if (angular_ == null) {
              Angular = new global::HardCordGirlData.VECTOR3();
            }
            input.ReadMessage(Angular);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            PlayerId = input.ReadInt32();
            break;
          }
          case 16: {
            HandType = input.ReadInt32();
            break;
          }
          case 24: {
            GunId = input.ReadInt32();
            break;
          }
          case 32: {
            GunModule = input.ReadInt32();
            break;
          }
          case 42: {
            if (velocity_ == null) {
              Velocity = new global::HardCordGirlData.VECTOR3();
            }
            input.ReadMessage(Velocity);
            break;
          }
          case 50: {
            if (angular_ == null) {
              Angular = new global::HardCordGirlData.VECTOR3();
            }
            input.ReadMessage(Angular);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class UseGunData : pb::IMessage<UseGunData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UseGunData> _parser = new pb::MessageParser<UseGunData>(() => new UseGunData());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<UseGunData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HardCordGirlData.HardCordGirlDataClassReflection.Descriptor.MessageTypes[65]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UseGunData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UseGunData(UseGunData other) : this() {
      _hasBits0 = other._hasBits0;
      gunId_ = other.gunId_;
      curBullet_ = other.curBullet_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UseGunData Clone() {
      return new UseGunData(this);
    }

    /// <summary>Field number for the "gunId" field.</summary>
    public const int GunIdFieldNumber = 1;
    private readonly static int GunIdDefaultValue = 0;

    private int gunId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int GunId {
      get { if ((_hasBits0 & 1) != 0) { return gunId_; } else { return GunIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        gunId_ = value;
      }
    }
    /// <summary>Gets whether the "gunId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGunId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "gunId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGunId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "curBullet" field.</summary>
    public const int CurBulletFieldNumber = 2;
    private readonly static int CurBulletDefaultValue = 0;

    private int curBullet_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CurBullet {
      get { if ((_hasBits0 & 2) != 0) { return curBullet_; } else { return CurBulletDefaultValue; } }
      set {
        _hasBits0 |= 2;
        curBullet_ = value;
      }
    }
    /// <summary>Gets whether the "curBullet" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCurBullet {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "curBullet" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCurBullet() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as UseGunData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(UseGunData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (GunId != other.GunId) return false;
      if (CurBullet != other.CurBullet) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasGunId) hash ^= GunId.GetHashCode();
      if (HasCurBullet) hash ^= CurBullet.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasGunId) {
        output.WriteRawTag(8);
        output.WriteInt32(GunId);
      }
      if (HasCurBullet) {
        output.WriteRawTag(16);
        output.WriteInt32(CurBullet);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasGunId) {
        output.WriteRawTag(8);
        output.WriteInt32(GunId);
      }
      if (HasCurBullet) {
        output.WriteRawTag(16);
        output.WriteInt32(CurBullet);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasGunId) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(GunId);
      }
      if (HasCurBullet) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CurBullet);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(UseGunData other) {
      if (other == null) {
        return;
      }
      if (other.HasGunId) {
        GunId = other.GunId;
      }
      if (other.HasCurBullet) {
        CurBullet = other.CurBullet;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            GunId = input.ReadInt32();
            break;
          }
          case 16: {
            CurBullet = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            GunId = input.ReadInt32();
            break;
          }
          case 16: {
            CurBullet = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SpawnMagazineData : pb::IMessage<SpawnMagazineData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SpawnMagazineData> _parser = new pb::MessageParser<SpawnMagazineData>(() => new SpawnMagazineData());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SpawnMagazineData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HardCordGirlData.HardCordGirlDataClassReflection.Descriptor.MessageTypes[66]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SpawnMagazineData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SpawnMagazineData(SpawnMagazineData other) : this() {
      _hasBits0 = other._hasBits0;
      playerId_ = other.playerId_;
      handType_ = other.handType_;
      gunType_ = other.gunType_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SpawnMagazineData Clone() {
      return new SpawnMagazineData(this);
    }

    /// <summary>Field number for the "playerId" field.</summary>
    public const int PlayerIdFieldNumber = 1;
    private readonly static int PlayerIdDefaultValue = 0;

    private int playerId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int PlayerId {
      get { if ((_hasBits0 & 1) != 0) { return playerId_; } else { return PlayerIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        playerId_ = value;
      }
    }
    /// <summary>Gets whether the "playerId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPlayerId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "playerId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPlayerId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "handType" field.</summary>
    public const int HandTypeFieldNumber = 2;
    private readonly static int HandTypeDefaultValue = 0;

    private int handType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int HandType {
      get { if ((_hasBits0 & 2) != 0) { return handType_; } else { return HandTypeDefaultValue; } }
      set {
        _hasBits0 |= 2;
        handType_ = value;
      }
    }
    /// <summary>Gets whether the "handType" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasHandType {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "handType" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearHandType() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "gunType" field.</summary>
    public const int GunTypeFieldNumber = 3;
    private readonly static int GunTypeDefaultValue = 0;

    private int gunType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int GunType {
      get { if ((_hasBits0 & 4) != 0) { return gunType_; } else { return GunTypeDefaultValue; } }
      set {
        _hasBits0 |= 4;
        gunType_ = value;
      }
    }
    /// <summary>Gets whether the "gunType" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGunType {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "gunType" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGunType() {
      _hasBits0 &= ~4;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SpawnMagazineData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SpawnMagazineData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlayerId != other.PlayerId) return false;
      if (HandType != other.HandType) return false;
      if (GunType != other.GunType) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasPlayerId) hash ^= PlayerId.GetHashCode();
      if (HasHandType) hash ^= HandType.GetHashCode();
      if (HasGunType) hash ^= GunType.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasPlayerId) {
        output.WriteRawTag(8);
        output.WriteInt32(PlayerId);
      }
      if (HasHandType) {
        output.WriteRawTag(16);
        output.WriteInt32(HandType);
      }
      if (HasGunType) {
        output.WriteRawTag(24);
        output.WriteInt32(GunType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasPlayerId) {
        output.WriteRawTag(8);
        output.WriteInt32(PlayerId);
      }
      if (HasHandType) {
        output.WriteRawTag(16);
        output.WriteInt32(HandType);
      }
      if (HasGunType) {
        output.WriteRawTag(24);
        output.WriteInt32(GunType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasPlayerId) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PlayerId);
      }
      if (HasHandType) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(HandType);
      }
      if (HasGunType) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(GunType);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SpawnMagazineData other) {
      if (other == null) {
        return;
      }
      if (other.HasPlayerId) {
        PlayerId = other.PlayerId;
      }
      if (other.HasHandType) {
        HandType = other.HandType;
      }
      if (other.HasGunType) {
        GunType = other.GunType;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PlayerId = input.ReadInt32();
            break;
          }
          case 16: {
            HandType = input.ReadInt32();
            break;
          }
          case 24: {
            GunType = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            PlayerId = input.ReadInt32();
            break;
          }
          case 16: {
            HandType = input.ReadInt32();
            break;
          }
          case 24: {
            GunType = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class LoadMagazineData : pb::IMessage<LoadMagazineData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LoadMagazineData> _parser = new pb::MessageParser<LoadMagazineData>(() => new LoadMagazineData());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<LoadMagazineData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HardCordGirlData.HardCordGirlDataClassReflection.Descriptor.MessageTypes[67]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LoadMagazineData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LoadMagazineData(LoadMagazineData other) : this() {
      _hasBits0 = other._hasBits0;
      playerId_ = other.playerId_;
      handType_ = other.handType_;
      gunId_ = other.gunId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LoadMagazineData Clone() {
      return new LoadMagazineData(this);
    }

    /// <summary>Field number for the "playerId" field.</summary>
    public const int PlayerIdFieldNumber = 1;
    private readonly static int PlayerIdDefaultValue = 0;

    private int playerId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int PlayerId {
      get { if ((_hasBits0 & 1) != 0) { return playerId_; } else { return PlayerIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        playerId_ = value;
      }
    }
    /// <summary>Gets whether the "playerId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPlayerId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "playerId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPlayerId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "handType" field.</summary>
    public const int HandTypeFieldNumber = 2;
    private readonly static int HandTypeDefaultValue = 0;

    private int handType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int HandType {
      get { if ((_hasBits0 & 2) != 0) { return handType_; } else { return HandTypeDefaultValue; } }
      set {
        _hasBits0 |= 2;
        handType_ = value;
      }
    }
    /// <summary>Gets whether the "handType" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasHandType {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "handType" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearHandType() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "gunId" field.</summary>
    public const int GunIdFieldNumber = 3;
    private readonly static int GunIdDefaultValue = 0;

    private int gunId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int GunId {
      get { if ((_hasBits0 & 4) != 0) { return gunId_; } else { return GunIdDefaultValue; } }
      set {
        _hasBits0 |= 4;
        gunId_ = value;
      }
    }
    /// <summary>Gets whether the "gunId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGunId {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "gunId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGunId() {
      _hasBits0 &= ~4;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as LoadMagazineData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(LoadMagazineData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlayerId != other.PlayerId) return false;
      if (HandType != other.HandType) return false;
      if (GunId != other.GunId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasPlayerId) hash ^= PlayerId.GetHashCode();
      if (HasHandType) hash ^= HandType.GetHashCode();
      if (HasGunId) hash ^= GunId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasPlayerId) {
        output.WriteRawTag(8);
        output.WriteInt32(PlayerId);
      }
      if (HasHandType) {
        output.WriteRawTag(16);
        output.WriteInt32(HandType);
      }
      if (HasGunId) {
        output.WriteRawTag(24);
        output.WriteInt32(GunId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasPlayerId) {
        output.WriteRawTag(8);
        output.WriteInt32(PlayerId);
      }
      if (HasHandType) {
        output.WriteRawTag(16);
        output.WriteInt32(HandType);
      }
      if (HasGunId) {
        output.WriteRawTag(24);
        output.WriteInt32(GunId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasPlayerId) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PlayerId);
      }
      if (HasHandType) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(HandType);
      }
      if (HasGunId) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(GunId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(LoadMagazineData other) {
      if (other == null) {
        return;
      }
      if (other.HasPlayerId) {
        PlayerId = other.PlayerId;
      }
      if (other.HasHandType) {
        HandType = other.HandType;
      }
      if (other.HasGunId) {
        GunId = other.GunId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PlayerId = input.ReadInt32();
            break;
          }
          case 16: {
            HandType = input.ReadInt32();
            break;
          }
          case 24: {
            GunId = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            PlayerId = input.ReadInt32();
            break;
          }
          case 16: {
            HandType = input.ReadInt32();
            break;
          }
          case 24: {
            GunId = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class PlayerGetDamageData : pb::IMessage<PlayerGetDamageData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PlayerGetDamageData> _parser = new pb::MessageParser<PlayerGetDamageData>(() => new PlayerGetDamageData());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PlayerGetDamageData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HardCordGirlData.HardCordGirlDataClassReflection.Descriptor.MessageTypes[68]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PlayerGetDamageData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PlayerGetDamageData(PlayerGetDamageData other) : this() {
      _hasBits0 = other._hasBits0;
      attackPlayerId_ = other.attackPlayerId_;
      getDamagePlayerId_ = other.getDamagePlayerId_;
      damage_ = other.damage_;
      gunType_ = other.gunType_;
      localPos_ = other.localPos_ != null ? other.localPos_.Clone() : null;
      hitNormal_ = other.hitNormal_ != null ? other.hitNormal_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PlayerGetDamageData Clone() {
      return new PlayerGetDamageData(this);
    }

    /// <summary>Field number for the "attackPlayerId" field.</summary>
    public const int AttackPlayerIdFieldNumber = 1;
    private readonly static int AttackPlayerIdDefaultValue = 0;

    private int attackPlayerId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int AttackPlayerId {
      get { if ((_hasBits0 & 1) != 0) { return attackPlayerId_; } else { return AttackPlayerIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        attackPlayerId_ = value;
      }
    }
    /// <summary>Gets whether the "attackPlayerId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAttackPlayerId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "attackPlayerId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAttackPlayerId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "getDamagePlayerId" field.</summary>
    public const int GetDamagePlayerIdFieldNumber = 2;
    private readonly static int GetDamagePlayerIdDefaultValue = 0;

    private int getDamagePlayerId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int GetDamagePlayerId {
      get { if ((_hasBits0 & 2) != 0) { return getDamagePlayerId_; } else { return GetDamagePlayerIdDefaultValue; } }
      set {
        _hasBits0 |= 2;
        getDamagePlayerId_ = value;
      }
    }
    /// <summary>Gets whether the "getDamagePlayerId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGetDamagePlayerId {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "getDamagePlayerId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGetDamagePlayerId() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "damage" field.</summary>
    public const int DamageFieldNumber = 3;
    private readonly static int DamageDefaultValue = 0;

    private int damage_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Damage {
      get { if ((_hasBits0 & 4) != 0) { return damage_; } else { return DamageDefaultValue; } }
      set {
        _hasBits0 |= 4;
        damage_ = value;
      }
    }
    /// <summary>Gets whether the "damage" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDamage {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "damage" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDamage() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "gunType" field.</summary>
    public const int GunTypeFieldNumber = 4;
    private readonly static int GunTypeDefaultValue = 0;

    private int gunType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int GunType {
      get { if ((_hasBits0 & 8) != 0) { return gunType_; } else { return GunTypeDefaultValue; } }
      set {
        _hasBits0 |= 8;
        gunType_ = value;
      }
    }
    /// <summary>Gets whether the "gunType" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGunType {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "gunType" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGunType() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "localPos" field.</summary>
    public const int LocalPosFieldNumber = 5;
    private global::HardCordGirlData.VECTOR3 localPos_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::HardCordGirlData.VECTOR3 LocalPos {
      get { return localPos_; }
      set {
        localPos_ = value;
      }
    }

    /// <summary>Field number for the "hitNormal" field.</summary>
    public const int HitNormalFieldNumber = 6;
    private global::HardCordGirlData.VECTOR3 hitNormal_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::HardCordGirlData.VECTOR3 HitNormal {
      get { return hitNormal_; }
      set {
        hitNormal_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PlayerGetDamageData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PlayerGetDamageData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AttackPlayerId != other.AttackPlayerId) return false;
      if (GetDamagePlayerId != other.GetDamagePlayerId) return false;
      if (Damage != other.Damage) return false;
      if (GunType != other.GunType) return false;
      if (!object.Equals(LocalPos, other.LocalPos)) return false;
      if (!object.Equals(HitNormal, other.HitNormal)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasAttackPlayerId) hash ^= AttackPlayerId.GetHashCode();
      if (HasGetDamagePlayerId) hash ^= GetDamagePlayerId.GetHashCode();
      if (HasDamage) hash ^= Damage.GetHashCode();
      if (HasGunType) hash ^= GunType.GetHashCode();
      if (localPos_ != null) hash ^= LocalPos.GetHashCode();
      if (hitNormal_ != null) hash ^= HitNormal.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasAttackPlayerId) {
        output.WriteRawTag(8);
        output.WriteInt32(AttackPlayerId);
      }
      if (HasGetDamagePlayerId) {
        output.WriteRawTag(16);
        output.WriteInt32(GetDamagePlayerId);
      }
      if (HasDamage) {
        output.WriteRawTag(24);
        output.WriteInt32(Damage);
      }
      if (HasGunType) {
        output.WriteRawTag(32);
        output.WriteInt32(GunType);
      }
      if (localPos_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(LocalPos);
      }
      if (hitNormal_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(HitNormal);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasAttackPlayerId) {
        output.WriteRawTag(8);
        output.WriteInt32(AttackPlayerId);
      }
      if (HasGetDamagePlayerId) {
        output.WriteRawTag(16);
        output.WriteInt32(GetDamagePlayerId);
      }
      if (HasDamage) {
        output.WriteRawTag(24);
        output.WriteInt32(Damage);
      }
      if (HasGunType) {
        output.WriteRawTag(32);
        output.WriteInt32(GunType);
      }
      if (localPos_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(LocalPos);
      }
      if (hitNormal_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(HitNormal);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasAttackPlayerId) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AttackPlayerId);
      }
      if (HasGetDamagePlayerId) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(GetDamagePlayerId);
      }
      if (HasDamage) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Damage);
      }
      if (HasGunType) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(GunType);
      }
      if (localPos_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LocalPos);
      }
      if (hitNormal_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(HitNormal);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PlayerGetDamageData other) {
      if (other == null) {
        return;
      }
      if (other.HasAttackPlayerId) {
        AttackPlayerId = other.AttackPlayerId;
      }
      if (other.HasGetDamagePlayerId) {
        GetDamagePlayerId = other.GetDamagePlayerId;
      }
      if (other.HasDamage) {
        Damage = other.Damage;
      }
      if (other.HasGunType) {
        GunType = other.GunType;
      }
      if (other.localPos_ != null) {
        if (localPos_ == null) {
          LocalPos = new global::HardCordGirlData.VECTOR3();
        }
        LocalPos.MergeFrom(other.LocalPos);
      }
      if (other.hitNormal_ != null) {
        if (hitNormal_ == null) {
          HitNormal = new global::HardCordGirlData.VECTOR3();
        }
        HitNormal.MergeFrom(other.HitNormal);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            AttackPlayerId = input.ReadInt32();
            break;
          }
          case 16: {
            GetDamagePlayerId = input.ReadInt32();
            break;
          }
          case 24: {
            Damage = input.ReadInt32();
            break;
          }
          case 32: {
            GunType = input.ReadInt32();
            break;
          }
          case 42: {
            if (localPos_ == null) {
              LocalPos = new global::HardCordGirlData.VECTOR3();
            }
            input.ReadMessage(LocalPos);
            break;
          }
          case 50: {
            if (hitNormal_ == null) {
              HitNormal = new global::HardCordGirlData.VECTOR3();
            }
            input.ReadMessage(HitNormal);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            AttackPlayerId = input.ReadInt32();
            break;
          }
          case 16: {
            GetDamagePlayerId = input.ReadInt32();
            break;
          }
          case 24: {
            Damage = input.ReadInt32();
            break;
          }
          case 32: {
            GunType = input.ReadInt32();
            break;
          }
          case 42: {
            if (localPos_ == null) {
              LocalPos = new global::HardCordGirlData.VECTOR3();
            }
            input.ReadMessage(LocalPos);
            break;
          }
          case 50: {
            if (hitNormal_ == null) {
              HitNormal = new global::HardCordGirlData.VECTOR3();
            }
            input.ReadMessage(HitNormal);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class PlayerDeadData : pb::IMessage<PlayerDeadData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PlayerDeadData> _parser = new pb::MessageParser<PlayerDeadData>(() => new PlayerDeadData());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PlayerDeadData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HardCordGirlData.HardCordGirlDataClassReflection.Descriptor.MessageTypes[69]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PlayerDeadData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PlayerDeadData(PlayerDeadData other) : this() {
      _hasBits0 = other._hasBits0;
      attackPlayerId_ = other.attackPlayerId_;
      deadPlayerId_ = other.deadPlayerId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PlayerDeadData Clone() {
      return new PlayerDeadData(this);
    }

    /// <summary>Field number for the "attackPlayerId" field.</summary>
    public const int AttackPlayerIdFieldNumber = 1;
    private readonly static int AttackPlayerIdDefaultValue = 0;

    private int attackPlayerId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int AttackPlayerId {
      get { if ((_hasBits0 & 1) != 0) { return attackPlayerId_; } else { return AttackPlayerIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        attackPlayerId_ = value;
      }
    }
    /// <summary>Gets whether the "attackPlayerId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAttackPlayerId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "attackPlayerId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAttackPlayerId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "deadPlayerId" field.</summary>
    public const int DeadPlayerIdFieldNumber = 2;
    private readonly static int DeadPlayerIdDefaultValue = 0;

    private int deadPlayerId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int DeadPlayerId {
      get { if ((_hasBits0 & 2) != 0) { return deadPlayerId_; } else { return DeadPlayerIdDefaultValue; } }
      set {
        _hasBits0 |= 2;
        deadPlayerId_ = value;
      }
    }
    /// <summary>Gets whether the "deadPlayerId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDeadPlayerId {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "deadPlayerId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDeadPlayerId() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PlayerDeadData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PlayerDeadData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AttackPlayerId != other.AttackPlayerId) return false;
      if (DeadPlayerId != other.DeadPlayerId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasAttackPlayerId) hash ^= AttackPlayerId.GetHashCode();
      if (HasDeadPlayerId) hash ^= DeadPlayerId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasAttackPlayerId) {
        output.WriteRawTag(8);
        output.WriteInt32(AttackPlayerId);
      }
      if (HasDeadPlayerId) {
        output.WriteRawTag(16);
        output.WriteInt32(DeadPlayerId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasAttackPlayerId) {
        output.WriteRawTag(8);
        output.WriteInt32(AttackPlayerId);
      }
      if (HasDeadPlayerId) {
        output.WriteRawTag(16);
        output.WriteInt32(DeadPlayerId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasAttackPlayerId) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AttackPlayerId);
      }
      if (HasDeadPlayerId) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(DeadPlayerId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PlayerDeadData other) {
      if (other == null) {
        return;
      }
      if (other.HasAttackPlayerId) {
        AttackPlayerId = other.AttackPlayerId;
      }
      if (other.HasDeadPlayerId) {
        DeadPlayerId = other.DeadPlayerId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            AttackPlayerId = input.ReadInt32();
            break;
          }
          case 16: {
            DeadPlayerId = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            AttackPlayerId = input.ReadInt32();
            break;
          }
          case 16: {
            DeadPlayerId = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ChangeRoomStatusData : pb::IMessage<ChangeRoomStatusData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ChangeRoomStatusData> _parser = new pb::MessageParser<ChangeRoomStatusData>(() => new ChangeRoomStatusData());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ChangeRoomStatusData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HardCordGirlData.HardCordGirlDataClassReflection.Descriptor.MessageTypes[70]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ChangeRoomStatusData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ChangeRoomStatusData(ChangeRoomStatusData other) : this() {
      _hasBits0 = other._hasBits0;
      playerId_ = other.playerId_;
      roomStauts_ = other.roomStauts_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ChangeRoomStatusData Clone() {
      return new ChangeRoomStatusData(this);
    }

    /// <summary>Field number for the "playerId" field.</summary>
    public const int PlayerIdFieldNumber = 1;
    private readonly static int PlayerIdDefaultValue = 0;

    private int playerId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int PlayerId {
      get { if ((_hasBits0 & 1) != 0) { return playerId_; } else { return PlayerIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        playerId_ = value;
      }
    }
    /// <summary>Gets whether the "playerId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPlayerId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "playerId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPlayerId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "roomStauts" field.</summary>
    public const int RoomStautsFieldNumber = 2;
    private readonly static int RoomStautsDefaultValue = 0;

    private int roomStauts_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int RoomStauts {
      get { if ((_hasBits0 & 2) != 0) { return roomStauts_; } else { return RoomStautsDefaultValue; } }
      set {
        _hasBits0 |= 2;
        roomStauts_ = value;
      }
    }
    /// <summary>Gets whether the "roomStauts" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRoomStauts {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "roomStauts" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRoomStauts() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ChangeRoomStatusData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ChangeRoomStatusData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlayerId != other.PlayerId) return false;
      if (RoomStauts != other.RoomStauts) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasPlayerId) hash ^= PlayerId.GetHashCode();
      if (HasRoomStauts) hash ^= RoomStauts.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasPlayerId) {
        output.WriteRawTag(8);
        output.WriteInt32(PlayerId);
      }
      if (HasRoomStauts) {
        output.WriteRawTag(16);
        output.WriteInt32(RoomStauts);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasPlayerId) {
        output.WriteRawTag(8);
        output.WriteInt32(PlayerId);
      }
      if (HasRoomStauts) {
        output.WriteRawTag(16);
        output.WriteInt32(RoomStauts);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasPlayerId) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PlayerId);
      }
      if (HasRoomStauts) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RoomStauts);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ChangeRoomStatusData other) {
      if (other == null) {
        return;
      }
      if (other.HasPlayerId) {
        PlayerId = other.PlayerId;
      }
      if (other.HasRoomStauts) {
        RoomStauts = other.RoomStauts;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PlayerId = input.ReadInt32();
            break;
          }
          case 16: {
            RoomStauts = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            PlayerId = input.ReadInt32();
            break;
          }
          case 16: {
            RoomStauts = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class TAFootStepSoundData : pb::IMessage<TAFootStepSoundData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TAFootStepSoundData> _parser = new pb::MessageParser<TAFootStepSoundData>(() => new TAFootStepSoundData());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TAFootStepSoundData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HardCordGirlData.HardCordGirlDataClassReflection.Descriptor.MessageTypes[71]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TAFootStepSoundData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TAFootStepSoundData(TAFootStepSoundData other) : this() {
      _hasBits0 = other._hasBits0;
      playerId_ = other.playerId_;
      soundId_ = other.soundId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TAFootStepSoundData Clone() {
      return new TAFootStepSoundData(this);
    }

    /// <summary>Field number for the "playerId" field.</summary>
    public const int PlayerIdFieldNumber = 1;
    private readonly static int PlayerIdDefaultValue = 0;

    private int playerId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int PlayerId {
      get { if ((_hasBits0 & 1) != 0) { return playerId_; } else { return PlayerIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        playerId_ = value;
      }
    }
    /// <summary>Gets whether the "playerId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPlayerId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "playerId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPlayerId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "soundId" field.</summary>
    public const int SoundIdFieldNumber = 2;
    private readonly static int SoundIdDefaultValue = 0;

    private int soundId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int SoundId {
      get { if ((_hasBits0 & 2) != 0) { return soundId_; } else { return SoundIdDefaultValue; } }
      set {
        _hasBits0 |= 2;
        soundId_ = value;
      }
    }
    /// <summary>Gets whether the "soundId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSoundId {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "soundId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSoundId() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TAFootStepSoundData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TAFootStepSoundData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlayerId != other.PlayerId) return false;
      if (SoundId != other.SoundId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasPlayerId) hash ^= PlayerId.GetHashCode();
      if (HasSoundId) hash ^= SoundId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasPlayerId) {
        output.WriteRawTag(8);
        output.WriteInt32(PlayerId);
      }
      if (HasSoundId) {
        output.WriteRawTag(16);
        output.WriteInt32(SoundId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasPlayerId) {
        output.WriteRawTag(8);
        output.WriteInt32(PlayerId);
      }
      if (HasSoundId) {
        output.WriteRawTag(16);
        output.WriteInt32(SoundId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasPlayerId) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PlayerId);
      }
      if (HasSoundId) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SoundId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TAFootStepSoundData other) {
      if (other == null) {
        return;
      }
      if (other.HasPlayerId) {
        PlayerId = other.PlayerId;
      }
      if (other.HasSoundId) {
        SoundId = other.SoundId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PlayerId = input.ReadInt32();
            break;
          }
          case 16: {
            SoundId = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            PlayerId = input.ReadInt32();
            break;
          }
          case 16: {
            SoundId = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ChangeTheaterLightEffectData : pb::IMessage<ChangeTheaterLightEffectData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ChangeTheaterLightEffectData> _parser = new pb::MessageParser<ChangeTheaterLightEffectData>(() => new ChangeTheaterLightEffectData());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ChangeTheaterLightEffectData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HardCordGirlData.HardCordGirlDataClassReflection.Descriptor.MessageTypes[72]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ChangeTheaterLightEffectData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ChangeTheaterLightEffectData(ChangeTheaterLightEffectData other) : this() {
      _hasBits0 = other._hasBits0;
      lightEffectType_ = other.lightEffectType_;
      isOpen_ = other.isOpen_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ChangeTheaterLightEffectData Clone() {
      return new ChangeTheaterLightEffectData(this);
    }

    /// <summary>Field number for the "lightEffectType" field.</summary>
    public const int LightEffectTypeFieldNumber = 1;
    private readonly static string LightEffectTypeDefaultValue = "";

    private string lightEffectType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string LightEffectType {
      get { return lightEffectType_ ?? LightEffectTypeDefaultValue; }
      set {
        lightEffectType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "lightEffectType" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLightEffectType {
      get { return lightEffectType_ != null; }
    }
    /// <summary>Clears the value of the "lightEffectType" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLightEffectType() {
      lightEffectType_ = null;
    }

    /// <summary>Field number for the "isOpen" field.</summary>
    public const int IsOpenFieldNumber = 2;
    private readonly static bool IsOpenDefaultValue = false;

    private bool isOpen_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsOpen {
      get { if ((_hasBits0 & 1) != 0) { return isOpen_; } else { return IsOpenDefaultValue; } }
      set {
        _hasBits0 |= 1;
        isOpen_ = value;
      }
    }
    /// <summary>Gets whether the "isOpen" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIsOpen {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "isOpen" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIsOpen() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ChangeTheaterLightEffectData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ChangeTheaterLightEffectData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (LightEffectType != other.LightEffectType) return false;
      if (IsOpen != other.IsOpen) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasLightEffectType) hash ^= LightEffectType.GetHashCode();
      if (HasIsOpen) hash ^= IsOpen.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasLightEffectType) {
        output.WriteRawTag(10);
        output.WriteString(LightEffectType);
      }
      if (HasIsOpen) {
        output.WriteRawTag(16);
        output.WriteBool(IsOpen);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasLightEffectType) {
        output.WriteRawTag(10);
        output.WriteString(LightEffectType);
      }
      if (HasIsOpen) {
        output.WriteRawTag(16);
        output.WriteBool(IsOpen);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasLightEffectType) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LightEffectType);
      }
      if (HasIsOpen) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ChangeTheaterLightEffectData other) {
      if (other == null) {
        return;
      }
      if (other.HasLightEffectType) {
        LightEffectType = other.LightEffectType;
      }
      if (other.HasIsOpen) {
        IsOpen = other.IsOpen;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            LightEffectType = input.ReadString();
            break;
          }
          case 16: {
            IsOpen = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            LightEffectType = input.ReadString();
            break;
          }
          case 16: {
            IsOpen = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class KtvSongStartData : pb::IMessage<KtvSongStartData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<KtvSongStartData> _parser = new pb::MessageParser<KtvSongStartData>(() => new KtvSongStartData());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<KtvSongStartData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HardCordGirlData.HardCordGirlDataClassReflection.Descriptor.MessageTypes[73]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public KtvSongStartData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public KtvSongStartData(KtvSongStartData other) : this() {
      _hasBits0 = other._hasBits0;
      playerId_ = other.playerId_;
      songId_ = other.songId_;
      hasAccompaniment_ = other.hasAccompaniment_;
      songTotalDuration_ = other.songTotalDuration_;
      pullStreamId_ = other.pullStreamId_;
      songName_ = other.songName_;
      originalSinger_ = other.originalSinger_;
      shareToken_ = other.shareToken_;
      playerName_ = other.playerName_;
      characteristic_ = other.characteristic_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public KtvSongStartData Clone() {
      return new KtvSongStartData(this);
    }

    /// <summary>Field number for the "playerId" field.</summary>
    public const int PlayerIdFieldNumber = 1;
    private readonly static int PlayerIdDefaultValue = 0;

    private int playerId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int PlayerId {
      get { if ((_hasBits0 & 1) != 0) { return playerId_; } else { return PlayerIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        playerId_ = value;
      }
    }
    /// <summary>Gets whether the "playerId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPlayerId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "playerId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPlayerId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "songId" field.</summary>
    public const int SongIdFieldNumber = 2;
    private readonly static string SongIdDefaultValue = "";

    private string songId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string SongId {
      get { return songId_ ?? SongIdDefaultValue; }
      set {
        songId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "songId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSongId {
      get { return songId_ != null; }
    }
    /// <summary>Clears the value of the "songId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSongId() {
      songId_ = null;
    }

    /// <summary>Field number for the "hasAccompaniment" field.</summary>
    public const int HasAccompanimentFieldNumber = 3;
    private readonly static bool HasAccompanimentDefaultValue = false;

    private bool hasAccompaniment_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAccompaniment {
      get { if ((_hasBits0 & 2) != 0) { return hasAccompaniment_; } else { return HasAccompanimentDefaultValue; } }
      set {
        _hasBits0 |= 2;
        hasAccompaniment_ = value;
      }
    }
    /// <summary>Gets whether the "hasAccompaniment" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasHasAccompaniment {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "hasAccompaniment" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearHasAccompaniment() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "songTotalDuration" field.</summary>
    public const int SongTotalDurationFieldNumber = 4;
    private readonly static long SongTotalDurationDefaultValue = 0L;

    private long songTotalDuration_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long SongTotalDuration {
      get { if ((_hasBits0 & 4) != 0) { return songTotalDuration_; } else { return SongTotalDurationDefaultValue; } }
      set {
        _hasBits0 |= 4;
        songTotalDuration_ = value;
      }
    }
    /// <summary>Gets whether the "songTotalDuration" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSongTotalDuration {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "songTotalDuration" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSongTotalDuration() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "pullStreamId" field.</summary>
    public const int PullStreamIdFieldNumber = 5;
    private readonly static string PullStreamIdDefaultValue = "";

    private string pullStreamId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string PullStreamId {
      get { return pullStreamId_ ?? PullStreamIdDefaultValue; }
      set {
        pullStreamId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "pullStreamId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPullStreamId {
      get { return pullStreamId_ != null; }
    }
    /// <summary>Clears the value of the "pullStreamId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPullStreamId() {
      pullStreamId_ = null;
    }

    /// <summary>Field number for the "songName" field.</summary>
    public const int SongNameFieldNumber = 6;
    private readonly static string SongNameDefaultValue = "";

    private string songName_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string SongName {
      get { return songName_ ?? SongNameDefaultValue; }
      set {
        songName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "songName" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSongName {
      get { return songName_ != null; }
    }
    /// <summary>Clears the value of the "songName" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSongName() {
      songName_ = null;
    }

    /// <summary>Field number for the "originalSinger" field.</summary>
    public const int OriginalSingerFieldNumber = 7;
    private readonly static string OriginalSingerDefaultValue = "";

    private string originalSinger_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string OriginalSinger {
      get { return originalSinger_ ?? OriginalSingerDefaultValue; }
      set {
        originalSinger_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "originalSinger" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasOriginalSinger {
      get { return originalSinger_ != null; }
    }
    /// <summary>Clears the value of the "originalSinger" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearOriginalSinger() {
      originalSinger_ = null;
    }

    /// <summary>Field number for the "shareToken" field.</summary>
    public const int ShareTokenFieldNumber = 8;
    private readonly static string ShareTokenDefaultValue = "";

    private string shareToken_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ShareToken {
      get { return shareToken_ ?? ShareTokenDefaultValue; }
      set {
        shareToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "shareToken" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasShareToken {
      get { return shareToken_ != null; }
    }
    /// <summary>Clears the value of the "shareToken" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearShareToken() {
      shareToken_ = null;
    }

    /// <summary>Field number for the "playerName" field.</summary>
    public const int PlayerNameFieldNumber = 9;
    private readonly static string PlayerNameDefaultValue = "";

    private string playerName_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string PlayerName {
      get { return playerName_ ?? PlayerNameDefaultValue; }
      set {
        playerName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "playerName" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPlayerName {
      get { return playerName_ != null; }
    }
    /// <summary>Clears the value of the "playerName" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPlayerName() {
      playerName_ = null;
    }

    /// <summary>Field number for the "characteristic" field.</summary>
    public const int CharacteristicFieldNumber = 10;
    private readonly static int CharacteristicDefaultValue = 0;

    private int characteristic_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Characteristic {
      get { if ((_hasBits0 & 8) != 0) { return characteristic_; } else { return CharacteristicDefaultValue; } }
      set {
        _hasBits0 |= 8;
        characteristic_ = value;
      }
    }
    /// <summary>Gets whether the "characteristic" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCharacteristic {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "characteristic" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCharacteristic() {
      _hasBits0 &= ~8;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as KtvSongStartData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(KtvSongStartData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlayerId != other.PlayerId) return false;
      if (SongId != other.SongId) return false;
      if (HasAccompaniment != other.HasAccompaniment) return false;
      if (SongTotalDuration != other.SongTotalDuration) return false;
      if (PullStreamId != other.PullStreamId) return false;
      if (SongName != other.SongName) return false;
      if (OriginalSinger != other.OriginalSinger) return false;
      if (ShareToken != other.ShareToken) return false;
      if (PlayerName != other.PlayerName) return false;
      if (Characteristic != other.Characteristic) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasPlayerId) hash ^= PlayerId.GetHashCode();
      if (HasSongId) hash ^= SongId.GetHashCode();
      if (HasHasAccompaniment) hash ^= HasAccompaniment.GetHashCode();
      if (HasSongTotalDuration) hash ^= SongTotalDuration.GetHashCode();
      if (HasPullStreamId) hash ^= PullStreamId.GetHashCode();
      if (HasSongName) hash ^= SongName.GetHashCode();
      if (HasOriginalSinger) hash ^= OriginalSinger.GetHashCode();
      if (HasShareToken) hash ^= ShareToken.GetHashCode();
      if (HasPlayerName) hash ^= PlayerName.GetHashCode();
      if (HasCharacteristic) hash ^= Characteristic.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasPlayerId) {
        output.WriteRawTag(8);
        output.WriteInt32(PlayerId);
      }
      if (HasSongId) {
        output.WriteRawTag(18);
        output.WriteString(SongId);
      }
      if (HasHasAccompaniment) {
        output.WriteRawTag(24);
        output.WriteBool(HasAccompaniment);
      }
      if (HasSongTotalDuration) {
        output.WriteRawTag(32);
        output.WriteInt64(SongTotalDuration);
      }
      if (HasPullStreamId) {
        output.WriteRawTag(42);
        output.WriteString(PullStreamId);
      }
      if (HasSongName) {
        output.WriteRawTag(50);
        output.WriteString(SongName);
      }
      if (HasOriginalSinger) {
        output.WriteRawTag(58);
        output.WriteString(OriginalSinger);
      }
      if (HasShareToken) {
        output.WriteRawTag(66);
        output.WriteString(ShareToken);
      }
      if (HasPlayerName) {
        output.WriteRawTag(74);
        output.WriteString(PlayerName);
      }
      if (HasCharacteristic) {
        output.WriteRawTag(80);
        output.WriteInt32(Characteristic);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasPlayerId) {
        output.WriteRawTag(8);
        output.WriteInt32(PlayerId);
      }
      if (HasSongId) {
        output.WriteRawTag(18);
        output.WriteString(SongId);
      }
      if (HasHasAccompaniment) {
        output.WriteRawTag(24);
        output.WriteBool(HasAccompaniment);
      }
      if (HasSongTotalDuration) {
        output.WriteRawTag(32);
        output.WriteInt64(SongTotalDuration);
      }
      if (HasPullStreamId) {
        output.WriteRawTag(42);
        output.WriteString(PullStreamId);
      }
      if (HasSongName) {
        output.WriteRawTag(50);
        output.WriteString(SongName);
      }
      if (HasOriginalSinger) {
        output.WriteRawTag(58);
        output.WriteString(OriginalSinger);
      }
      if (HasShareToken) {
        output.WriteRawTag(66);
        output.WriteString(ShareToken);
      }
      if (HasPlayerName) {
        output.WriteRawTag(74);
        output.WriteString(PlayerName);
      }
      if (HasCharacteristic) {
        output.WriteRawTag(80);
        output.WriteInt32(Characteristic);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasPlayerId) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PlayerId);
      }
      if (HasSongId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SongId);
      }
      if (HasHasAccompaniment) {
        size += 1 + 1;
      }
      if (HasSongTotalDuration) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(SongTotalDuration);
      }
      if (HasPullStreamId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PullStreamId);
      }
      if (HasSongName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SongName);
      }
      if (HasOriginalSinger) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OriginalSinger);
      }
      if (HasShareToken) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ShareToken);
      }
      if (HasPlayerName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PlayerName);
      }
      if (HasCharacteristic) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Characteristic);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(KtvSongStartData other) {
      if (other == null) {
        return;
      }
      if (other.HasPlayerId) {
        PlayerId = other.PlayerId;
      }
      if (other.HasSongId) {
        SongId = other.SongId;
      }
      if (other.HasHasAccompaniment) {
        HasAccompaniment = other.HasAccompaniment;
      }
      if (other.HasSongTotalDuration) {
        SongTotalDuration = other.SongTotalDuration;
      }
      if (other.HasPullStreamId) {
        PullStreamId = other.PullStreamId;
      }
      if (other.HasSongName) {
        SongName = other.SongName;
      }
      if (other.HasOriginalSinger) {
        OriginalSinger = other.OriginalSinger;
      }
      if (other.HasShareToken) {
        ShareToken = other.ShareToken;
      }
      if (other.HasPlayerName) {
        PlayerName = other.PlayerName;
      }
      if (other.HasCharacteristic) {
        Characteristic = other.Characteristic;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PlayerId = input.ReadInt32();
            break;
          }
          case 18: {
            SongId = input.ReadString();
            break;
          }
          case 24: {
            HasAccompaniment = input.ReadBool();
            break;
          }
          case 32: {
            SongTotalDuration = input.ReadInt64();
            break;
          }
          case 42: {
            PullStreamId = input.ReadString();
            break;
          }
          case 50: {
            SongName = input.ReadString();
            break;
          }
          case 58: {
            OriginalSinger = input.ReadString();
            break;
          }
          case 66: {
            ShareToken = input.ReadString();
            break;
          }
          case 74: {
            PlayerName = input.ReadString();
            break;
          }
          case 80: {
            Characteristic = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            PlayerId = input.ReadInt32();
            break;
          }
          case 18: {
            SongId = input.ReadString();
            break;
          }
          case 24: {
            HasAccompaniment = input.ReadBool();
            break;
          }
          case 32: {
            SongTotalDuration = input.ReadInt64();
            break;
          }
          case 42: {
            PullStreamId = input.ReadString();
            break;
          }
          case 50: {
            SongName = input.ReadString();
            break;
          }
          case 58: {
            OriginalSinger = input.ReadString();
            break;
          }
          case 66: {
            ShareToken = input.ReadString();
            break;
          }
          case 74: {
            PlayerName = input.ReadString();
            break;
          }
          case 80: {
            Characteristic = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class KtvSongChorusData : pb::IMessage<KtvSongChorusData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<KtvSongChorusData> _parser = new pb::MessageParser<KtvSongChorusData>(() => new KtvSongChorusData());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<KtvSongChorusData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HardCordGirlData.HardCordGirlDataClassReflection.Descriptor.MessageTypes[74]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public KtvSongChorusData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public KtvSongChorusData(KtvSongChorusData other) : this() {
      _hasBits0 = other._hasBits0;
      playerId_ = other.playerId_;
      songId_ = other.songId_;
      delayTime_ = other.delayTime_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public KtvSongChorusData Clone() {
      return new KtvSongChorusData(this);
    }

    /// <summary>Field number for the "playerId" field.</summary>
    public const int PlayerIdFieldNumber = 1;
    private readonly static int PlayerIdDefaultValue = 0;

    private int playerId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int PlayerId {
      get { if ((_hasBits0 & 1) != 0) { return playerId_; } else { return PlayerIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        playerId_ = value;
      }
    }
    /// <summary>Gets whether the "playerId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPlayerId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "playerId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPlayerId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "songId" field.</summary>
    public const int SongIdFieldNumber = 2;
    private readonly static string SongIdDefaultValue = "";

    private string songId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string SongId {
      get { return songId_ ?? SongIdDefaultValue; }
      set {
        songId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "songId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSongId {
      get { return songId_ != null; }
    }
    /// <summary>Clears the value of the "songId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSongId() {
      songId_ = null;
    }

    /// <summary>Field number for the "delayTime" field.</summary>
    public const int DelayTimeFieldNumber = 3;
    private readonly static long DelayTimeDefaultValue = 0L;

    private long delayTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long DelayTime {
      get { if ((_hasBits0 & 2) != 0) { return delayTime_; } else { return DelayTimeDefaultValue; } }
      set {
        _hasBits0 |= 2;
        delayTime_ = value;
      }
    }
    /// <summary>Gets whether the "delayTime" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDelayTime {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "delayTime" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDelayTime() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as KtvSongChorusData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(KtvSongChorusData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlayerId != other.PlayerId) return false;
      if (SongId != other.SongId) return false;
      if (DelayTime != other.DelayTime) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasPlayerId) hash ^= PlayerId.GetHashCode();
      if (HasSongId) hash ^= SongId.GetHashCode();
      if (HasDelayTime) hash ^= DelayTime.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasPlayerId) {
        output.WriteRawTag(8);
        output.WriteInt32(PlayerId);
      }
      if (HasSongId) {
        output.WriteRawTag(18);
        output.WriteString(SongId);
      }
      if (HasDelayTime) {
        output.WriteRawTag(24);
        output.WriteInt64(DelayTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasPlayerId) {
        output.WriteRawTag(8);
        output.WriteInt32(PlayerId);
      }
      if (HasSongId) {
        output.WriteRawTag(18);
        output.WriteString(SongId);
      }
      if (HasDelayTime) {
        output.WriteRawTag(24);
        output.WriteInt64(DelayTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasPlayerId) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PlayerId);
      }
      if (HasSongId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SongId);
      }
      if (HasDelayTime) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(DelayTime);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(KtvSongChorusData other) {
      if (other == null) {
        return;
      }
      if (other.HasPlayerId) {
        PlayerId = other.PlayerId;
      }
      if (other.HasSongId) {
        SongId = other.SongId;
      }
      if (other.HasDelayTime) {
        DelayTime = other.DelayTime;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PlayerId = input.ReadInt32();
            break;
          }
          case 18: {
            SongId = input.ReadString();
            break;
          }
          case 24: {
            DelayTime = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            PlayerId = input.ReadInt32();
            break;
          }
          case 18: {
            SongId = input.ReadString();
            break;
          }
          case 24: {
            DelayTime = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class TutorialInfo : pb::IMessage<TutorialInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TutorialInfo> _parser = new pb::MessageParser<TutorialInfo>(() => new TutorialInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TutorialInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HardCordGirlData.HardCordGirlDataClassReflection.Descriptor.MessageTypes[75]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TutorialInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TutorialInfo(TutorialInfo other) : this() {
      stageIndex_ = other.stageIndex_.Clone();
      tutorialState_ = other.tutorialState_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TutorialInfo Clone() {
      return new TutorialInfo(this);
    }

    /// <summary>Field number for the "stageIndex" field.</summary>
    public const int StageIndexFieldNumber = 1;
    private static readonly pb::FieldCodec<int> _repeated_stageIndex_codec
        = pb::FieldCodec.ForInt32(8);
    private readonly pbc::RepeatedField<int> stageIndex_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<int> StageIndex {
      get { return stageIndex_; }
    }

    /// <summary>Field number for the "tutorialState" field.</summary>
    public const int TutorialStateFieldNumber = 2;
    private static readonly pb::FieldCodec<int> _repeated_tutorialState_codec
        = pb::FieldCodec.ForInt32(16);
    private readonly pbc::RepeatedField<int> tutorialState_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<int> TutorialState {
      get { return tutorialState_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TutorialInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TutorialInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!stageIndex_.Equals(other.stageIndex_)) return false;
      if(!tutorialState_.Equals(other.tutorialState_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= stageIndex_.GetHashCode();
      hash ^= tutorialState_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      stageIndex_.WriteTo(output, _repeated_stageIndex_codec);
      tutorialState_.WriteTo(output, _repeated_tutorialState_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      stageIndex_.WriteTo(ref output, _repeated_stageIndex_codec);
      tutorialState_.WriteTo(ref output, _repeated_tutorialState_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += stageIndex_.CalculateSize(_repeated_stageIndex_codec);
      size += tutorialState_.CalculateSize(_repeated_tutorialState_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TutorialInfo other) {
      if (other == null) {
        return;
      }
      stageIndex_.Add(other.stageIndex_);
      tutorialState_.Add(other.tutorialState_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10:
          case 8: {
            stageIndex_.AddEntriesFrom(input, _repeated_stageIndex_codec);
            break;
          }
          case 18:
          case 16: {
            tutorialState_.AddEntriesFrom(input, _repeated_tutorialState_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10:
          case 8: {
            stageIndex_.AddEntriesFrom(ref input, _repeated_stageIndex_codec);
            break;
          }
          case 18:
          case 16: {
            tutorialState_.AddEntriesFrom(ref input, _repeated_tutorialState_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
