// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: protos/HospitalDataClass.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace HorrorHospitalData {

  /// <summary>Holder for reflection information generated from protos/HospitalDataClass.proto</summary>
  public static partial class HospitalDataClassReflection {

    #region Descriptor
    /// <summary>File descriptor for protos/HospitalDataClass.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static HospitalDataClassReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ch5wcm90b3MvSG9zcGl0YWxEYXRhQ2xhc3MucHJvdG8SE0hvcnJvckhvc3Bp",
            "dGFsX0RhdGEaInByb3Rvcy9IYXJkQ29yZEdpcmxEYXRhQ2xhc3MucHJvdG8i",
            "HAoOU291cmNlX0lEX0RhdGESCgoCaWQYASACKA0iMQoUU291cmNlX0lEX1N0",
            "YXRlX0RhdGESCgoCaWQYASACKA0SDQoFc3RhdGUYAiACKA0iMAoTU291cmNl",
            "X0lEX0Jvb2xfRGF0YRIKCgJpZBgBIAIoDRINCgVzdGF0ZRgCIAIoCCIkCgZE",
            "aWNJbnQSCwoDa2V5GAEgAygFEg0KBXZhbHVlGAIgAygFIj8KBldlYXBvbhIS",
            "Cgp3ZWFwb25UeXBlGAEgAigFEg8KB3N1YlR5cGUYAiACKAUSEAoIcXVhbnRp",
            "dHkYAyACKAUiQQoKV2VhcG9uTGlzdBIzCg5saXN0V2VhcG9uU3BvdBgBIAMo",
            "CzIbLkhvcnJvckhvc3BpdGFsX0RhdGEuV2VhcG9uIuoCCgtab21iaWVfSW5m",
            "bxIKCgJJZBgBIAIoBRIMCgRuYW1lGAIgAigJEhIKCnNwYXduVGltZXMYAyAC",
            "KAUSDAoEdHlwZRgEIAIoBRITCgthdHRhY2tTcGVlZBgFIAIoBRIWCg5hdHRh",
            "Y2tJbnRlcnZhbBgGIAIoAhIOCgZkYW1hZ2UYByACKAUSEQoJbW92ZVNwZWVk",
            "GAggAigCEgoKAmhwGAkgAigFEg0KBXNjb3JlGAogAigFEhUKDWRpc3BlYXJl",
            "ZFRpbWUYCyACKAUSFgoOYXR0YWNrRGlzdGFuY2UYDCACKAISEAoIaXRlbVR5",
            "cGUYDSACKAUSEwoLc3ViSXRlbVR5cGUYDiACKAUSEAoIcXVhbnRpdHkYDyAC",
            "KAUSDAoEY29kZRgQIAIoBRIUCgxkYW1hZ2VfY29lZmYYESACKAISEQoJY2hh",
            "c2VUaW1lGBIgAigFEhUKDWNoYXNlRGlzdGFuY2UYEyACKAUiWwoPU3Bhd25a",
            "b21iaWVfTVNHEjQKCnpvbWJpZUluZm8YASACKAsyIC5Ib3Jyb3JIb3NwaXRh",
            "bF9EYXRhLlpvbWJpZV9JbmZvEhIKCnNwYXduUG9pbnQYAiACKAUiTAoLRGFt",
            "YWdlX0luZm8SCgoCSWQYASACKAUSDgoGZGFtYWdlGAIgAigFEg8KB2d1blR5",
            "cGUYAyACKAUSEAoIcGxheWVySWQYBCACKAUiVwoQRXF1aXBXZWFwb25fSW5m",
            "bxIQCghwbGF5ZXJJZBgBIAIoBRIMCgRzcG90GAIgAigFEhIKCndlYXBvblR5",
            "cGUYAyACKAUSDwoHc3ViVHlwZRgEIAIoBSJ4Cg5ab21iaWVEaWVfSW5mbxIK",
            "CgJJZBgBIAIoBRIQCghwbGF5ZXJJZBgCIAIoBRIPCgdndW5UeXBlGAMgAigF",
            "EhAKCGl0ZW1UeXBlGAQgAigFEhMKC3N1Ykl0ZW1UeXBlGAUgAigFEhAKCHF1",
            "YW50aXR5GAYgAigFIkcKEVBsYXllckRhbWFnZV9JbmZvEhAKCHBsYXllcklk",
            "GAEgAigFEg4KBmRhbWFnZRgCIAIoBRIQCgh6b21iaWVJZBgEIAIoBSIsCg5T",
            "cGF3blpvbWJpZU51bRINCgV3YXZlcxgBIAIoBRILCgNudW0YAiACKAUi1wEK",
            "D1pvbWJpZVNraWxsSW5mbxIQCgh6b21iaWVJZBgBIAIoBRIPCgdza2lsbElk",
            "GAIgAigFEhUKDXRlbGVwb3J0SW5kZXgYAyACKAUSDgoGZGFtYWdlGAQgAigF",
            "EhAKCHRhcmdldElkGAUgAigFEhAKCGxpZmVUaW1lGAYgAigCEhAKCGlzUGll",
            "cmNlGAcgAigIEhAKCGlzU3VtbW9uGAggAigIEjIKDnRhcmdldFBvc2l0aW9u",
            "GAkgAigLMhouSGFyZENvcmRHaXJsX0RhdGEuVkVDVE9SMyJ8ChZUZWxlcG9y",
            "dFpvbWJpZVN5bmNJbmZvEhAKCHpvbWJpZUlkGAEgAigFEicKA3BvcxgCIAIo",
            "CzIaLkhhcmRDb3JkR2lybF9EYXRhLlZFQ1RPUjMSJwoDcm90GAMgAigLMhou",
            "SGFyZENvcmRHaXJsX0RhdGEuVkVDVE9SMyJUCgxEUk9QSVRFTUlORk8SEAoI",
            "em9tYmllSWQYASACKAUSMgoJZHJvcEl0ZW1zGAIgAygLMh8uSG9ycm9ySG9z",
            "cGl0YWxfRGF0YS5JVEVNT0JKRUNUIisKCklURU1PQkpFQ1QSDgoGaXRlbUlk",
            "GAEgAigFEg0KBWNvdW50GAIgAigFIiEKDUNhdWdodEVuZEluZm8SEAoIem9t",
            "YmllSWQYASACKAUiOAoSQmVDYXVnaHRQbGF5ZXJJbmZvEhAKCHpvbWJpZUlk",
            "GAEgAigFEhAKCHBsYXllcklkGAIgAigFIkgKEUhpdExhc3RFZmZlY3RJbmZv",
            "Eg8KB3NraWxsSWQYASACKAUSEAoIcGxheWVySWQYAiACKAUSEAoIem9tYmll",
            "SWQYAyACKAUiNQoSQnVpbGRpbmdVbml0SFBJbmZvEgoKAklEGAEgAigFEhMK",
            "C2NoYW5nZVZhbHVlGAIgAigFIj4KFUJ1aWxkaW5nVW5pdFN0YXRlSW5mbxIK",
            "CgJJRBgBIAIoBRINCgVzdGF0ZRgCIAIoBRIKCgJocBgDIAIoBSJLCg1Ecm9w",
            "UG9pbnRJbmZvEgoKAklEGAEgAigFEgsKA251bRgCIAIoBRINCgVzdGF0ZRgD",
            "IAIoBRISCgpjcmVhdGVUaW1lGAQgAigFIqIBChRab21iaWVVc2VkU0tpbGxz",
            "SW5mbxIQCghab21iaWVJZBgBIAIoBRINCgVDb3VudBgCIAIoBRIOCgZJRExp",
            "c3QYAyADKAUSDwoHQXRrVGltZRgEIAIoAhIWCg5JZGxlRWxhcHNlVGltZRgF",
            "IAIoAhIWCg5XYWxrRWxhcHNlVGltZRgGIAIoAhIYChBBdHRhY2tFbGFwc2VU",
            "aW1lGAcgAigC"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::HardCordGirlData.HardCordGirlDataClassReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::HorrorHospitalData.Source_ID_Data), global::HorrorHospitalData.Source_ID_Data.Parser, new[]{ "Id" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HorrorHospitalData.Source_ID_State_Data), global::HorrorHospitalData.Source_ID_State_Data.Parser, new[]{ "Id", "State" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HorrorHospitalData.Source_ID_Bool_Data), global::HorrorHospitalData.Source_ID_Bool_Data.Parser, new[]{ "Id", "State" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HorrorHospitalData.DicInt), global::HorrorHospitalData.DicInt.Parser, new[]{ "Key", "Value" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HorrorHospitalData.Weapon), global::HorrorHospitalData.Weapon.Parser, new[]{ "WeaponType", "SubType", "Quantity" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HorrorHospitalData.WeaponList), global::HorrorHospitalData.WeaponList.Parser, new[]{ "ListWeaponSpot" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HorrorHospitalData.Zombie_Info), global::HorrorHospitalData.Zombie_Info.Parser, new[]{ "Id", "Name", "SpawnTimes", "Type", "AttackSpeed", "AttackInterval", "Damage", "MoveSpeed", "Hp", "Score", "DispearedTime", "AttackDistance", "ItemType", "SubItemType", "Quantity", "Code", "DamageCoeff", "ChaseTime", "ChaseDistance" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HorrorHospitalData.SpawnZombie_MSG), global::HorrorHospitalData.SpawnZombie_MSG.Parser, new[]{ "ZombieInfo", "SpawnPoint" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HorrorHospitalData.Damage_Info), global::HorrorHospitalData.Damage_Info.Parser, new[]{ "Id", "Damage", "GunType", "PlayerId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HorrorHospitalData.EquipWeapon_Info), global::HorrorHospitalData.EquipWeapon_Info.Parser, new[]{ "PlayerId", "Spot", "WeaponType", "SubType" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HorrorHospitalData.ZombieDie_Info), global::HorrorHospitalData.ZombieDie_Info.Parser, new[]{ "Id", "PlayerId", "GunType", "ItemType", "SubItemType", "Quantity" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HorrorHospitalData.PlayerDamage_Info), global::HorrorHospitalData.PlayerDamage_Info.Parser, new[]{ "PlayerId", "Damage", "ZombieId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HorrorHospitalData.SpawnZombieNum), global::HorrorHospitalData.SpawnZombieNum.Parser, new[]{ "Waves", "Num" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HorrorHospitalData.ZombieSkillInfo), global::HorrorHospitalData.ZombieSkillInfo.Parser, new[]{ "ZombieId", "SkillId", "TeleportIndex", "Damage", "TargetId", "LifeTime", "IsPierce", "IsSummon", "TargetPosition" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HorrorHospitalData.TeleportZombieSyncInfo), global::HorrorHospitalData.TeleportZombieSyncInfo.Parser, new[]{ "ZombieId", "Pos", "Rot" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HorrorHospitalData.DROPITEMINFO), global::HorrorHospitalData.DROPITEMINFO.Parser, new[]{ "ZombieId", "DropItems" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HorrorHospitalData.ITEMOBJECT), global::HorrorHospitalData.ITEMOBJECT.Parser, new[]{ "ItemId", "Count" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HorrorHospitalData.CaughtEndInfo), global::HorrorHospitalData.CaughtEndInfo.Parser, new[]{ "ZombieId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HorrorHospitalData.BeCaughtPlayerInfo), global::HorrorHospitalData.BeCaughtPlayerInfo.Parser, new[]{ "ZombieId", "PlayerId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HorrorHospitalData.HitLastEffectInfo), global::HorrorHospitalData.HitLastEffectInfo.Parser, new[]{ "SkillId", "PlayerId", "ZombieId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HorrorHospitalData.BuildingUnitHPInfo), global::HorrorHospitalData.BuildingUnitHPInfo.Parser, new[]{ "ID", "ChangeValue" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HorrorHospitalData.BuildingUnitStateInfo), global::HorrorHospitalData.BuildingUnitStateInfo.Parser, new[]{ "ID", "State", "Hp" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HorrorHospitalData.DropPointInfo), global::HorrorHospitalData.DropPointInfo.Parser, new[]{ "ID", "Num", "State", "CreateTime" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HorrorHospitalData.ZombieUsedSKillsInfo), global::HorrorHospitalData.ZombieUsedSKillsInfo.Parser, new[]{ "ZombieId", "Count", "IDList", "AtkTime", "IdleElapseTime", "WalkElapseTime", "AttackElapseTime" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class Source_ID_Data : pb::IMessage<Source_ID_Data>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Source_ID_Data> _parser = new pb::MessageParser<Source_ID_Data>(() => new Source_ID_Data());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Source_ID_Data> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HorrorHospitalData.HospitalDataClassReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Source_ID_Data() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Source_ID_Data(Source_ID_Data other) : this() {
      _hasBits0 = other._hasBits0;
      id_ = other.id_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Source_ID_Data Clone() {
      return new Source_ID_Data(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private readonly static uint IdDefaultValue = 0;

    private uint id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Id {
      get { if ((_hasBits0 & 1) != 0) { return id_; } else { return IdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        id_ = value;
      }
    }
    /// <summary>Gets whether the "id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearId() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Source_ID_Data);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Source_ID_Data other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasId) hash ^= Id.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasId) {
        output.WriteRawTag(8);
        output.WriteUInt32(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasId) {
        output.WriteRawTag(8);
        output.WriteUInt32(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Id);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Source_ID_Data other) {
      if (other == null) {
        return;
      }
      if (other.HasId) {
        Id = other.Id;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Source_ID_State_Data : pb::IMessage<Source_ID_State_Data>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Source_ID_State_Data> _parser = new pb::MessageParser<Source_ID_State_Data>(() => new Source_ID_State_Data());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Source_ID_State_Data> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HorrorHospitalData.HospitalDataClassReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Source_ID_State_Data() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Source_ID_State_Data(Source_ID_State_Data other) : this() {
      _hasBits0 = other._hasBits0;
      id_ = other.id_;
      state_ = other.state_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Source_ID_State_Data Clone() {
      return new Source_ID_State_Data(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private readonly static uint IdDefaultValue = 0;

    private uint id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Id {
      get { if ((_hasBits0 & 1) != 0) { return id_; } else { return IdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        id_ = value;
      }
    }
    /// <summary>Gets whether the "id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "state" field.</summary>
    public const int StateFieldNumber = 2;
    private readonly static uint StateDefaultValue = 0;

    private uint state_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint State {
      get { if ((_hasBits0 & 2) != 0) { return state_; } else { return StateDefaultValue; } }
      set {
        _hasBits0 |= 2;
        state_ = value;
      }
    }
    /// <summary>Gets whether the "state" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasState {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "state" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearState() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Source_ID_State_Data);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Source_ID_State_Data other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (State != other.State) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasId) hash ^= Id.GetHashCode();
      if (HasState) hash ^= State.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasId) {
        output.WriteRawTag(8);
        output.WriteUInt32(Id);
      }
      if (HasState) {
        output.WriteRawTag(16);
        output.WriteUInt32(State);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasId) {
        output.WriteRawTag(8);
        output.WriteUInt32(Id);
      }
      if (HasState) {
        output.WriteRawTag(16);
        output.WriteUInt32(State);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Id);
      }
      if (HasState) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(State);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Source_ID_State_Data other) {
      if (other == null) {
        return;
      }
      if (other.HasId) {
        Id = other.Id;
      }
      if (other.HasState) {
        State = other.State;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadUInt32();
            break;
          }
          case 16: {
            State = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadUInt32();
            break;
          }
          case 16: {
            State = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Source_ID_Bool_Data : pb::IMessage<Source_ID_Bool_Data>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Source_ID_Bool_Data> _parser = new pb::MessageParser<Source_ID_Bool_Data>(() => new Source_ID_Bool_Data());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Source_ID_Bool_Data> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HorrorHospitalData.HospitalDataClassReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Source_ID_Bool_Data() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Source_ID_Bool_Data(Source_ID_Bool_Data other) : this() {
      _hasBits0 = other._hasBits0;
      id_ = other.id_;
      state_ = other.state_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Source_ID_Bool_Data Clone() {
      return new Source_ID_Bool_Data(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private readonly static uint IdDefaultValue = 0;

    private uint id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Id {
      get { if ((_hasBits0 & 1) != 0) { return id_; } else { return IdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        id_ = value;
      }
    }
    /// <summary>Gets whether the "id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "state" field.</summary>
    public const int StateFieldNumber = 2;
    private readonly static bool StateDefaultValue = false;

    private bool state_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool State {
      get { if ((_hasBits0 & 2) != 0) { return state_; } else { return StateDefaultValue; } }
      set {
        _hasBits0 |= 2;
        state_ = value;
      }
    }
    /// <summary>Gets whether the "state" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasState {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "state" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearState() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Source_ID_Bool_Data);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Source_ID_Bool_Data other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (State != other.State) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasId) hash ^= Id.GetHashCode();
      if (HasState) hash ^= State.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasId) {
        output.WriteRawTag(8);
        output.WriteUInt32(Id);
      }
      if (HasState) {
        output.WriteRawTag(16);
        output.WriteBool(State);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasId) {
        output.WriteRawTag(8);
        output.WriteUInt32(Id);
      }
      if (HasState) {
        output.WriteRawTag(16);
        output.WriteBool(State);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Id);
      }
      if (HasState) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Source_ID_Bool_Data other) {
      if (other == null) {
        return;
      }
      if (other.HasId) {
        Id = other.Id;
      }
      if (other.HasState) {
        State = other.State;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadUInt32();
            break;
          }
          case 16: {
            State = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadUInt32();
            break;
          }
          case 16: {
            State = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class DicInt : pb::IMessage<DicInt>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DicInt> _parser = new pb::MessageParser<DicInt>(() => new DicInt());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<DicInt> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HorrorHospitalData.HospitalDataClassReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DicInt() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DicInt(DicInt other) : this() {
      key_ = other.key_.Clone();
      value_ = other.value_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DicInt Clone() {
      return new DicInt(this);
    }

    /// <summary>Field number for the "key" field.</summary>
    public const int KeyFieldNumber = 1;
    private static readonly pb::FieldCodec<int> _repeated_key_codec
        = pb::FieldCodec.ForInt32(8);
    private readonly pbc::RepeatedField<int> key_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<int> Key {
      get { return key_; }
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 2;
    private static readonly pb::FieldCodec<int> _repeated_value_codec
        = pb::FieldCodec.ForInt32(16);
    private readonly pbc::RepeatedField<int> value_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<int> Value {
      get { return value_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as DicInt);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(DicInt other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!key_.Equals(other.key_)) return false;
      if(!value_.Equals(other.value_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= key_.GetHashCode();
      hash ^= value_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      key_.WriteTo(output, _repeated_key_codec);
      value_.WriteTo(output, _repeated_value_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      key_.WriteTo(ref output, _repeated_key_codec);
      value_.WriteTo(ref output, _repeated_value_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += key_.CalculateSize(_repeated_key_codec);
      size += value_.CalculateSize(_repeated_value_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(DicInt other) {
      if (other == null) {
        return;
      }
      key_.Add(other.key_);
      value_.Add(other.value_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10:
          case 8: {
            key_.AddEntriesFrom(input, _repeated_key_codec);
            break;
          }
          case 18:
          case 16: {
            value_.AddEntriesFrom(input, _repeated_value_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10:
          case 8: {
            key_.AddEntriesFrom(ref input, _repeated_key_codec);
            break;
          }
          case 18:
          case 16: {
            value_.AddEntriesFrom(ref input, _repeated_value_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Weapon : pb::IMessage<Weapon>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Weapon> _parser = new pb::MessageParser<Weapon>(() => new Weapon());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Weapon> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HorrorHospitalData.HospitalDataClassReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Weapon() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Weapon(Weapon other) : this() {
      _hasBits0 = other._hasBits0;
      weaponType_ = other.weaponType_;
      subType_ = other.subType_;
      quantity_ = other.quantity_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Weapon Clone() {
      return new Weapon(this);
    }

    /// <summary>Field number for the "weaponType" field.</summary>
    public const int WeaponTypeFieldNumber = 1;
    private readonly static int WeaponTypeDefaultValue = 0;

    private int weaponType_;
    /// <summary>
    ///武器类型
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int WeaponType {
      get { if ((_hasBits0 & 1) != 0) { return weaponType_; } else { return WeaponTypeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        weaponType_ = value;
      }
    }
    /// <summary>Gets whether the "weaponType" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasWeaponType {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "weaponType" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearWeaponType() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "subType" field.</summary>
    public const int SubTypeFieldNumber = 2;
    private readonly static int SubTypeDefaultValue = 0;

    private int subType_;
    /// <summary>
    ///武器子类型
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int SubType {
      get { if ((_hasBits0 & 2) != 0) { return subType_; } else { return SubTypeDefaultValue; } }
      set {
        _hasBits0 |= 2;
        subType_ = value;
      }
    }
    /// <summary>Gets whether the "subType" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSubType {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "subType" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSubType() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "quantity" field.</summary>
    public const int QuantityFieldNumber = 3;
    private readonly static int QuantityDefaultValue = 0;

    private int quantity_;
    /// <summary>
    ///武器数量(子弹，使用次数)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Quantity {
      get { if ((_hasBits0 & 4) != 0) { return quantity_; } else { return QuantityDefaultValue; } }
      set {
        _hasBits0 |= 4;
        quantity_ = value;
      }
    }
    /// <summary>Gets whether the "quantity" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasQuantity {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "quantity" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearQuantity() {
      _hasBits0 &= ~4;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Weapon);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Weapon other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (WeaponType != other.WeaponType) return false;
      if (SubType != other.SubType) return false;
      if (Quantity != other.Quantity) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasWeaponType) hash ^= WeaponType.GetHashCode();
      if (HasSubType) hash ^= SubType.GetHashCode();
      if (HasQuantity) hash ^= Quantity.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasWeaponType) {
        output.WriteRawTag(8);
        output.WriteInt32(WeaponType);
      }
      if (HasSubType) {
        output.WriteRawTag(16);
        output.WriteInt32(SubType);
      }
      if (HasQuantity) {
        output.WriteRawTag(24);
        output.WriteInt32(Quantity);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasWeaponType) {
        output.WriteRawTag(8);
        output.WriteInt32(WeaponType);
      }
      if (HasSubType) {
        output.WriteRawTag(16);
        output.WriteInt32(SubType);
      }
      if (HasQuantity) {
        output.WriteRawTag(24);
        output.WriteInt32(Quantity);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasWeaponType) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(WeaponType);
      }
      if (HasSubType) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SubType);
      }
      if (HasQuantity) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Quantity);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Weapon other) {
      if (other == null) {
        return;
      }
      if (other.HasWeaponType) {
        WeaponType = other.WeaponType;
      }
      if (other.HasSubType) {
        SubType = other.SubType;
      }
      if (other.HasQuantity) {
        Quantity = other.Quantity;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            WeaponType = input.ReadInt32();
            break;
          }
          case 16: {
            SubType = input.ReadInt32();
            break;
          }
          case 24: {
            Quantity = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            WeaponType = input.ReadInt32();
            break;
          }
          case 16: {
            SubType = input.ReadInt32();
            break;
          }
          case 24: {
            Quantity = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class WeaponList : pb::IMessage<WeaponList>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<WeaponList> _parser = new pb::MessageParser<WeaponList>(() => new WeaponList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<WeaponList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HorrorHospitalData.HospitalDataClassReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public WeaponList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public WeaponList(WeaponList other) : this() {
      listWeaponSpot_ = other.listWeaponSpot_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public WeaponList Clone() {
      return new WeaponList(this);
    }

    /// <summary>Field number for the "listWeaponSpot" field.</summary>
    public const int ListWeaponSpotFieldNumber = 1;
    private static readonly pb::FieldCodec<global::HorrorHospitalData.Weapon> _repeated_listWeaponSpot_codec
        = pb::FieldCodec.ForMessage(10, global::HorrorHospitalData.Weapon.Parser);
    private readonly pbc::RepeatedField<global::HorrorHospitalData.Weapon> listWeaponSpot_ = new pbc::RepeatedField<global::HorrorHospitalData.Weapon>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::HorrorHospitalData.Weapon> ListWeaponSpot {
      get { return listWeaponSpot_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as WeaponList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(WeaponList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!listWeaponSpot_.Equals(other.listWeaponSpot_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= listWeaponSpot_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      listWeaponSpot_.WriteTo(output, _repeated_listWeaponSpot_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      listWeaponSpot_.WriteTo(ref output, _repeated_listWeaponSpot_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += listWeaponSpot_.CalculateSize(_repeated_listWeaponSpot_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(WeaponList other) {
      if (other == null) {
        return;
      }
      listWeaponSpot_.Add(other.listWeaponSpot_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            listWeaponSpot_.AddEntriesFrom(input, _repeated_listWeaponSpot_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            listWeaponSpot_.AddEntriesFrom(ref input, _repeated_listWeaponSpot_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Zombie_Info : pb::IMessage<Zombie_Info>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Zombie_Info> _parser = new pb::MessageParser<Zombie_Info>(() => new Zombie_Info());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Zombie_Info> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HorrorHospitalData.HospitalDataClassReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Zombie_Info() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Zombie_Info(Zombie_Info other) : this() {
      _hasBits0 = other._hasBits0;
      id_ = other.id_;
      name_ = other.name_;
      spawnTimes_ = other.spawnTimes_;
      type_ = other.type_;
      attackSpeed_ = other.attackSpeed_;
      attackInterval_ = other.attackInterval_;
      damage_ = other.damage_;
      moveSpeed_ = other.moveSpeed_;
      hp_ = other.hp_;
      score_ = other.score_;
      dispearedTime_ = other.dispearedTime_;
      attackDistance_ = other.attackDistance_;
      itemType_ = other.itemType_;
      subItemType_ = other.subItemType_;
      quantity_ = other.quantity_;
      code_ = other.code_;
      damageCoeff_ = other.damageCoeff_;
      chaseTime_ = other.chaseTime_;
      chaseDistance_ = other.chaseDistance_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Zombie_Info Clone() {
      return new Zombie_Info(this);
    }

    /// <summary>Field number for the "Id" field.</summary>
    public const int IdFieldNumber = 1;
    private readonly static int IdDefaultValue = 0;

    private int id_;
    /// <summary>
    ///唯一标识
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Id {
      get { if ((_hasBits0 & 1) != 0) { return id_; } else { return IdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        id_ = value;
      }
    }
    /// <summary>Gets whether the "Id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "Id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private readonly static string NameDefaultValue = "";

    private string name_;
    /// <summary>
    ///名称
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_ ?? NameDefaultValue; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasName {
      get { return name_ != null; }
    }
    /// <summary>Clears the value of the "name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearName() {
      name_ = null;
    }

    /// <summary>Field number for the "spawnTimes" field.</summary>
    public const int SpawnTimesFieldNumber = 3;
    private readonly static int SpawnTimesDefaultValue = 0;

    private int spawnTimes_;
    /// <summary>
    ///波数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int SpawnTimes {
      get { if ((_hasBits0 & 2) != 0) { return spawnTimes_; } else { return SpawnTimesDefaultValue; } }
      set {
        _hasBits0 |= 2;
        spawnTimes_ = value;
      }
    }
    /// <summary>Gets whether the "spawnTimes" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSpawnTimes {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "spawnTimes" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSpawnTimes() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 4;
    private readonly static int TypeDefaultValue = 0;

    private int type_;
    /// <summary>
    ///形象
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Type {
      get { if ((_hasBits0 & 4) != 0) { return type_; } else { return TypeDefaultValue; } }
      set {
        _hasBits0 |= 4;
        type_ = value;
      }
    }
    /// <summary>Gets whether the "type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasType {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearType() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "attackSpeed" field.</summary>
    public const int AttackSpeedFieldNumber = 5;
    private readonly static int AttackSpeedDefaultValue = 0;

    private int attackSpeed_;
    /// <summary>
    ///攻击速度
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int AttackSpeed {
      get { if ((_hasBits0 & 8) != 0) { return attackSpeed_; } else { return AttackSpeedDefaultValue; } }
      set {
        _hasBits0 |= 8;
        attackSpeed_ = value;
      }
    }
    /// <summary>Gets whether the "attackSpeed" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAttackSpeed {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "attackSpeed" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAttackSpeed() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "attackInterval" field.</summary>
    public const int AttackIntervalFieldNumber = 6;
    private readonly static float AttackIntervalDefaultValue = 0F;

    private float attackInterval_;
    /// <summary>
    ///攻击频率
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float AttackInterval {
      get { if ((_hasBits0 & 16) != 0) { return attackInterval_; } else { return AttackIntervalDefaultValue; } }
      set {
        _hasBits0 |= 16;
        attackInterval_ = value;
      }
    }
    /// <summary>Gets whether the "attackInterval" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAttackInterval {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "attackInterval" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAttackInterval() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "damage" field.</summary>
    public const int DamageFieldNumber = 7;
    private readonly static int DamageDefaultValue = 0;

    private int damage_;
    /// <summary>
    ///伤害
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Damage {
      get { if ((_hasBits0 & 32) != 0) { return damage_; } else { return DamageDefaultValue; } }
      set {
        _hasBits0 |= 32;
        damage_ = value;
      }
    }
    /// <summary>Gets whether the "damage" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDamage {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "damage" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDamage() {
      _hasBits0 &= ~32;
    }

    /// <summary>Field number for the "moveSpeed" field.</summary>
    public const int MoveSpeedFieldNumber = 8;
    private readonly static float MoveSpeedDefaultValue = 0F;

    private float moveSpeed_;
    /// <summary>
    ///移动速度
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float MoveSpeed {
      get { if ((_hasBits0 & 64) != 0) { return moveSpeed_; } else { return MoveSpeedDefaultValue; } }
      set {
        _hasBits0 |= 64;
        moveSpeed_ = value;
      }
    }
    /// <summary>Gets whether the "moveSpeed" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMoveSpeed {
      get { return (_hasBits0 & 64) != 0; }
    }
    /// <summary>Clears the value of the "moveSpeed" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMoveSpeed() {
      _hasBits0 &= ~64;
    }

    /// <summary>Field number for the "hp" field.</summary>
    public const int HpFieldNumber = 9;
    private readonly static int HpDefaultValue = 0;

    private int hp_;
    /// <summary>
    ///生命
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Hp {
      get { if ((_hasBits0 & 128) != 0) { return hp_; } else { return HpDefaultValue; } }
      set {
        _hasBits0 |= 128;
        hp_ = value;
      }
    }
    /// <summary>Gets whether the "hp" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasHp {
      get { return (_hasBits0 & 128) != 0; }
    }
    /// <summary>Clears the value of the "hp" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearHp() {
      _hasBits0 &= ~128;
    }

    /// <summary>Field number for the "score" field.</summary>
    public const int ScoreFieldNumber = 10;
    private readonly static int ScoreDefaultValue = 0;

    private int score_;
    /// <summary>
    ///分数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Score {
      get { if ((_hasBits0 & 256) != 0) { return score_; } else { return ScoreDefaultValue; } }
      set {
        _hasBits0 |= 256;
        score_ = value;
      }
    }
    /// <summary>Gets whether the "score" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasScore {
      get { return (_hasBits0 & 256) != 0; }
    }
    /// <summary>Clears the value of the "score" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearScore() {
      _hasBits0 &= ~256;
    }

    /// <summary>Field number for the "dispearedTime" field.</summary>
    public const int DispearedTimeFieldNumber = 11;
    private readonly static int DispearedTimeDefaultValue = 0;

    private int dispearedTime_;
    /// <summary>
    ///死亡消失时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int DispearedTime {
      get { if ((_hasBits0 & 512) != 0) { return dispearedTime_; } else { return DispearedTimeDefaultValue; } }
      set {
        _hasBits0 |= 512;
        dispearedTime_ = value;
      }
    }
    /// <summary>Gets whether the "dispearedTime" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDispearedTime {
      get { return (_hasBits0 & 512) != 0; }
    }
    /// <summary>Clears the value of the "dispearedTime" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDispearedTime() {
      _hasBits0 &= ~512;
    }

    /// <summary>Field number for the "attackDistance" field.</summary>
    public const int AttackDistanceFieldNumber = 12;
    private readonly static float AttackDistanceDefaultValue = 0F;

    private float attackDistance_;
    /// <summary>
    ///攻击距离
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float AttackDistance {
      get { if ((_hasBits0 & 1024) != 0) { return attackDistance_; } else { return AttackDistanceDefaultValue; } }
      set {
        _hasBits0 |= 1024;
        attackDistance_ = value;
      }
    }
    /// <summary>Gets whether the "attackDistance" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAttackDistance {
      get { return (_hasBits0 & 1024) != 0; }
    }
    /// <summary>Clears the value of the "attackDistance" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAttackDistance() {
      _hasBits0 &= ~1024;
    }

    /// <summary>Field number for the "itemType" field.</summary>
    public const int ItemTypeFieldNumber = 13;
    private readonly static int ItemTypeDefaultValue = 0;

    private int itemType_;
    /// <summary>
    ///掉落物品的大类
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ItemType {
      get { if ((_hasBits0 & 2048) != 0) { return itemType_; } else { return ItemTypeDefaultValue; } }
      set {
        _hasBits0 |= 2048;
        itemType_ = value;
      }
    }
    /// <summary>Gets whether the "itemType" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasItemType {
      get { return (_hasBits0 & 2048) != 0; }
    }
    /// <summary>Clears the value of the "itemType" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearItemType() {
      _hasBits0 &= ~2048;
    }

    /// <summary>Field number for the "subItemType" field.</summary>
    public const int SubItemTypeFieldNumber = 14;
    private readonly static int SubItemTypeDefaultValue = 0;

    private int subItemType_;
    /// <summary>
    ///掉落物品的子类
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int SubItemType {
      get { if ((_hasBits0 & 4096) != 0) { return subItemType_; } else { return SubItemTypeDefaultValue; } }
      set {
        _hasBits0 |= 4096;
        subItemType_ = value;
      }
    }
    /// <summary>Gets whether the "subItemType" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSubItemType {
      get { return (_hasBits0 & 4096) != 0; }
    }
    /// <summary>Clears the value of the "subItemType" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSubItemType() {
      _hasBits0 &= ~4096;
    }

    /// <summary>Field number for the "quantity" field.</summary>
    public const int QuantityFieldNumber = 15;
    private readonly static int QuantityDefaultValue = 0;

    private int quantity_;
    /// <summary>
    ///数量
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Quantity {
      get { if ((_hasBits0 & 8192) != 0) { return quantity_; } else { return QuantityDefaultValue; } }
      set {
        _hasBits0 |= 8192;
        quantity_ = value;
      }
    }
    /// <summary>Gets whether the "quantity" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasQuantity {
      get { return (_hasBits0 & 8192) != 0; }
    }
    /// <summary>Clears the value of the "quantity" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearQuantity() {
      _hasBits0 &= ~8192;
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 16;
    private readonly static int CodeDefaultValue = 0;

    private int code_;
    /// <summary>
    ///怪物编号
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Code {
      get { if ((_hasBits0 & 16384) != 0) { return code_; } else { return CodeDefaultValue; } }
      set {
        _hasBits0 |= 16384;
        code_ = value;
      }
    }
    /// <summary>Gets whether the "code" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCode {
      get { return (_hasBits0 & 16384) != 0; }
    }
    /// <summary>Clears the value of the "code" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCode() {
      _hasBits0 &= ~16384;
    }

    /// <summary>Field number for the "damage_coeff" field.</summary>
    public const int DamageCoeffFieldNumber = 17;
    private readonly static float DamageCoeffDefaultValue = 0F;

    private float damageCoeff_;
    /// <summary>
    ///伤害加成系数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float DamageCoeff {
      get { if ((_hasBits0 & 32768) != 0) { return damageCoeff_; } else { return DamageCoeffDefaultValue; } }
      set {
        _hasBits0 |= 32768;
        damageCoeff_ = value;
      }
    }
    /// <summary>Gets whether the "damage_coeff" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDamageCoeff {
      get { return (_hasBits0 & 32768) != 0; }
    }
    /// <summary>Clears the value of the "damage_coeff" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDamageCoeff() {
      _hasBits0 &= ~32768;
    }

    /// <summary>Field number for the "chaseTime" field.</summary>
    public const int ChaseTimeFieldNumber = 18;
    private readonly static int ChaseTimeDefaultValue = 0;

    private int chaseTime_;
    /// <summary>
    ///追逐时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ChaseTime {
      get { if ((_hasBits0 & 65536) != 0) { return chaseTime_; } else { return ChaseTimeDefaultValue; } }
      set {
        _hasBits0 |= 65536;
        chaseTime_ = value;
      }
    }
    /// <summary>Gets whether the "chaseTime" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasChaseTime {
      get { return (_hasBits0 & 65536) != 0; }
    }
    /// <summary>Clears the value of the "chaseTime" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearChaseTime() {
      _hasBits0 &= ~65536;
    }

    /// <summary>Field number for the "chaseDistance" field.</summary>
    public const int ChaseDistanceFieldNumber = 19;
    private readonly static int ChaseDistanceDefaultValue = 0;

    private int chaseDistance_;
    /// <summary>
    ///追逐距离
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ChaseDistance {
      get { if ((_hasBits0 & 131072) != 0) { return chaseDistance_; } else { return ChaseDistanceDefaultValue; } }
      set {
        _hasBits0 |= 131072;
        chaseDistance_ = value;
      }
    }
    /// <summary>Gets whether the "chaseDistance" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasChaseDistance {
      get { return (_hasBits0 & 131072) != 0; }
    }
    /// <summary>Clears the value of the "chaseDistance" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearChaseDistance() {
      _hasBits0 &= ~131072;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Zombie_Info);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Zombie_Info other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Name != other.Name) return false;
      if (SpawnTimes != other.SpawnTimes) return false;
      if (Type != other.Type) return false;
      if (AttackSpeed != other.AttackSpeed) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(AttackInterval, other.AttackInterval)) return false;
      if (Damage != other.Damage) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(MoveSpeed, other.MoveSpeed)) return false;
      if (Hp != other.Hp) return false;
      if (Score != other.Score) return false;
      if (DispearedTime != other.DispearedTime) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(AttackDistance, other.AttackDistance)) return false;
      if (ItemType != other.ItemType) return false;
      if (SubItemType != other.SubItemType) return false;
      if (Quantity != other.Quantity) return false;
      if (Code != other.Code) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(DamageCoeff, other.DamageCoeff)) return false;
      if (ChaseTime != other.ChaseTime) return false;
      if (ChaseDistance != other.ChaseDistance) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasId) hash ^= Id.GetHashCode();
      if (HasName) hash ^= Name.GetHashCode();
      if (HasSpawnTimes) hash ^= SpawnTimes.GetHashCode();
      if (HasType) hash ^= Type.GetHashCode();
      if (HasAttackSpeed) hash ^= AttackSpeed.GetHashCode();
      if (HasAttackInterval) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(AttackInterval);
      if (HasDamage) hash ^= Damage.GetHashCode();
      if (HasMoveSpeed) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(MoveSpeed);
      if (HasHp) hash ^= Hp.GetHashCode();
      if (HasScore) hash ^= Score.GetHashCode();
      if (HasDispearedTime) hash ^= DispearedTime.GetHashCode();
      if (HasAttackDistance) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(AttackDistance);
      if (HasItemType) hash ^= ItemType.GetHashCode();
      if (HasSubItemType) hash ^= SubItemType.GetHashCode();
      if (HasQuantity) hash ^= Quantity.GetHashCode();
      if (HasCode) hash ^= Code.GetHashCode();
      if (HasDamageCoeff) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(DamageCoeff);
      if (HasChaseTime) hash ^= ChaseTime.GetHashCode();
      if (HasChaseDistance) hash ^= ChaseDistance.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasId) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (HasName) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (HasSpawnTimes) {
        output.WriteRawTag(24);
        output.WriteInt32(SpawnTimes);
      }
      if (HasType) {
        output.WriteRawTag(32);
        output.WriteInt32(Type);
      }
      if (HasAttackSpeed) {
        output.WriteRawTag(40);
        output.WriteInt32(AttackSpeed);
      }
      if (HasAttackInterval) {
        output.WriteRawTag(53);
        output.WriteFloat(AttackInterval);
      }
      if (HasDamage) {
        output.WriteRawTag(56);
        output.WriteInt32(Damage);
      }
      if (HasMoveSpeed) {
        output.WriteRawTag(69);
        output.WriteFloat(MoveSpeed);
      }
      if (HasHp) {
        output.WriteRawTag(72);
        output.WriteInt32(Hp);
      }
      if (HasScore) {
        output.WriteRawTag(80);
        output.WriteInt32(Score);
      }
      if (HasDispearedTime) {
        output.WriteRawTag(88);
        output.WriteInt32(DispearedTime);
      }
      if (HasAttackDistance) {
        output.WriteRawTag(101);
        output.WriteFloat(AttackDistance);
      }
      if (HasItemType) {
        output.WriteRawTag(104);
        output.WriteInt32(ItemType);
      }
      if (HasSubItemType) {
        output.WriteRawTag(112);
        output.WriteInt32(SubItemType);
      }
      if (HasQuantity) {
        output.WriteRawTag(120);
        output.WriteInt32(Quantity);
      }
      if (HasCode) {
        output.WriteRawTag(128, 1);
        output.WriteInt32(Code);
      }
      if (HasDamageCoeff) {
        output.WriteRawTag(141, 1);
        output.WriteFloat(DamageCoeff);
      }
      if (HasChaseTime) {
        output.WriteRawTag(144, 1);
        output.WriteInt32(ChaseTime);
      }
      if (HasChaseDistance) {
        output.WriteRawTag(152, 1);
        output.WriteInt32(ChaseDistance);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasId) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (HasName) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (HasSpawnTimes) {
        output.WriteRawTag(24);
        output.WriteInt32(SpawnTimes);
      }
      if (HasType) {
        output.WriteRawTag(32);
        output.WriteInt32(Type);
      }
      if (HasAttackSpeed) {
        output.WriteRawTag(40);
        output.WriteInt32(AttackSpeed);
      }
      if (HasAttackInterval) {
        output.WriteRawTag(53);
        output.WriteFloat(AttackInterval);
      }
      if (HasDamage) {
        output.WriteRawTag(56);
        output.WriteInt32(Damage);
      }
      if (HasMoveSpeed) {
        output.WriteRawTag(69);
        output.WriteFloat(MoveSpeed);
      }
      if (HasHp) {
        output.WriteRawTag(72);
        output.WriteInt32(Hp);
      }
      if (HasScore) {
        output.WriteRawTag(80);
        output.WriteInt32(Score);
      }
      if (HasDispearedTime) {
        output.WriteRawTag(88);
        output.WriteInt32(DispearedTime);
      }
      if (HasAttackDistance) {
        output.WriteRawTag(101);
        output.WriteFloat(AttackDistance);
      }
      if (HasItemType) {
        output.WriteRawTag(104);
        output.WriteInt32(ItemType);
      }
      if (HasSubItemType) {
        output.WriteRawTag(112);
        output.WriteInt32(SubItemType);
      }
      if (HasQuantity) {
        output.WriteRawTag(120);
        output.WriteInt32(Quantity);
      }
      if (HasCode) {
        output.WriteRawTag(128, 1);
        output.WriteInt32(Code);
      }
      if (HasDamageCoeff) {
        output.WriteRawTag(141, 1);
        output.WriteFloat(DamageCoeff);
      }
      if (HasChaseTime) {
        output.WriteRawTag(144, 1);
        output.WriteInt32(ChaseTime);
      }
      if (HasChaseDistance) {
        output.WriteRawTag(152, 1);
        output.WriteInt32(ChaseDistance);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasId) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (HasName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (HasSpawnTimes) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SpawnTimes);
      }
      if (HasType) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
      }
      if (HasAttackSpeed) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AttackSpeed);
      }
      if (HasAttackInterval) {
        size += 1 + 4;
      }
      if (HasDamage) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Damage);
      }
      if (HasMoveSpeed) {
        size += 1 + 4;
      }
      if (HasHp) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Hp);
      }
      if (HasScore) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Score);
      }
      if (HasDispearedTime) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(DispearedTime);
      }
      if (HasAttackDistance) {
        size += 1 + 4;
      }
      if (HasItemType) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ItemType);
      }
      if (HasSubItemType) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SubItemType);
      }
      if (HasQuantity) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Quantity);
      }
      if (HasCode) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(Code);
      }
      if (HasDamageCoeff) {
        size += 2 + 4;
      }
      if (HasChaseTime) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(ChaseTime);
      }
      if (HasChaseDistance) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(ChaseDistance);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Zombie_Info other) {
      if (other == null) {
        return;
      }
      if (other.HasId) {
        Id = other.Id;
      }
      if (other.HasName) {
        Name = other.Name;
      }
      if (other.HasSpawnTimes) {
        SpawnTimes = other.SpawnTimes;
      }
      if (other.HasType) {
        Type = other.Type;
      }
      if (other.HasAttackSpeed) {
        AttackSpeed = other.AttackSpeed;
      }
      if (other.HasAttackInterval) {
        AttackInterval = other.AttackInterval;
      }
      if (other.HasDamage) {
        Damage = other.Damage;
      }
      if (other.HasMoveSpeed) {
        MoveSpeed = other.MoveSpeed;
      }
      if (other.HasHp) {
        Hp = other.Hp;
      }
      if (other.HasScore) {
        Score = other.Score;
      }
      if (other.HasDispearedTime) {
        DispearedTime = other.DispearedTime;
      }
      if (other.HasAttackDistance) {
        AttackDistance = other.AttackDistance;
      }
      if (other.HasItemType) {
        ItemType = other.ItemType;
      }
      if (other.HasSubItemType) {
        SubItemType = other.SubItemType;
      }
      if (other.HasQuantity) {
        Quantity = other.Quantity;
      }
      if (other.HasCode) {
        Code = other.Code;
      }
      if (other.HasDamageCoeff) {
        DamageCoeff = other.DamageCoeff;
      }
      if (other.HasChaseTime) {
        ChaseTime = other.ChaseTime;
      }
      if (other.HasChaseDistance) {
        ChaseDistance = other.ChaseDistance;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 24: {
            SpawnTimes = input.ReadInt32();
            break;
          }
          case 32: {
            Type = input.ReadInt32();
            break;
          }
          case 40: {
            AttackSpeed = input.ReadInt32();
            break;
          }
          case 53: {
            AttackInterval = input.ReadFloat();
            break;
          }
          case 56: {
            Damage = input.ReadInt32();
            break;
          }
          case 69: {
            MoveSpeed = input.ReadFloat();
            break;
          }
          case 72: {
            Hp = input.ReadInt32();
            break;
          }
          case 80: {
            Score = input.ReadInt32();
            break;
          }
          case 88: {
            DispearedTime = input.ReadInt32();
            break;
          }
          case 101: {
            AttackDistance = input.ReadFloat();
            break;
          }
          case 104: {
            ItemType = input.ReadInt32();
            break;
          }
          case 112: {
            SubItemType = input.ReadInt32();
            break;
          }
          case 120: {
            Quantity = input.ReadInt32();
            break;
          }
          case 128: {
            Code = input.ReadInt32();
            break;
          }
          case 141: {
            DamageCoeff = input.ReadFloat();
            break;
          }
          case 144: {
            ChaseTime = input.ReadInt32();
            break;
          }
          case 152: {
            ChaseDistance = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 24: {
            SpawnTimes = input.ReadInt32();
            break;
          }
          case 32: {
            Type = input.ReadInt32();
            break;
          }
          case 40: {
            AttackSpeed = input.ReadInt32();
            break;
          }
          case 53: {
            AttackInterval = input.ReadFloat();
            break;
          }
          case 56: {
            Damage = input.ReadInt32();
            break;
          }
          case 69: {
            MoveSpeed = input.ReadFloat();
            break;
          }
          case 72: {
            Hp = input.ReadInt32();
            break;
          }
          case 80: {
            Score = input.ReadInt32();
            break;
          }
          case 88: {
            DispearedTime = input.ReadInt32();
            break;
          }
          case 101: {
            AttackDistance = input.ReadFloat();
            break;
          }
          case 104: {
            ItemType = input.ReadInt32();
            break;
          }
          case 112: {
            SubItemType = input.ReadInt32();
            break;
          }
          case 120: {
            Quantity = input.ReadInt32();
            break;
          }
          case 128: {
            Code = input.ReadInt32();
            break;
          }
          case 141: {
            DamageCoeff = input.ReadFloat();
            break;
          }
          case 144: {
            ChaseTime = input.ReadInt32();
            break;
          }
          case 152: {
            ChaseDistance = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SpawnZombie_MSG : pb::IMessage<SpawnZombie_MSG>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SpawnZombie_MSG> _parser = new pb::MessageParser<SpawnZombie_MSG>(() => new SpawnZombie_MSG());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SpawnZombie_MSG> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HorrorHospitalData.HospitalDataClassReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SpawnZombie_MSG() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SpawnZombie_MSG(SpawnZombie_MSG other) : this() {
      _hasBits0 = other._hasBits0;
      zombieInfo_ = other.zombieInfo_ != null ? other.zombieInfo_.Clone() : null;
      spawnPoint_ = other.spawnPoint_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SpawnZombie_MSG Clone() {
      return new SpawnZombie_MSG(this);
    }

    /// <summary>Field number for the "zombieInfo" field.</summary>
    public const int ZombieInfoFieldNumber = 1;
    private global::HorrorHospitalData.Zombie_Info zombieInfo_;
    /// <summary>
    ///生成丧尸的属性
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::HorrorHospitalData.Zombie_Info ZombieInfo {
      get { return zombieInfo_; }
      set {
        zombieInfo_ = value;
      }
    }

    /// <summary>Field number for the "spawnPoint" field.</summary>
    public const int SpawnPointFieldNumber = 2;
    private readonly static int SpawnPointDefaultValue = 0;

    private int spawnPoint_;
    /// <summary>
    ///僵尸生成点
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int SpawnPoint {
      get { if ((_hasBits0 & 1) != 0) { return spawnPoint_; } else { return SpawnPointDefaultValue; } }
      set {
        _hasBits0 |= 1;
        spawnPoint_ = value;
      }
    }
    /// <summary>Gets whether the "spawnPoint" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSpawnPoint {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "spawnPoint" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSpawnPoint() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SpawnZombie_MSG);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SpawnZombie_MSG other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ZombieInfo, other.ZombieInfo)) return false;
      if (SpawnPoint != other.SpawnPoint) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (zombieInfo_ != null) hash ^= ZombieInfo.GetHashCode();
      if (HasSpawnPoint) hash ^= SpawnPoint.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (zombieInfo_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ZombieInfo);
      }
      if (HasSpawnPoint) {
        output.WriteRawTag(16);
        output.WriteInt32(SpawnPoint);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (zombieInfo_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ZombieInfo);
      }
      if (HasSpawnPoint) {
        output.WriteRawTag(16);
        output.WriteInt32(SpawnPoint);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (zombieInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ZombieInfo);
      }
      if (HasSpawnPoint) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SpawnPoint);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SpawnZombie_MSG other) {
      if (other == null) {
        return;
      }
      if (other.zombieInfo_ != null) {
        if (zombieInfo_ == null) {
          ZombieInfo = new global::HorrorHospitalData.Zombie_Info();
        }
        ZombieInfo.MergeFrom(other.ZombieInfo);
      }
      if (other.HasSpawnPoint) {
        SpawnPoint = other.SpawnPoint;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (zombieInfo_ == null) {
              ZombieInfo = new global::HorrorHospitalData.Zombie_Info();
            }
            input.ReadMessage(ZombieInfo);
            break;
          }
          case 16: {
            SpawnPoint = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (zombieInfo_ == null) {
              ZombieInfo = new global::HorrorHospitalData.Zombie_Info();
            }
            input.ReadMessage(ZombieInfo);
            break;
          }
          case 16: {
            SpawnPoint = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Damage_Info : pb::IMessage<Damage_Info>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Damage_Info> _parser = new pb::MessageParser<Damage_Info>(() => new Damage_Info());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Damage_Info> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HorrorHospitalData.HospitalDataClassReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Damage_Info() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Damage_Info(Damage_Info other) : this() {
      _hasBits0 = other._hasBits0;
      id_ = other.id_;
      damage_ = other.damage_;
      gunType_ = other.gunType_;
      playerId_ = other.playerId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Damage_Info Clone() {
      return new Damage_Info(this);
    }

    /// <summary>Field number for the "Id" field.</summary>
    public const int IdFieldNumber = 1;
    private readonly static int IdDefaultValue = 0;

    private int id_;
    /// <summary>
    ///唯一标识
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Id {
      get { if ((_hasBits0 & 1) != 0) { return id_; } else { return IdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        id_ = value;
      }
    }
    /// <summary>Gets whether the "Id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "Id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "damage" field.</summary>
    public const int DamageFieldNumber = 2;
    private readonly static int DamageDefaultValue = 0;

    private int damage_;
    /// <summary>
    ///伤害
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Damage {
      get { if ((_hasBits0 & 2) != 0) { return damage_; } else { return DamageDefaultValue; } }
      set {
        _hasBits0 |= 2;
        damage_ = value;
      }
    }
    /// <summary>Gets whether the "damage" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDamage {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "damage" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDamage() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "gunType" field.</summary>
    public const int GunTypeFieldNumber = 3;
    private readonly static int GunTypeDefaultValue = 0;

    private int gunType_;
    /// <summary>
    ///枪支类型
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int GunType {
      get { if ((_hasBits0 & 4) != 0) { return gunType_; } else { return GunTypeDefaultValue; } }
      set {
        _hasBits0 |= 4;
        gunType_ = value;
      }
    }
    /// <summary>Gets whether the "gunType" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGunType {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "gunType" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGunType() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "playerId" field.</summary>
    public const int PlayerIdFieldNumber = 4;
    private readonly static int PlayerIdDefaultValue = 0;

    private int playerId_;
    /// <summary>
    ///玩家ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int PlayerId {
      get { if ((_hasBits0 & 8) != 0) { return playerId_; } else { return PlayerIdDefaultValue; } }
      set {
        _hasBits0 |= 8;
        playerId_ = value;
      }
    }
    /// <summary>Gets whether the "playerId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPlayerId {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "playerId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPlayerId() {
      _hasBits0 &= ~8;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Damage_Info);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Damage_Info other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Damage != other.Damage) return false;
      if (GunType != other.GunType) return false;
      if (PlayerId != other.PlayerId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasId) hash ^= Id.GetHashCode();
      if (HasDamage) hash ^= Damage.GetHashCode();
      if (HasGunType) hash ^= GunType.GetHashCode();
      if (HasPlayerId) hash ^= PlayerId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasId) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (HasDamage) {
        output.WriteRawTag(16);
        output.WriteInt32(Damage);
      }
      if (HasGunType) {
        output.WriteRawTag(24);
        output.WriteInt32(GunType);
      }
      if (HasPlayerId) {
        output.WriteRawTag(32);
        output.WriteInt32(PlayerId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasId) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (HasDamage) {
        output.WriteRawTag(16);
        output.WriteInt32(Damage);
      }
      if (HasGunType) {
        output.WriteRawTag(24);
        output.WriteInt32(GunType);
      }
      if (HasPlayerId) {
        output.WriteRawTag(32);
        output.WriteInt32(PlayerId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasId) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (HasDamage) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Damage);
      }
      if (HasGunType) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(GunType);
      }
      if (HasPlayerId) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PlayerId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Damage_Info other) {
      if (other == null) {
        return;
      }
      if (other.HasId) {
        Id = other.Id;
      }
      if (other.HasDamage) {
        Damage = other.Damage;
      }
      if (other.HasGunType) {
        GunType = other.GunType;
      }
      if (other.HasPlayerId) {
        PlayerId = other.PlayerId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            Damage = input.ReadInt32();
            break;
          }
          case 24: {
            GunType = input.ReadInt32();
            break;
          }
          case 32: {
            PlayerId = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            Damage = input.ReadInt32();
            break;
          }
          case 24: {
            GunType = input.ReadInt32();
            break;
          }
          case 32: {
            PlayerId = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class EquipWeapon_Info : pb::IMessage<EquipWeapon_Info>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EquipWeapon_Info> _parser = new pb::MessageParser<EquipWeapon_Info>(() => new EquipWeapon_Info());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<EquipWeapon_Info> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HorrorHospitalData.HospitalDataClassReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EquipWeapon_Info() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EquipWeapon_Info(EquipWeapon_Info other) : this() {
      _hasBits0 = other._hasBits0;
      playerId_ = other.playerId_;
      spot_ = other.spot_;
      weaponType_ = other.weaponType_;
      subType_ = other.subType_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EquipWeapon_Info Clone() {
      return new EquipWeapon_Info(this);
    }

    /// <summary>Field number for the "playerId" field.</summary>
    public const int PlayerIdFieldNumber = 1;
    private readonly static int PlayerIdDefaultValue = 0;

    private int playerId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int PlayerId {
      get { if ((_hasBits0 & 1) != 0) { return playerId_; } else { return PlayerIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        playerId_ = value;
      }
    }
    /// <summary>Gets whether the "playerId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPlayerId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "playerId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPlayerId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "spot" field.</summary>
    public const int SpotFieldNumber = 2;
    private readonly static int SpotDefaultValue = 0;

    private int spot_;
    /// <summary>
    ///槽位
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Spot {
      get { if ((_hasBits0 & 2) != 0) { return spot_; } else { return SpotDefaultValue; } }
      set {
        _hasBits0 |= 2;
        spot_ = value;
      }
    }
    /// <summary>Gets whether the "spot" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSpot {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "spot" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSpot() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "weaponType" field.</summary>
    public const int WeaponTypeFieldNumber = 3;
    private readonly static int WeaponTypeDefaultValue = 0;

    private int weaponType_;
    /// <summary>
    ///武器类型
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int WeaponType {
      get { if ((_hasBits0 & 4) != 0) { return weaponType_; } else { return WeaponTypeDefaultValue; } }
      set {
        _hasBits0 |= 4;
        weaponType_ = value;
      }
    }
    /// <summary>Gets whether the "weaponType" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasWeaponType {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "weaponType" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearWeaponType() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "subType" field.</summary>
    public const int SubTypeFieldNumber = 4;
    private readonly static int SubTypeDefaultValue = 0;

    private int subType_;
    /// <summary>
    ///子类型
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int SubType {
      get { if ((_hasBits0 & 8) != 0) { return subType_; } else { return SubTypeDefaultValue; } }
      set {
        _hasBits0 |= 8;
        subType_ = value;
      }
    }
    /// <summary>Gets whether the "subType" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSubType {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "subType" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSubType() {
      _hasBits0 &= ~8;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as EquipWeapon_Info);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(EquipWeapon_Info other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlayerId != other.PlayerId) return false;
      if (Spot != other.Spot) return false;
      if (WeaponType != other.WeaponType) return false;
      if (SubType != other.SubType) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasPlayerId) hash ^= PlayerId.GetHashCode();
      if (HasSpot) hash ^= Spot.GetHashCode();
      if (HasWeaponType) hash ^= WeaponType.GetHashCode();
      if (HasSubType) hash ^= SubType.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasPlayerId) {
        output.WriteRawTag(8);
        output.WriteInt32(PlayerId);
      }
      if (HasSpot) {
        output.WriteRawTag(16);
        output.WriteInt32(Spot);
      }
      if (HasWeaponType) {
        output.WriteRawTag(24);
        output.WriteInt32(WeaponType);
      }
      if (HasSubType) {
        output.WriteRawTag(32);
        output.WriteInt32(SubType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasPlayerId) {
        output.WriteRawTag(8);
        output.WriteInt32(PlayerId);
      }
      if (HasSpot) {
        output.WriteRawTag(16);
        output.WriteInt32(Spot);
      }
      if (HasWeaponType) {
        output.WriteRawTag(24);
        output.WriteInt32(WeaponType);
      }
      if (HasSubType) {
        output.WriteRawTag(32);
        output.WriteInt32(SubType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasPlayerId) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PlayerId);
      }
      if (HasSpot) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Spot);
      }
      if (HasWeaponType) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(WeaponType);
      }
      if (HasSubType) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SubType);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(EquipWeapon_Info other) {
      if (other == null) {
        return;
      }
      if (other.HasPlayerId) {
        PlayerId = other.PlayerId;
      }
      if (other.HasSpot) {
        Spot = other.Spot;
      }
      if (other.HasWeaponType) {
        WeaponType = other.WeaponType;
      }
      if (other.HasSubType) {
        SubType = other.SubType;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PlayerId = input.ReadInt32();
            break;
          }
          case 16: {
            Spot = input.ReadInt32();
            break;
          }
          case 24: {
            WeaponType = input.ReadInt32();
            break;
          }
          case 32: {
            SubType = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            PlayerId = input.ReadInt32();
            break;
          }
          case 16: {
            Spot = input.ReadInt32();
            break;
          }
          case 24: {
            WeaponType = input.ReadInt32();
            break;
          }
          case 32: {
            SubType = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ZombieDie_Info : pb::IMessage<ZombieDie_Info>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ZombieDie_Info> _parser = new pb::MessageParser<ZombieDie_Info>(() => new ZombieDie_Info());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ZombieDie_Info> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HorrorHospitalData.HospitalDataClassReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ZombieDie_Info() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ZombieDie_Info(ZombieDie_Info other) : this() {
      _hasBits0 = other._hasBits0;
      id_ = other.id_;
      playerId_ = other.playerId_;
      gunType_ = other.gunType_;
      itemType_ = other.itemType_;
      subItemType_ = other.subItemType_;
      quantity_ = other.quantity_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ZombieDie_Info Clone() {
      return new ZombieDie_Info(this);
    }

    /// <summary>Field number for the "Id" field.</summary>
    public const int IdFieldNumber = 1;
    private readonly static int IdDefaultValue = 0;

    private int id_;
    /// <summary>
    ///唯一标识
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Id {
      get { if ((_hasBits0 & 1) != 0) { return id_; } else { return IdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        id_ = value;
      }
    }
    /// <summary>Gets whether the "Id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "Id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "playerId" field.</summary>
    public const int PlayerIdFieldNumber = 2;
    private readonly static int PlayerIdDefaultValue = 0;

    private int playerId_;
    /// <summary>
    ///玩家ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int PlayerId {
      get { if ((_hasBits0 & 2) != 0) { return playerId_; } else { return PlayerIdDefaultValue; } }
      set {
        _hasBits0 |= 2;
        playerId_ = value;
      }
    }
    /// <summary>Gets whether the "playerId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPlayerId {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "playerId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPlayerId() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "gunType" field.</summary>
    public const int GunTypeFieldNumber = 3;
    private readonly static int GunTypeDefaultValue = 0;

    private int gunType_;
    /// <summary>
    ///枪支类型
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int GunType {
      get { if ((_hasBits0 & 4) != 0) { return gunType_; } else { return GunTypeDefaultValue; } }
      set {
        _hasBits0 |= 4;
        gunType_ = value;
      }
    }
    /// <summary>Gets whether the "gunType" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGunType {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "gunType" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGunType() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "itemType" field.</summary>
    public const int ItemTypeFieldNumber = 4;
    private readonly static int ItemTypeDefaultValue = 0;

    private int itemType_;
    /// <summary>
    ///掉落物品的大类
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ItemType {
      get { if ((_hasBits0 & 8) != 0) { return itemType_; } else { return ItemTypeDefaultValue; } }
      set {
        _hasBits0 |= 8;
        itemType_ = value;
      }
    }
    /// <summary>Gets whether the "itemType" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasItemType {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "itemType" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearItemType() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "subItemType" field.</summary>
    public const int SubItemTypeFieldNumber = 5;
    private readonly static int SubItemTypeDefaultValue = 0;

    private int subItemType_;
    /// <summary>
    ///掉落物品的子类
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int SubItemType {
      get { if ((_hasBits0 & 16) != 0) { return subItemType_; } else { return SubItemTypeDefaultValue; } }
      set {
        _hasBits0 |= 16;
        subItemType_ = value;
      }
    }
    /// <summary>Gets whether the "subItemType" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSubItemType {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "subItemType" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSubItemType() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "quantity" field.</summary>
    public const int QuantityFieldNumber = 6;
    private readonly static int QuantityDefaultValue = 0;

    private int quantity_;
    /// <summary>
    ///数量
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Quantity {
      get { if ((_hasBits0 & 32) != 0) { return quantity_; } else { return QuantityDefaultValue; } }
      set {
        _hasBits0 |= 32;
        quantity_ = value;
      }
    }
    /// <summary>Gets whether the "quantity" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasQuantity {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "quantity" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearQuantity() {
      _hasBits0 &= ~32;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ZombieDie_Info);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ZombieDie_Info other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (PlayerId != other.PlayerId) return false;
      if (GunType != other.GunType) return false;
      if (ItemType != other.ItemType) return false;
      if (SubItemType != other.SubItemType) return false;
      if (Quantity != other.Quantity) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasId) hash ^= Id.GetHashCode();
      if (HasPlayerId) hash ^= PlayerId.GetHashCode();
      if (HasGunType) hash ^= GunType.GetHashCode();
      if (HasItemType) hash ^= ItemType.GetHashCode();
      if (HasSubItemType) hash ^= SubItemType.GetHashCode();
      if (HasQuantity) hash ^= Quantity.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasId) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (HasPlayerId) {
        output.WriteRawTag(16);
        output.WriteInt32(PlayerId);
      }
      if (HasGunType) {
        output.WriteRawTag(24);
        output.WriteInt32(GunType);
      }
      if (HasItemType) {
        output.WriteRawTag(32);
        output.WriteInt32(ItemType);
      }
      if (HasSubItemType) {
        output.WriteRawTag(40);
        output.WriteInt32(SubItemType);
      }
      if (HasQuantity) {
        output.WriteRawTag(48);
        output.WriteInt32(Quantity);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasId) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (HasPlayerId) {
        output.WriteRawTag(16);
        output.WriteInt32(PlayerId);
      }
      if (HasGunType) {
        output.WriteRawTag(24);
        output.WriteInt32(GunType);
      }
      if (HasItemType) {
        output.WriteRawTag(32);
        output.WriteInt32(ItemType);
      }
      if (HasSubItemType) {
        output.WriteRawTag(40);
        output.WriteInt32(SubItemType);
      }
      if (HasQuantity) {
        output.WriteRawTag(48);
        output.WriteInt32(Quantity);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasId) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (HasPlayerId) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PlayerId);
      }
      if (HasGunType) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(GunType);
      }
      if (HasItemType) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ItemType);
      }
      if (HasSubItemType) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SubItemType);
      }
      if (HasQuantity) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Quantity);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ZombieDie_Info other) {
      if (other == null) {
        return;
      }
      if (other.HasId) {
        Id = other.Id;
      }
      if (other.HasPlayerId) {
        PlayerId = other.PlayerId;
      }
      if (other.HasGunType) {
        GunType = other.GunType;
      }
      if (other.HasItemType) {
        ItemType = other.ItemType;
      }
      if (other.HasSubItemType) {
        SubItemType = other.SubItemType;
      }
      if (other.HasQuantity) {
        Quantity = other.Quantity;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            PlayerId = input.ReadInt32();
            break;
          }
          case 24: {
            GunType = input.ReadInt32();
            break;
          }
          case 32: {
            ItemType = input.ReadInt32();
            break;
          }
          case 40: {
            SubItemType = input.ReadInt32();
            break;
          }
          case 48: {
            Quantity = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            PlayerId = input.ReadInt32();
            break;
          }
          case 24: {
            GunType = input.ReadInt32();
            break;
          }
          case 32: {
            ItemType = input.ReadInt32();
            break;
          }
          case 40: {
            SubItemType = input.ReadInt32();
            break;
          }
          case 48: {
            Quantity = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class PlayerDamage_Info : pb::IMessage<PlayerDamage_Info>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PlayerDamage_Info> _parser = new pb::MessageParser<PlayerDamage_Info>(() => new PlayerDamage_Info());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PlayerDamage_Info> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HorrorHospitalData.HospitalDataClassReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PlayerDamage_Info() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PlayerDamage_Info(PlayerDamage_Info other) : this() {
      _hasBits0 = other._hasBits0;
      playerId_ = other.playerId_;
      damage_ = other.damage_;
      zombieId_ = other.zombieId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PlayerDamage_Info Clone() {
      return new PlayerDamage_Info(this);
    }

    /// <summary>Field number for the "playerId" field.</summary>
    public const int PlayerIdFieldNumber = 1;
    private readonly static int PlayerIdDefaultValue = 0;

    private int playerId_;
    /// <summary>
    ///玩家ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int PlayerId {
      get { if ((_hasBits0 & 1) != 0) { return playerId_; } else { return PlayerIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        playerId_ = value;
      }
    }
    /// <summary>Gets whether the "playerId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPlayerId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "playerId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPlayerId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "damage" field.</summary>
    public const int DamageFieldNumber = 2;
    private readonly static int DamageDefaultValue = 0;

    private int damage_;
    /// <summary>
    ///伤害
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Damage {
      get { if ((_hasBits0 & 2) != 0) { return damage_; } else { return DamageDefaultValue; } }
      set {
        _hasBits0 |= 2;
        damage_ = value;
      }
    }
    /// <summary>Gets whether the "damage" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDamage {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "damage" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDamage() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "zombieId" field.</summary>
    public const int ZombieIdFieldNumber = 4;
    private readonly static int ZombieIdDefaultValue = 0;

    private int zombieId_;
    /// <summary>
    ///造成伤害的僵尸ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ZombieId {
      get { if ((_hasBits0 & 4) != 0) { return zombieId_; } else { return ZombieIdDefaultValue; } }
      set {
        _hasBits0 |= 4;
        zombieId_ = value;
      }
    }
    /// <summary>Gets whether the "zombieId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasZombieId {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "zombieId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearZombieId() {
      _hasBits0 &= ~4;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PlayerDamage_Info);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PlayerDamage_Info other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlayerId != other.PlayerId) return false;
      if (Damage != other.Damage) return false;
      if (ZombieId != other.ZombieId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasPlayerId) hash ^= PlayerId.GetHashCode();
      if (HasDamage) hash ^= Damage.GetHashCode();
      if (HasZombieId) hash ^= ZombieId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasPlayerId) {
        output.WriteRawTag(8);
        output.WriteInt32(PlayerId);
      }
      if (HasDamage) {
        output.WriteRawTag(16);
        output.WriteInt32(Damage);
      }
      if (HasZombieId) {
        output.WriteRawTag(32);
        output.WriteInt32(ZombieId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasPlayerId) {
        output.WriteRawTag(8);
        output.WriteInt32(PlayerId);
      }
      if (HasDamage) {
        output.WriteRawTag(16);
        output.WriteInt32(Damage);
      }
      if (HasZombieId) {
        output.WriteRawTag(32);
        output.WriteInt32(ZombieId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasPlayerId) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PlayerId);
      }
      if (HasDamage) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Damage);
      }
      if (HasZombieId) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ZombieId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PlayerDamage_Info other) {
      if (other == null) {
        return;
      }
      if (other.HasPlayerId) {
        PlayerId = other.PlayerId;
      }
      if (other.HasDamage) {
        Damage = other.Damage;
      }
      if (other.HasZombieId) {
        ZombieId = other.ZombieId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PlayerId = input.ReadInt32();
            break;
          }
          case 16: {
            Damage = input.ReadInt32();
            break;
          }
          case 32: {
            ZombieId = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            PlayerId = input.ReadInt32();
            break;
          }
          case 16: {
            Damage = input.ReadInt32();
            break;
          }
          case 32: {
            ZombieId = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SpawnZombieNum : pb::IMessage<SpawnZombieNum>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SpawnZombieNum> _parser = new pb::MessageParser<SpawnZombieNum>(() => new SpawnZombieNum());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SpawnZombieNum> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HorrorHospitalData.HospitalDataClassReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SpawnZombieNum() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SpawnZombieNum(SpawnZombieNum other) : this() {
      _hasBits0 = other._hasBits0;
      waves_ = other.waves_;
      num_ = other.num_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SpawnZombieNum Clone() {
      return new SpawnZombieNum(this);
    }

    /// <summary>Field number for the "waves" field.</summary>
    public const int WavesFieldNumber = 1;
    private readonly static int WavesDefaultValue = 0;

    private int waves_;
    /// <summary>
    ///波次
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Waves {
      get { if ((_hasBits0 & 1) != 0) { return waves_; } else { return WavesDefaultValue; } }
      set {
        _hasBits0 |= 1;
        waves_ = value;
      }
    }
    /// <summary>Gets whether the "waves" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasWaves {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "waves" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearWaves() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "num" field.</summary>
    public const int NumFieldNumber = 2;
    private readonly static int NumDefaultValue = 0;

    private int num_;
    /// <summary>
    ///数量
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Num {
      get { if ((_hasBits0 & 2) != 0) { return num_; } else { return NumDefaultValue; } }
      set {
        _hasBits0 |= 2;
        num_ = value;
      }
    }
    /// <summary>Gets whether the "num" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasNum {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "num" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearNum() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SpawnZombieNum);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SpawnZombieNum other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Waves != other.Waves) return false;
      if (Num != other.Num) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasWaves) hash ^= Waves.GetHashCode();
      if (HasNum) hash ^= Num.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasWaves) {
        output.WriteRawTag(8);
        output.WriteInt32(Waves);
      }
      if (HasNum) {
        output.WriteRawTag(16);
        output.WriteInt32(Num);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasWaves) {
        output.WriteRawTag(8);
        output.WriteInt32(Waves);
      }
      if (HasNum) {
        output.WriteRawTag(16);
        output.WriteInt32(Num);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasWaves) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Waves);
      }
      if (HasNum) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Num);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SpawnZombieNum other) {
      if (other == null) {
        return;
      }
      if (other.HasWaves) {
        Waves = other.Waves;
      }
      if (other.HasNum) {
        Num = other.Num;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Waves = input.ReadInt32();
            break;
          }
          case 16: {
            Num = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Waves = input.ReadInt32();
            break;
          }
          case 16: {
            Num = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ZombieSkillInfo : pb::IMessage<ZombieSkillInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ZombieSkillInfo> _parser = new pb::MessageParser<ZombieSkillInfo>(() => new ZombieSkillInfo());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ZombieSkillInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HorrorHospitalData.HospitalDataClassReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ZombieSkillInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ZombieSkillInfo(ZombieSkillInfo other) : this() {
      _hasBits0 = other._hasBits0;
      zombieId_ = other.zombieId_;
      skillId_ = other.skillId_;
      teleportIndex_ = other.teleportIndex_;
      damage_ = other.damage_;
      targetId_ = other.targetId_;
      lifeTime_ = other.lifeTime_;
      isPierce_ = other.isPierce_;
      isSummon_ = other.isSummon_;
      targetPosition_ = other.targetPosition_ != null ? other.targetPosition_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ZombieSkillInfo Clone() {
      return new ZombieSkillInfo(this);
    }

    /// <summary>Field number for the "zombieId" field.</summary>
    public const int ZombieIdFieldNumber = 1;
    private readonly static int ZombieIdDefaultValue = 0;

    private int zombieId_;
    /// <summary>
    ///僵尸Id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ZombieId {
      get { if ((_hasBits0 & 1) != 0) { return zombieId_; } else { return ZombieIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        zombieId_ = value;
      }
    }
    /// <summary>Gets whether the "zombieId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasZombieId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "zombieId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearZombieId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "skillId" field.</summary>
    public const int SkillIdFieldNumber = 2;
    private readonly static int SkillIdDefaultValue = 0;

    private int skillId_;
    /// <summary>
    ///技能Id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int SkillId {
      get { if ((_hasBits0 & 2) != 0) { return skillId_; } else { return SkillIdDefaultValue; } }
      set {
        _hasBits0 |= 2;
        skillId_ = value;
      }
    }
    /// <summary>Gets whether the "skillId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSkillId {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "skillId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSkillId() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "teleportIndex" field.</summary>
    public const int TeleportIndexFieldNumber = 3;
    private readonly static int TeleportIndexDefaultValue = 0;

    private int teleportIndex_;
    /// <summary>
    ///传送点索引
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int TeleportIndex {
      get { if ((_hasBits0 & 4) != 0) { return teleportIndex_; } else { return TeleportIndexDefaultValue; } }
      set {
        _hasBits0 |= 4;
        teleportIndex_ = value;
      }
    }
    /// <summary>Gets whether the "teleportIndex" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTeleportIndex {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "teleportIndex" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTeleportIndex() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "damage" field.</summary>
    public const int DamageFieldNumber = 4;
    private readonly static int DamageDefaultValue = 0;

    private int damage_;
    /// <summary>
    ///伤害
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Damage {
      get { if ((_hasBits0 & 8) != 0) { return damage_; } else { return DamageDefaultValue; } }
      set {
        _hasBits0 |= 8;
        damage_ = value;
      }
    }
    /// <summary>Gets whether the "damage" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDamage {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "damage" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDamage() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "targetId" field.</summary>
    public const int TargetIdFieldNumber = 5;
    private readonly static int TargetIdDefaultValue = 0;

    private int targetId_;
    /// <summary>
    ///目标玩家Id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int TargetId {
      get { if ((_hasBits0 & 16) != 0) { return targetId_; } else { return TargetIdDefaultValue; } }
      set {
        _hasBits0 |= 16;
        targetId_ = value;
      }
    }
    /// <summary>Gets whether the "targetId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTargetId {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "targetId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTargetId() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "lifeTime" field.</summary>
    public const int LifeTimeFieldNumber = 6;
    private readonly static float LifeTimeDefaultValue = 0F;

    private float lifeTime_;
    /// <summary>
    ///生命周期
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float LifeTime {
      get { if ((_hasBits0 & 32) != 0) { return lifeTime_; } else { return LifeTimeDefaultValue; } }
      set {
        _hasBits0 |= 32;
        lifeTime_ = value;
      }
    }
    /// <summary>Gets whether the "lifeTime" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLifeTime {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "lifeTime" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLifeTime() {
      _hasBits0 &= ~32;
    }

    /// <summary>Field number for the "isPierce" field.</summary>
    public const int IsPierceFieldNumber = 7;
    private readonly static bool IsPierceDefaultValue = false;

    private bool isPierce_;
    /// <summary>
    ///是否穿透玩家
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsPierce {
      get { if ((_hasBits0 & 64) != 0) { return isPierce_; } else { return IsPierceDefaultValue; } }
      set {
        _hasBits0 |= 64;
        isPierce_ = value;
      }
    }
    /// <summary>Gets whether the "isPierce" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIsPierce {
      get { return (_hasBits0 & 64) != 0; }
    }
    /// <summary>Clears the value of the "isPierce" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIsPierce() {
      _hasBits0 &= ~64;
    }

    /// <summary>Field number for the "isSummon" field.</summary>
    public const int IsSummonFieldNumber = 8;
    private readonly static bool IsSummonDefaultValue = false;

    private bool isSummon_;
    /// <summary>
    ///是否召唤技能
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsSummon {
      get { if ((_hasBits0 & 128) != 0) { return isSummon_; } else { return IsSummonDefaultValue; } }
      set {
        _hasBits0 |= 128;
        isSummon_ = value;
      }
    }
    /// <summary>Gets whether the "isSummon" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIsSummon {
      get { return (_hasBits0 & 128) != 0; }
    }
    /// <summary>Clears the value of the "isSummon" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIsSummon() {
      _hasBits0 &= ~128;
    }

    /// <summary>Field number for the "targetPosition" field.</summary>
    public const int TargetPositionFieldNumber = 9;
    private global::HardCordGirlData.VECTOR3 targetPosition_;
    /// <summary>
    ///目标点位置
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::HardCordGirlData.VECTOR3 TargetPosition {
      get { return targetPosition_; }
      set {
        targetPosition_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ZombieSkillInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ZombieSkillInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ZombieId != other.ZombieId) return false;
      if (SkillId != other.SkillId) return false;
      if (TeleportIndex != other.TeleportIndex) return false;
      if (Damage != other.Damage) return false;
      if (TargetId != other.TargetId) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(LifeTime, other.LifeTime)) return false;
      if (IsPierce != other.IsPierce) return false;
      if (IsSummon != other.IsSummon) return false;
      if (!object.Equals(TargetPosition, other.TargetPosition)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasZombieId) hash ^= ZombieId.GetHashCode();
      if (HasSkillId) hash ^= SkillId.GetHashCode();
      if (HasTeleportIndex) hash ^= TeleportIndex.GetHashCode();
      if (HasDamage) hash ^= Damage.GetHashCode();
      if (HasTargetId) hash ^= TargetId.GetHashCode();
      if (HasLifeTime) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(LifeTime);
      if (HasIsPierce) hash ^= IsPierce.GetHashCode();
      if (HasIsSummon) hash ^= IsSummon.GetHashCode();
      if (targetPosition_ != null) hash ^= TargetPosition.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasZombieId) {
        output.WriteRawTag(8);
        output.WriteInt32(ZombieId);
      }
      if (HasSkillId) {
        output.WriteRawTag(16);
        output.WriteInt32(SkillId);
      }
      if (HasTeleportIndex) {
        output.WriteRawTag(24);
        output.WriteInt32(TeleportIndex);
      }
      if (HasDamage) {
        output.WriteRawTag(32);
        output.WriteInt32(Damage);
      }
      if (HasTargetId) {
        output.WriteRawTag(40);
        output.WriteInt32(TargetId);
      }
      if (HasLifeTime) {
        output.WriteRawTag(53);
        output.WriteFloat(LifeTime);
      }
      if (HasIsPierce) {
        output.WriteRawTag(56);
        output.WriteBool(IsPierce);
      }
      if (HasIsSummon) {
        output.WriteRawTag(64);
        output.WriteBool(IsSummon);
      }
      if (targetPosition_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(TargetPosition);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasZombieId) {
        output.WriteRawTag(8);
        output.WriteInt32(ZombieId);
      }
      if (HasSkillId) {
        output.WriteRawTag(16);
        output.WriteInt32(SkillId);
      }
      if (HasTeleportIndex) {
        output.WriteRawTag(24);
        output.WriteInt32(TeleportIndex);
      }
      if (HasDamage) {
        output.WriteRawTag(32);
        output.WriteInt32(Damage);
      }
      if (HasTargetId) {
        output.WriteRawTag(40);
        output.WriteInt32(TargetId);
      }
      if (HasLifeTime) {
        output.WriteRawTag(53);
        output.WriteFloat(LifeTime);
      }
      if (HasIsPierce) {
        output.WriteRawTag(56);
        output.WriteBool(IsPierce);
      }
      if (HasIsSummon) {
        output.WriteRawTag(64);
        output.WriteBool(IsSummon);
      }
      if (targetPosition_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(TargetPosition);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasZombieId) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ZombieId);
      }
      if (HasSkillId) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SkillId);
      }
      if (HasTeleportIndex) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TeleportIndex);
      }
      if (HasDamage) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Damage);
      }
      if (HasTargetId) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TargetId);
      }
      if (HasLifeTime) {
        size += 1 + 4;
      }
      if (HasIsPierce) {
        size += 1 + 1;
      }
      if (HasIsSummon) {
        size += 1 + 1;
      }
      if (targetPosition_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TargetPosition);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ZombieSkillInfo other) {
      if (other == null) {
        return;
      }
      if (other.HasZombieId) {
        ZombieId = other.ZombieId;
      }
      if (other.HasSkillId) {
        SkillId = other.SkillId;
      }
      if (other.HasTeleportIndex) {
        TeleportIndex = other.TeleportIndex;
      }
      if (other.HasDamage) {
        Damage = other.Damage;
      }
      if (other.HasTargetId) {
        TargetId = other.TargetId;
      }
      if (other.HasLifeTime) {
        LifeTime = other.LifeTime;
      }
      if (other.HasIsPierce) {
        IsPierce = other.IsPierce;
      }
      if (other.HasIsSummon) {
        IsSummon = other.IsSummon;
      }
      if (other.targetPosition_ != null) {
        if (targetPosition_ == null) {
          TargetPosition = new global::HardCordGirlData.VECTOR3();
        }
        TargetPosition.MergeFrom(other.TargetPosition);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ZombieId = input.ReadInt32();
            break;
          }
          case 16: {
            SkillId = input.ReadInt32();
            break;
          }
          case 24: {
            TeleportIndex = input.ReadInt32();
            break;
          }
          case 32: {
            Damage = input.ReadInt32();
            break;
          }
          case 40: {
            TargetId = input.ReadInt32();
            break;
          }
          case 53: {
            LifeTime = input.ReadFloat();
            break;
          }
          case 56: {
            IsPierce = input.ReadBool();
            break;
          }
          case 64: {
            IsSummon = input.ReadBool();
            break;
          }
          case 74: {
            if (targetPosition_ == null) {
              TargetPosition = new global::HardCordGirlData.VECTOR3();
            }
            input.ReadMessage(TargetPosition);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ZombieId = input.ReadInt32();
            break;
          }
          case 16: {
            SkillId = input.ReadInt32();
            break;
          }
          case 24: {
            TeleportIndex = input.ReadInt32();
            break;
          }
          case 32: {
            Damage = input.ReadInt32();
            break;
          }
          case 40: {
            TargetId = input.ReadInt32();
            break;
          }
          case 53: {
            LifeTime = input.ReadFloat();
            break;
          }
          case 56: {
            IsPierce = input.ReadBool();
            break;
          }
          case 64: {
            IsSummon = input.ReadBool();
            break;
          }
          case 74: {
            if (targetPosition_ == null) {
              TargetPosition = new global::HardCordGirlData.VECTOR3();
            }
            input.ReadMessage(TargetPosition);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class TeleportZombieSyncInfo : pb::IMessage<TeleportZombieSyncInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TeleportZombieSyncInfo> _parser = new pb::MessageParser<TeleportZombieSyncInfo>(() => new TeleportZombieSyncInfo());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TeleportZombieSyncInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HorrorHospitalData.HospitalDataClassReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TeleportZombieSyncInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TeleportZombieSyncInfo(TeleportZombieSyncInfo other) : this() {
      _hasBits0 = other._hasBits0;
      zombieId_ = other.zombieId_;
      pos_ = other.pos_ != null ? other.pos_.Clone() : null;
      rot_ = other.rot_ != null ? other.rot_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TeleportZombieSyncInfo Clone() {
      return new TeleportZombieSyncInfo(this);
    }

    /// <summary>Field number for the "zombieId" field.</summary>
    public const int ZombieIdFieldNumber = 1;
    private readonly static int ZombieIdDefaultValue = 0;

    private int zombieId_;
    /// <summary>
    ///僵尸Id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ZombieId {
      get { if ((_hasBits0 & 1) != 0) { return zombieId_; } else { return ZombieIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        zombieId_ = value;
      }
    }
    /// <summary>Gets whether the "zombieId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasZombieId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "zombieId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearZombieId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "pos" field.</summary>
    public const int PosFieldNumber = 2;
    private global::HardCordGirlData.VECTOR3 pos_;
    /// <summary>
    ///位置
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::HardCordGirlData.VECTOR3 Pos {
      get { return pos_; }
      set {
        pos_ = value;
      }
    }

    /// <summary>Field number for the "rot" field.</summary>
    public const int RotFieldNumber = 3;
    private global::HardCordGirlData.VECTOR3 rot_;
    /// <summary>
    ///方向
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::HardCordGirlData.VECTOR3 Rot {
      get { return rot_; }
      set {
        rot_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TeleportZombieSyncInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TeleportZombieSyncInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ZombieId != other.ZombieId) return false;
      if (!object.Equals(Pos, other.Pos)) return false;
      if (!object.Equals(Rot, other.Rot)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasZombieId) hash ^= ZombieId.GetHashCode();
      if (pos_ != null) hash ^= Pos.GetHashCode();
      if (rot_ != null) hash ^= Rot.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasZombieId) {
        output.WriteRawTag(8);
        output.WriteInt32(ZombieId);
      }
      if (pos_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Pos);
      }
      if (rot_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Rot);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasZombieId) {
        output.WriteRawTag(8);
        output.WriteInt32(ZombieId);
      }
      if (pos_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Pos);
      }
      if (rot_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Rot);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasZombieId) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ZombieId);
      }
      if (pos_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Pos);
      }
      if (rot_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Rot);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TeleportZombieSyncInfo other) {
      if (other == null) {
        return;
      }
      if (other.HasZombieId) {
        ZombieId = other.ZombieId;
      }
      if (other.pos_ != null) {
        if (pos_ == null) {
          Pos = new global::HardCordGirlData.VECTOR3();
        }
        Pos.MergeFrom(other.Pos);
      }
      if (other.rot_ != null) {
        if (rot_ == null) {
          Rot = new global::HardCordGirlData.VECTOR3();
        }
        Rot.MergeFrom(other.Rot);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ZombieId = input.ReadInt32();
            break;
          }
          case 18: {
            if (pos_ == null) {
              Pos = new global::HardCordGirlData.VECTOR3();
            }
            input.ReadMessage(Pos);
            break;
          }
          case 26: {
            if (rot_ == null) {
              Rot = new global::HardCordGirlData.VECTOR3();
            }
            input.ReadMessage(Rot);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ZombieId = input.ReadInt32();
            break;
          }
          case 18: {
            if (pos_ == null) {
              Pos = new global::HardCordGirlData.VECTOR3();
            }
            input.ReadMessage(Pos);
            break;
          }
          case 26: {
            if (rot_ == null) {
              Rot = new global::HardCordGirlData.VECTOR3();
            }
            input.ReadMessage(Rot);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class DROPITEMINFO : pb::IMessage<DROPITEMINFO>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DROPITEMINFO> _parser = new pb::MessageParser<DROPITEMINFO>(() => new DROPITEMINFO());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<DROPITEMINFO> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HorrorHospitalData.HospitalDataClassReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DROPITEMINFO() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DROPITEMINFO(DROPITEMINFO other) : this() {
      _hasBits0 = other._hasBits0;
      zombieId_ = other.zombieId_;
      dropItems_ = other.dropItems_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DROPITEMINFO Clone() {
      return new DROPITEMINFO(this);
    }

    /// <summary>Field number for the "zombieId" field.</summary>
    public const int ZombieIdFieldNumber = 1;
    private readonly static int ZombieIdDefaultValue = 0;

    private int zombieId_;
    /// <summary>
    ///僵尸id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ZombieId {
      get { if ((_hasBits0 & 1) != 0) { return zombieId_; } else { return ZombieIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        zombieId_ = value;
      }
    }
    /// <summary>Gets whether the "zombieId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasZombieId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "zombieId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearZombieId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "dropItems" field.</summary>
    public const int DropItemsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::HorrorHospitalData.ITEMOBJECT> _repeated_dropItems_codec
        = pb::FieldCodec.ForMessage(18, global::HorrorHospitalData.ITEMOBJECT.Parser);
    private readonly pbc::RepeatedField<global::HorrorHospitalData.ITEMOBJECT> dropItems_ = new pbc::RepeatedField<global::HorrorHospitalData.ITEMOBJECT>();
    /// <summary>
    ///物品组
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::HorrorHospitalData.ITEMOBJECT> DropItems {
      get { return dropItems_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as DROPITEMINFO);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(DROPITEMINFO other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ZombieId != other.ZombieId) return false;
      if(!dropItems_.Equals(other.dropItems_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasZombieId) hash ^= ZombieId.GetHashCode();
      hash ^= dropItems_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasZombieId) {
        output.WriteRawTag(8);
        output.WriteInt32(ZombieId);
      }
      dropItems_.WriteTo(output, _repeated_dropItems_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasZombieId) {
        output.WriteRawTag(8);
        output.WriteInt32(ZombieId);
      }
      dropItems_.WriteTo(ref output, _repeated_dropItems_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasZombieId) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ZombieId);
      }
      size += dropItems_.CalculateSize(_repeated_dropItems_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(DROPITEMINFO other) {
      if (other == null) {
        return;
      }
      if (other.HasZombieId) {
        ZombieId = other.ZombieId;
      }
      dropItems_.Add(other.dropItems_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ZombieId = input.ReadInt32();
            break;
          }
          case 18: {
            dropItems_.AddEntriesFrom(input, _repeated_dropItems_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ZombieId = input.ReadInt32();
            break;
          }
          case 18: {
            dropItems_.AddEntriesFrom(ref input, _repeated_dropItems_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ITEMOBJECT : pb::IMessage<ITEMOBJECT>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ITEMOBJECT> _parser = new pb::MessageParser<ITEMOBJECT>(() => new ITEMOBJECT());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ITEMOBJECT> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HorrorHospitalData.HospitalDataClassReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ITEMOBJECT() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ITEMOBJECT(ITEMOBJECT other) : this() {
      _hasBits0 = other._hasBits0;
      itemId_ = other.itemId_;
      count_ = other.count_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ITEMOBJECT Clone() {
      return new ITEMOBJECT(this);
    }

    /// <summary>Field number for the "itemId" field.</summary>
    public const int ItemIdFieldNumber = 1;
    private readonly static int ItemIdDefaultValue = 0;

    private int itemId_;
    /// <summary>
    ///物品id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ItemId {
      get { if ((_hasBits0 & 1) != 0) { return itemId_; } else { return ItemIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        itemId_ = value;
      }
    }
    /// <summary>Gets whether the "itemId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasItemId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "itemId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearItemId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "count" field.</summary>
    public const int CountFieldNumber = 2;
    private readonly static int CountDefaultValue = 0;

    private int count_;
    /// <summary>
    ///数量
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Count {
      get { if ((_hasBits0 & 2) != 0) { return count_; } else { return CountDefaultValue; } }
      set {
        _hasBits0 |= 2;
        count_ = value;
      }
    }
    /// <summary>Gets whether the "count" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCount {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "count" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCount() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ITEMOBJECT);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ITEMOBJECT other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ItemId != other.ItemId) return false;
      if (Count != other.Count) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasItemId) hash ^= ItemId.GetHashCode();
      if (HasCount) hash ^= Count.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasItemId) {
        output.WriteRawTag(8);
        output.WriteInt32(ItemId);
      }
      if (HasCount) {
        output.WriteRawTag(16);
        output.WriteInt32(Count);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasItemId) {
        output.WriteRawTag(8);
        output.WriteInt32(ItemId);
      }
      if (HasCount) {
        output.WriteRawTag(16);
        output.WriteInt32(Count);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasItemId) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ItemId);
      }
      if (HasCount) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Count);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ITEMOBJECT other) {
      if (other == null) {
        return;
      }
      if (other.HasItemId) {
        ItemId = other.ItemId;
      }
      if (other.HasCount) {
        Count = other.Count;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ItemId = input.ReadInt32();
            break;
          }
          case 16: {
            Count = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ItemId = input.ReadInt32();
            break;
          }
          case 16: {
            Count = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CaughtEndInfo : pb::IMessage<CaughtEndInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CaughtEndInfo> _parser = new pb::MessageParser<CaughtEndInfo>(() => new CaughtEndInfo());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CaughtEndInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HorrorHospitalData.HospitalDataClassReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CaughtEndInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CaughtEndInfo(CaughtEndInfo other) : this() {
      _hasBits0 = other._hasBits0;
      zombieId_ = other.zombieId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CaughtEndInfo Clone() {
      return new CaughtEndInfo(this);
    }

    /// <summary>Field number for the "zombieId" field.</summary>
    public const int ZombieIdFieldNumber = 1;
    private readonly static int ZombieIdDefaultValue = 0;

    private int zombieId_;
    /// <summary>
    ///僵尸Id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ZombieId {
      get { if ((_hasBits0 & 1) != 0) { return zombieId_; } else { return ZombieIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        zombieId_ = value;
      }
    }
    /// <summary>Gets whether the "zombieId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasZombieId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "zombieId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearZombieId() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CaughtEndInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CaughtEndInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ZombieId != other.ZombieId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasZombieId) hash ^= ZombieId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasZombieId) {
        output.WriteRawTag(8);
        output.WriteInt32(ZombieId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasZombieId) {
        output.WriteRawTag(8);
        output.WriteInt32(ZombieId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasZombieId) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ZombieId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CaughtEndInfo other) {
      if (other == null) {
        return;
      }
      if (other.HasZombieId) {
        ZombieId = other.ZombieId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ZombieId = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ZombieId = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class BeCaughtPlayerInfo : pb::IMessage<BeCaughtPlayerInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<BeCaughtPlayerInfo> _parser = new pb::MessageParser<BeCaughtPlayerInfo>(() => new BeCaughtPlayerInfo());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<BeCaughtPlayerInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HorrorHospitalData.HospitalDataClassReflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BeCaughtPlayerInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BeCaughtPlayerInfo(BeCaughtPlayerInfo other) : this() {
      _hasBits0 = other._hasBits0;
      zombieId_ = other.zombieId_;
      playerId_ = other.playerId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BeCaughtPlayerInfo Clone() {
      return new BeCaughtPlayerInfo(this);
    }

    /// <summary>Field number for the "zombieId" field.</summary>
    public const int ZombieIdFieldNumber = 1;
    private readonly static int ZombieIdDefaultValue = 0;

    private int zombieId_;
    /// <summary>
    ///僵尸Id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ZombieId {
      get { if ((_hasBits0 & 1) != 0) { return zombieId_; } else { return ZombieIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        zombieId_ = value;
      }
    }
    /// <summary>Gets whether the "zombieId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasZombieId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "zombieId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearZombieId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "playerId" field.</summary>
    public const int PlayerIdFieldNumber = 2;
    private readonly static int PlayerIdDefaultValue = 0;

    private int playerId_;
    /// <summary>
    ///玩家id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int PlayerId {
      get { if ((_hasBits0 & 2) != 0) { return playerId_; } else { return PlayerIdDefaultValue; } }
      set {
        _hasBits0 |= 2;
        playerId_ = value;
      }
    }
    /// <summary>Gets whether the "playerId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPlayerId {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "playerId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPlayerId() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as BeCaughtPlayerInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(BeCaughtPlayerInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ZombieId != other.ZombieId) return false;
      if (PlayerId != other.PlayerId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasZombieId) hash ^= ZombieId.GetHashCode();
      if (HasPlayerId) hash ^= PlayerId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasZombieId) {
        output.WriteRawTag(8);
        output.WriteInt32(ZombieId);
      }
      if (HasPlayerId) {
        output.WriteRawTag(16);
        output.WriteInt32(PlayerId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasZombieId) {
        output.WriteRawTag(8);
        output.WriteInt32(ZombieId);
      }
      if (HasPlayerId) {
        output.WriteRawTag(16);
        output.WriteInt32(PlayerId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasZombieId) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ZombieId);
      }
      if (HasPlayerId) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PlayerId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(BeCaughtPlayerInfo other) {
      if (other == null) {
        return;
      }
      if (other.HasZombieId) {
        ZombieId = other.ZombieId;
      }
      if (other.HasPlayerId) {
        PlayerId = other.PlayerId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ZombieId = input.ReadInt32();
            break;
          }
          case 16: {
            PlayerId = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ZombieId = input.ReadInt32();
            break;
          }
          case 16: {
            PlayerId = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class HitLastEffectInfo : pb::IMessage<HitLastEffectInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<HitLastEffectInfo> _parser = new pb::MessageParser<HitLastEffectInfo>(() => new HitLastEffectInfo());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<HitLastEffectInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HorrorHospitalData.HospitalDataClassReflection.Descriptor.MessageTypes[19]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public HitLastEffectInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public HitLastEffectInfo(HitLastEffectInfo other) : this() {
      _hasBits0 = other._hasBits0;
      skillId_ = other.skillId_;
      playerId_ = other.playerId_;
      zombieId_ = other.zombieId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public HitLastEffectInfo Clone() {
      return new HitLastEffectInfo(this);
    }

    /// <summary>Field number for the "skillId" field.</summary>
    public const int SkillIdFieldNumber = 1;
    private readonly static int SkillIdDefaultValue = 0;

    private int skillId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int SkillId {
      get { if ((_hasBits0 & 1) != 0) { return skillId_; } else { return SkillIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        skillId_ = value;
      }
    }
    /// <summary>Gets whether the "skillId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSkillId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "skillId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSkillId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "playerId" field.</summary>
    public const int PlayerIdFieldNumber = 2;
    private readonly static int PlayerIdDefaultValue = 0;

    private int playerId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int PlayerId {
      get { if ((_hasBits0 & 2) != 0) { return playerId_; } else { return PlayerIdDefaultValue; } }
      set {
        _hasBits0 |= 2;
        playerId_ = value;
      }
    }
    /// <summary>Gets whether the "playerId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPlayerId {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "playerId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPlayerId() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "zombieId" field.</summary>
    public const int ZombieIdFieldNumber = 3;
    private readonly static int ZombieIdDefaultValue = 0;

    private int zombieId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ZombieId {
      get { if ((_hasBits0 & 4) != 0) { return zombieId_; } else { return ZombieIdDefaultValue; } }
      set {
        _hasBits0 |= 4;
        zombieId_ = value;
      }
    }
    /// <summary>Gets whether the "zombieId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasZombieId {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "zombieId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearZombieId() {
      _hasBits0 &= ~4;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as HitLastEffectInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(HitLastEffectInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SkillId != other.SkillId) return false;
      if (PlayerId != other.PlayerId) return false;
      if (ZombieId != other.ZombieId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasSkillId) hash ^= SkillId.GetHashCode();
      if (HasPlayerId) hash ^= PlayerId.GetHashCode();
      if (HasZombieId) hash ^= ZombieId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasSkillId) {
        output.WriteRawTag(8);
        output.WriteInt32(SkillId);
      }
      if (HasPlayerId) {
        output.WriteRawTag(16);
        output.WriteInt32(PlayerId);
      }
      if (HasZombieId) {
        output.WriteRawTag(24);
        output.WriteInt32(ZombieId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasSkillId) {
        output.WriteRawTag(8);
        output.WriteInt32(SkillId);
      }
      if (HasPlayerId) {
        output.WriteRawTag(16);
        output.WriteInt32(PlayerId);
      }
      if (HasZombieId) {
        output.WriteRawTag(24);
        output.WriteInt32(ZombieId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasSkillId) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SkillId);
      }
      if (HasPlayerId) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PlayerId);
      }
      if (HasZombieId) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ZombieId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(HitLastEffectInfo other) {
      if (other == null) {
        return;
      }
      if (other.HasSkillId) {
        SkillId = other.SkillId;
      }
      if (other.HasPlayerId) {
        PlayerId = other.PlayerId;
      }
      if (other.HasZombieId) {
        ZombieId = other.ZombieId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            SkillId = input.ReadInt32();
            break;
          }
          case 16: {
            PlayerId = input.ReadInt32();
            break;
          }
          case 24: {
            ZombieId = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            SkillId = input.ReadInt32();
            break;
          }
          case 16: {
            PlayerId = input.ReadInt32();
            break;
          }
          case 24: {
            ZombieId = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class BuildingUnitHPInfo : pb::IMessage<BuildingUnitHPInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<BuildingUnitHPInfo> _parser = new pb::MessageParser<BuildingUnitHPInfo>(() => new BuildingUnitHPInfo());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<BuildingUnitHPInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HorrorHospitalData.HospitalDataClassReflection.Descriptor.MessageTypes[20]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BuildingUnitHPInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BuildingUnitHPInfo(BuildingUnitHPInfo other) : this() {
      _hasBits0 = other._hasBits0;
      iD_ = other.iD_;
      changeValue_ = other.changeValue_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BuildingUnitHPInfo Clone() {
      return new BuildingUnitHPInfo(this);
    }

    /// <summary>Field number for the "ID" field.</summary>
    public const int IDFieldNumber = 1;
    private readonly static int IDDefaultValue = 0;

    private int iD_;
    /// <summary>
    ///建筑单位Id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ID {
      get { if ((_hasBits0 & 1) != 0) { return iD_; } else { return IDDefaultValue; } }
      set {
        _hasBits0 |= 1;
        iD_ = value;
      }
    }
    /// <summary>Gets whether the "ID" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasID {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "ID" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearID() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "changeValue" field.</summary>
    public const int ChangeValueFieldNumber = 2;
    private readonly static int ChangeValueDefaultValue = 0;

    private int changeValue_;
    /// <summary>
    ///改变值 正负
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ChangeValue {
      get { if ((_hasBits0 & 2) != 0) { return changeValue_; } else { return ChangeValueDefaultValue; } }
      set {
        _hasBits0 |= 2;
        changeValue_ = value;
      }
    }
    /// <summary>Gets whether the "changeValue" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasChangeValue {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "changeValue" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearChangeValue() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as BuildingUnitHPInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(BuildingUnitHPInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ID != other.ID) return false;
      if (ChangeValue != other.ChangeValue) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasID) hash ^= ID.GetHashCode();
      if (HasChangeValue) hash ^= ChangeValue.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasID) {
        output.WriteRawTag(8);
        output.WriteInt32(ID);
      }
      if (HasChangeValue) {
        output.WriteRawTag(16);
        output.WriteInt32(ChangeValue);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasID) {
        output.WriteRawTag(8);
        output.WriteInt32(ID);
      }
      if (HasChangeValue) {
        output.WriteRawTag(16);
        output.WriteInt32(ChangeValue);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasID) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ID);
      }
      if (HasChangeValue) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ChangeValue);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(BuildingUnitHPInfo other) {
      if (other == null) {
        return;
      }
      if (other.HasID) {
        ID = other.ID;
      }
      if (other.HasChangeValue) {
        ChangeValue = other.ChangeValue;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ID = input.ReadInt32();
            break;
          }
          case 16: {
            ChangeValue = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ID = input.ReadInt32();
            break;
          }
          case 16: {
            ChangeValue = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class BuildingUnitStateInfo : pb::IMessage<BuildingUnitStateInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<BuildingUnitStateInfo> _parser = new pb::MessageParser<BuildingUnitStateInfo>(() => new BuildingUnitStateInfo());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<BuildingUnitStateInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HorrorHospitalData.HospitalDataClassReflection.Descriptor.MessageTypes[21]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BuildingUnitStateInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BuildingUnitStateInfo(BuildingUnitStateInfo other) : this() {
      _hasBits0 = other._hasBits0;
      iD_ = other.iD_;
      state_ = other.state_;
      hp_ = other.hp_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BuildingUnitStateInfo Clone() {
      return new BuildingUnitStateInfo(this);
    }

    /// <summary>Field number for the "ID" field.</summary>
    public const int IDFieldNumber = 1;
    private readonly static int IDDefaultValue = 0;

    private int iD_;
    /// <summary>
    ///建筑单位Id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ID {
      get { if ((_hasBits0 & 1) != 0) { return iD_; } else { return IDDefaultValue; } }
      set {
        _hasBits0 |= 1;
        iD_ = value;
      }
    }
    /// <summary>Gets whether the "ID" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasID {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "ID" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearID() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "state" field.</summary>
    public const int StateFieldNumber = 2;
    private readonly static int StateDefaultValue = 0;

    private int state_;
    /// <summary>
    ///状态
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int State {
      get { if ((_hasBits0 & 2) != 0) { return state_; } else { return StateDefaultValue; } }
      set {
        _hasBits0 |= 2;
        state_ = value;
      }
    }
    /// <summary>Gets whether the "state" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasState {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "state" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearState() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "hp" field.</summary>
    public const int HpFieldNumber = 3;
    private readonly static int HpDefaultValue = 0;

    private int hp_;
    /// <summary>
    ///当前hp
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Hp {
      get { if ((_hasBits0 & 4) != 0) { return hp_; } else { return HpDefaultValue; } }
      set {
        _hasBits0 |= 4;
        hp_ = value;
      }
    }
    /// <summary>Gets whether the "hp" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasHp {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "hp" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearHp() {
      _hasBits0 &= ~4;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as BuildingUnitStateInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(BuildingUnitStateInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ID != other.ID) return false;
      if (State != other.State) return false;
      if (Hp != other.Hp) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasID) hash ^= ID.GetHashCode();
      if (HasState) hash ^= State.GetHashCode();
      if (HasHp) hash ^= Hp.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasID) {
        output.WriteRawTag(8);
        output.WriteInt32(ID);
      }
      if (HasState) {
        output.WriteRawTag(16);
        output.WriteInt32(State);
      }
      if (HasHp) {
        output.WriteRawTag(24);
        output.WriteInt32(Hp);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasID) {
        output.WriteRawTag(8);
        output.WriteInt32(ID);
      }
      if (HasState) {
        output.WriteRawTag(16);
        output.WriteInt32(State);
      }
      if (HasHp) {
        output.WriteRawTag(24);
        output.WriteInt32(Hp);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasID) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ID);
      }
      if (HasState) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(State);
      }
      if (HasHp) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Hp);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(BuildingUnitStateInfo other) {
      if (other == null) {
        return;
      }
      if (other.HasID) {
        ID = other.ID;
      }
      if (other.HasState) {
        State = other.State;
      }
      if (other.HasHp) {
        Hp = other.Hp;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ID = input.ReadInt32();
            break;
          }
          case 16: {
            State = input.ReadInt32();
            break;
          }
          case 24: {
            Hp = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ID = input.ReadInt32();
            break;
          }
          case 16: {
            State = input.ReadInt32();
            break;
          }
          case 24: {
            Hp = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class DropPointInfo : pb::IMessage<DropPointInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DropPointInfo> _parser = new pb::MessageParser<DropPointInfo>(() => new DropPointInfo());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<DropPointInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HorrorHospitalData.HospitalDataClassReflection.Descriptor.MessageTypes[22]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DropPointInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DropPointInfo(DropPointInfo other) : this() {
      _hasBits0 = other._hasBits0;
      iD_ = other.iD_;
      num_ = other.num_;
      state_ = other.state_;
      createTime_ = other.createTime_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DropPointInfo Clone() {
      return new DropPointInfo(this);
    }

    /// <summary>Field number for the "ID" field.</summary>
    public const int IDFieldNumber = 1;
    private readonly static int IDDefaultValue = 0;

    private int iD_;
    /// <summary>
    ///Id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ID {
      get { if ((_hasBits0 & 1) != 0) { return iD_; } else { return IDDefaultValue; } }
      set {
        _hasBits0 |= 1;
        iD_ = value;
      }
    }
    /// <summary>Gets whether the "ID" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasID {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "ID" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearID() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "num" field.</summary>
    public const int NumFieldNumber = 2;
    private readonly static int NumDefaultValue = 0;

    private int num_;
    /// <summary>
    ///已经创建一次了
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Num {
      get { if ((_hasBits0 & 2) != 0) { return num_; } else { return NumDefaultValue; } }
      set {
        _hasBits0 |= 2;
        num_ = value;
      }
    }
    /// <summary>Gets whether the "num" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasNum {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "num" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearNum() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "state" field.</summary>
    public const int StateFieldNumber = 3;
    private readonly static int StateDefaultValue = 0;

    private int state_;
    /// <summary>
    ///状态
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int State {
      get { if ((_hasBits0 & 4) != 0) { return state_; } else { return StateDefaultValue; } }
      set {
        _hasBits0 |= 4;
        state_ = value;
      }
    }
    /// <summary>Gets whether the "state" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasState {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "state" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearState() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "createTime" field.</summary>
    public const int CreateTimeFieldNumber = 4;
    private readonly static int CreateTimeDefaultValue = 0;

    private int createTime_;
    /// <summary>
    ///创建的时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CreateTime {
      get { if ((_hasBits0 & 8) != 0) { return createTime_; } else { return CreateTimeDefaultValue; } }
      set {
        _hasBits0 |= 8;
        createTime_ = value;
      }
    }
    /// <summary>Gets whether the "createTime" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCreateTime {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "createTime" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCreateTime() {
      _hasBits0 &= ~8;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as DropPointInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(DropPointInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ID != other.ID) return false;
      if (Num != other.Num) return false;
      if (State != other.State) return false;
      if (CreateTime != other.CreateTime) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasID) hash ^= ID.GetHashCode();
      if (HasNum) hash ^= Num.GetHashCode();
      if (HasState) hash ^= State.GetHashCode();
      if (HasCreateTime) hash ^= CreateTime.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasID) {
        output.WriteRawTag(8);
        output.WriteInt32(ID);
      }
      if (HasNum) {
        output.WriteRawTag(16);
        output.WriteInt32(Num);
      }
      if (HasState) {
        output.WriteRawTag(24);
        output.WriteInt32(State);
      }
      if (HasCreateTime) {
        output.WriteRawTag(32);
        output.WriteInt32(CreateTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasID) {
        output.WriteRawTag(8);
        output.WriteInt32(ID);
      }
      if (HasNum) {
        output.WriteRawTag(16);
        output.WriteInt32(Num);
      }
      if (HasState) {
        output.WriteRawTag(24);
        output.WriteInt32(State);
      }
      if (HasCreateTime) {
        output.WriteRawTag(32);
        output.WriteInt32(CreateTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasID) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ID);
      }
      if (HasNum) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Num);
      }
      if (HasState) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(State);
      }
      if (HasCreateTime) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CreateTime);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(DropPointInfo other) {
      if (other == null) {
        return;
      }
      if (other.HasID) {
        ID = other.ID;
      }
      if (other.HasNum) {
        Num = other.Num;
      }
      if (other.HasState) {
        State = other.State;
      }
      if (other.HasCreateTime) {
        CreateTime = other.CreateTime;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ID = input.ReadInt32();
            break;
          }
          case 16: {
            Num = input.ReadInt32();
            break;
          }
          case 24: {
            State = input.ReadInt32();
            break;
          }
          case 32: {
            CreateTime = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ID = input.ReadInt32();
            break;
          }
          case 16: {
            Num = input.ReadInt32();
            break;
          }
          case 24: {
            State = input.ReadInt32();
            break;
          }
          case 32: {
            CreateTime = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ZombieUsedSKillsInfo : pb::IMessage<ZombieUsedSKillsInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ZombieUsedSKillsInfo> _parser = new pb::MessageParser<ZombieUsedSKillsInfo>(() => new ZombieUsedSKillsInfo());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ZombieUsedSKillsInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HorrorHospitalData.HospitalDataClassReflection.Descriptor.MessageTypes[23]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ZombieUsedSKillsInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ZombieUsedSKillsInfo(ZombieUsedSKillsInfo other) : this() {
      _hasBits0 = other._hasBits0;
      zombieId_ = other.zombieId_;
      count_ = other.count_;
      iDList_ = other.iDList_.Clone();
      atkTime_ = other.atkTime_;
      idleElapseTime_ = other.idleElapseTime_;
      walkElapseTime_ = other.walkElapseTime_;
      attackElapseTime_ = other.attackElapseTime_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ZombieUsedSKillsInfo Clone() {
      return new ZombieUsedSKillsInfo(this);
    }

    /// <summary>Field number for the "ZombieId" field.</summary>
    public const int ZombieIdFieldNumber = 1;
    private readonly static int ZombieIdDefaultValue = 0;

    private int zombieId_;
    /// <summary>
    ///boss 客户端编号
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ZombieId {
      get { if ((_hasBits0 & 1) != 0) { return zombieId_; } else { return ZombieIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        zombieId_ = value;
      }
    }
    /// <summary>Gets whether the "ZombieId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasZombieId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "ZombieId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearZombieId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "Count" field.</summary>
    public const int CountFieldNumber = 2;
    private readonly static int CountDefaultValue = 0;

    private int count_;
    /// <summary>
    ///释放技能计数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Count {
      get { if ((_hasBits0 & 2) != 0) { return count_; } else { return CountDefaultValue; } }
      set {
        _hasBits0 |= 2;
        count_ = value;
      }
    }
    /// <summary>Gets whether the "Count" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCount {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "Count" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCount() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "IDList" field.</summary>
    public const int IDListFieldNumber = 3;
    private static readonly pb::FieldCodec<int> _repeated_iDList_codec
        = pb::FieldCodec.ForInt32(24);
    private readonly pbc::RepeatedField<int> iDList_ = new pbc::RepeatedField<int>();
    /// <summary>
    ///释放技能Id列表
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<int> IDList {
      get { return iDList_; }
    }

    /// <summary>Field number for the "AtkTime" field.</summary>
    public const int AtkTimeFieldNumber = 4;
    private readonly static float AtkTimeDefaultValue = 0F;

    private float atkTime_;
    /// <summary>
    ///本次释放技能时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float AtkTime {
      get { if ((_hasBits0 & 4) != 0) { return atkTime_; } else { return AtkTimeDefaultValue; } }
      set {
        _hasBits0 |= 4;
        atkTime_ = value;
      }
    }
    /// <summary>Gets whether the "AtkTime" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAtkTime {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "AtkTime" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAtkTime() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "IdleElapseTime" field.</summary>
    public const int IdleElapseTimeFieldNumber = 5;
    private readonly static float IdleElapseTimeDefaultValue = 0F;

    private float idleElapseTime_;
    /// <summary>
    ///本次待机状态耗时
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float IdleElapseTime {
      get { if ((_hasBits0 & 8) != 0) { return idleElapseTime_; } else { return IdleElapseTimeDefaultValue; } }
      set {
        _hasBits0 |= 8;
        idleElapseTime_ = value;
      }
    }
    /// <summary>Gets whether the "IdleElapseTime" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIdleElapseTime {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "IdleElapseTime" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIdleElapseTime() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "WalkElapseTime" field.</summary>
    public const int WalkElapseTimeFieldNumber = 6;
    private readonly static float WalkElapseTimeDefaultValue = 0F;

    private float walkElapseTime_;
    /// <summary>
    ///本次移动状态耗时
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float WalkElapseTime {
      get { if ((_hasBits0 & 16) != 0) { return walkElapseTime_; } else { return WalkElapseTimeDefaultValue; } }
      set {
        _hasBits0 |= 16;
        walkElapseTime_ = value;
      }
    }
    /// <summary>Gets whether the "WalkElapseTime" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasWalkElapseTime {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "WalkElapseTime" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearWalkElapseTime() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "AttackElapseTime" field.</summary>
    public const int AttackElapseTimeFieldNumber = 7;
    private readonly static float AttackElapseTimeDefaultValue = 0F;

    private float attackElapseTime_;
    /// <summary>
    ///本次攻击状态时长
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float AttackElapseTime {
      get { if ((_hasBits0 & 32) != 0) { return attackElapseTime_; } else { return AttackElapseTimeDefaultValue; } }
      set {
        _hasBits0 |= 32;
        attackElapseTime_ = value;
      }
    }
    /// <summary>Gets whether the "AttackElapseTime" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAttackElapseTime {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "AttackElapseTime" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAttackElapseTime() {
      _hasBits0 &= ~32;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ZombieUsedSKillsInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ZombieUsedSKillsInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ZombieId != other.ZombieId) return false;
      if (Count != other.Count) return false;
      if(!iDList_.Equals(other.iDList_)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(AtkTime, other.AtkTime)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(IdleElapseTime, other.IdleElapseTime)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(WalkElapseTime, other.WalkElapseTime)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(AttackElapseTime, other.AttackElapseTime)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasZombieId) hash ^= ZombieId.GetHashCode();
      if (HasCount) hash ^= Count.GetHashCode();
      hash ^= iDList_.GetHashCode();
      if (HasAtkTime) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(AtkTime);
      if (HasIdleElapseTime) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(IdleElapseTime);
      if (HasWalkElapseTime) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(WalkElapseTime);
      if (HasAttackElapseTime) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(AttackElapseTime);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasZombieId) {
        output.WriteRawTag(8);
        output.WriteInt32(ZombieId);
      }
      if (HasCount) {
        output.WriteRawTag(16);
        output.WriteInt32(Count);
      }
      iDList_.WriteTo(output, _repeated_iDList_codec);
      if (HasAtkTime) {
        output.WriteRawTag(37);
        output.WriteFloat(AtkTime);
      }
      if (HasIdleElapseTime) {
        output.WriteRawTag(45);
        output.WriteFloat(IdleElapseTime);
      }
      if (HasWalkElapseTime) {
        output.WriteRawTag(53);
        output.WriteFloat(WalkElapseTime);
      }
      if (HasAttackElapseTime) {
        output.WriteRawTag(61);
        output.WriteFloat(AttackElapseTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasZombieId) {
        output.WriteRawTag(8);
        output.WriteInt32(ZombieId);
      }
      if (HasCount) {
        output.WriteRawTag(16);
        output.WriteInt32(Count);
      }
      iDList_.WriteTo(ref output, _repeated_iDList_codec);
      if (HasAtkTime) {
        output.WriteRawTag(37);
        output.WriteFloat(AtkTime);
      }
      if (HasIdleElapseTime) {
        output.WriteRawTag(45);
        output.WriteFloat(IdleElapseTime);
      }
      if (HasWalkElapseTime) {
        output.WriteRawTag(53);
        output.WriteFloat(WalkElapseTime);
      }
      if (HasAttackElapseTime) {
        output.WriteRawTag(61);
        output.WriteFloat(AttackElapseTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasZombieId) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ZombieId);
      }
      if (HasCount) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Count);
      }
      size += iDList_.CalculateSize(_repeated_iDList_codec);
      if (HasAtkTime) {
        size += 1 + 4;
      }
      if (HasIdleElapseTime) {
        size += 1 + 4;
      }
      if (HasWalkElapseTime) {
        size += 1 + 4;
      }
      if (HasAttackElapseTime) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ZombieUsedSKillsInfo other) {
      if (other == null) {
        return;
      }
      if (other.HasZombieId) {
        ZombieId = other.ZombieId;
      }
      if (other.HasCount) {
        Count = other.Count;
      }
      iDList_.Add(other.iDList_);
      if (other.HasAtkTime) {
        AtkTime = other.AtkTime;
      }
      if (other.HasIdleElapseTime) {
        IdleElapseTime = other.IdleElapseTime;
      }
      if (other.HasWalkElapseTime) {
        WalkElapseTime = other.WalkElapseTime;
      }
      if (other.HasAttackElapseTime) {
        AttackElapseTime = other.AttackElapseTime;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ZombieId = input.ReadInt32();
            break;
          }
          case 16: {
            Count = input.ReadInt32();
            break;
          }
          case 26:
          case 24: {
            iDList_.AddEntriesFrom(input, _repeated_iDList_codec);
            break;
          }
          case 37: {
            AtkTime = input.ReadFloat();
            break;
          }
          case 45: {
            IdleElapseTime = input.ReadFloat();
            break;
          }
          case 53: {
            WalkElapseTime = input.ReadFloat();
            break;
          }
          case 61: {
            AttackElapseTime = input.ReadFloat();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ZombieId = input.ReadInt32();
            break;
          }
          case 16: {
            Count = input.ReadInt32();
            break;
          }
          case 26:
          case 24: {
            iDList_.AddEntriesFrom(ref input, _repeated_iDList_codec);
            break;
          }
          case 37: {
            AtkTime = input.ReadFloat();
            break;
          }
          case 45: {
            IdleElapseTime = input.ReadFloat();
            break;
          }
          case 53: {
            WalkElapseTime = input.ReadFloat();
            break;
          }
          case 61: {
            AttackElapseTime = input.ReadFloat();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
